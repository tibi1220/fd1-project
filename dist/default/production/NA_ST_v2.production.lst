

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 29 22:18:00 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Version 2.40
    49                           ; Generated 17/11/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F452 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataBANK0
    85   001B6A                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for _debouncers
    89   001B6A  DE                 	db	low _debounce_col_0
    90   001B6B  1A                 	db	high _debounce_col_0
    91   001B6C  BC                 	db	low _debounce_col_1
    92   001B6D  1A                 	db	high _debounce_col_1
    93   001B6E  9A                 	db	low _debounce_col_2
    94   001B6F  1A                 	db	high _debounce_col_2
    95   001B70  00                 	db	low _debounce_col_3
    96   001B71  1B                 	db	high _debounce_col_3
    97                           
    98                           	psect	smallconst
    99   000600                     __psmallconst:
   100                           	callstack 0
   101   000600  00                 	db	0
   102   000601  0000               	dw	0
   103   000603  0000               	dw	0
   104   000605  CFDC               	dw	53212
   105   000607  35D1               	dw	13777
   106   000609                     __end_of_dp_l:
   107                           	callstack 0
   108   000609  0000               	dw	0
   109   00060B  0000               	dw	0
   110   00060D  C000               	dw	49152
   111   00060F  3F15               	dw	16149
   112   000611                     __end_of_dp_h:
   113                           	callstack 0
   114   000611  4260               	dw	16992
   115   000613  0DA2               	dw	3490
   116   000615                     __end_of_tiny@sqrtf$F1482:
   117                           	callstack 0
   118   000615  A570               	dw	42352
   119   000617  36EC               	dw	14060
   120   000619                     __end_of_ivln2_l:
   121                           	callstack 0
   122   000619  AA3B               	dw	43579
   123   00061B  3FB8               	dw	16312
   124   00061D                     __end_of_ivln2:
   125                           	callstack 0
   126   00061D  384F               	dw	14415
   127   00061F  3F76               	dw	16246
   128   000621                     __end_of_cp:
   129                           	callstack 0
   130   000621  AA3C               	dw	43580
   131   000623  3338               	dw	13112
   132   000625                     __end_of_ovt:
   133                           	callstack 0
   134   000625  BE8C               	dw	48780
   135   000627  35BF               	dw	13759
   136   000629                     __end_of_lg2_l:
   137                           	callstack 0
   138   000629  7200               	dw	29184
   139   00062B  3F31               	dw	16177
   140   00062D                     __end_of_lg2_h:
   141                           	callstack 0
   142   00062D  7218               	dw	29208
   143   00062F  3F31               	dw	16177
   144   000631                     __end_of_lg2:
   145                           	callstack 0
   146   000631  BB4C               	dw	47948
   147   000633  3331               	dw	13105
   148   000635                     __end_of_P5:
   149                           	callstack 0
   150   000635  EA0E               	dw	59918
   151   000637  B5DD               	dw	46557
   152   000639                     __end_of_P4:
   153                           	callstack 0
   154   000639  B355               	dw	45909
   155   00063B  388A               	dw	14474
   156   00063D                     __end_of_P3:
   157                           	callstack 0
   158   00063D  0B61               	dw	2913
   159   00063F  BB36               	dw	47926
   160   000641                     __end_of_P2:
   161                           	callstack 0
   162   000641  AAAB               	dw	43691
   163   000643  3E2A               	dw	15914
   164   000645                     __end_of_P1:
   165                           	callstack 0
   166   000645  F142               	dw	61762
   167   000647  3E53               	dw	15955
   168   000649                     __end_of_L6:
   169                           	callstack 0
   170   000649  3255               	dw	12885
   171   00064B  3E6C               	dw	15980
   172   00064D                     __end_of_L5:
   173                           	callstack 0
   174   00064D  A305               	dw	41733
   175   00064F  3E8B               	dw	16011
   176   000651                     __end_of_L4:
   177                           	callstack 0
   178   000651  AAAB               	dw	43691
   179   000653  3EAA               	dw	16042
   180   000655                     __end_of_L3:
   181                           	callstack 0
   182   000655  6DB7               	dw	28087
   183   000657  3EDB               	dw	16091
   184   000659                     __end_of_L2:
   185                           	callstack 0
   186   000659  999A               	dw	39322
   187   00065B  3F19               	dw	16153
   188   00065D                     __end_of_L1:
   189                           	callstack 0
   190   00065D  4260               	dw	16992
   191   00065F  0DA2               	dw	3490
   192   000661                     __end_of_tiny:
   193                           	callstack 0
   194   000661  F2CA               	dw	62154
   195   000663  7149               	dw	29001
   196   000665                     __end_of_huge:
   197                           	callstack 0
   198   000665  0000               	dw	0
   199   000667  4B80               	dw	19328
   200   000669                     __end_of_two24:
   201                           	callstack 0
   202   000669  0000               	dw	0
   203   00066B  3F80               	dw	16256
   204   00066D  0000               	dw	0
   205   00066F  3FC0               	dw	16320
   206   000671                     __end_of_bp:
   207                           	callstack 0
   208   000671  AA00               	dw	43520
   209   000673  3FB8               	dw	16312
   210   000675                     __end_of_ivln2_h:
   211                           	callstack 0
   212   000675  23C6               	dw	9158
   213   000677  B8F6               	dw	47350
   214   000679                     __end_of_cp_l:
   215                           	callstack 0
   216   000679  4000               	dw	16384
   217   00067B  3F76               	dw	16246
   218   00067D                     __end_of_cp_h:
   219                           	callstack 0
   220   000000                     _PORTBbits	set	3969
   221   000000                     _TRISB	set	3987
   222   000000                     _PORTAbits	set	3968
   223   000000                     _PORTCbits	set	3970
   224   000000                     _TRISA	set	3986
   225   000000                     _LATD	set	3980
   226   000000                     _LATBbits	set	3978
   227   000000                     _PORTDbits	set	3971
   228   000000                     _LATDbits	set	3980
   229   000000                     _TRISAbits	set	3986
   230   000000                     _TRISCbits	set	3988
   231   000000                     _INTCON2bits	set	4081
   232   000000                     _TRISEbits	set	3990
   233   000000                     _TRISD	set	3989
   234   000000                     _LATEbits	set	3981
   235   00067D                     STR_1:
   236   00067D  48                 	db	72	;'H'
   237   00067E  65                 	db	101	;'e'
   238   00067F  6C                 	db	108	;'l'
   239   000680  6C                 	db	108	;'l'
   240   000681  6F                 	db	111	;'o'
   241   000682  20                 	db	32
   242   000683  57                 	db	87	;'W'
   243   000684  6F                 	db	111	;'o'
   244   000685  72                 	db	114	;'r'
   245   000686  6C                 	db	108	;'l'
   246   000687  64                 	db	100	;'d'
   247   000688  21                 	db	33
   248   000689  25                 	db	37
   249   00068A  64                 	db	100	;'d'
   250   00068B  00                 	db	0
   251   00068C                     STR_4:
   252   00068C  30                 	db	48	;'0'
   253   00068D  78                 	db	120	;'x'
   254   00068E  25                 	db	37
   255   00068F  58                 	db	88	;'X'
   256   000690  00                 	db	0
   257   000691  00                 	db	0	; dummy byte at the end
   258   000000                     
   259                           ; #config settings
   260                           
   261                           	psect	cinit
   262   001A00                     __pcinit:
   263                           	callstack 0
   264   001A00                     start_initialization:
   265                           	callstack 0
   266   001A00                     __initialization:
   267                           	callstack 0
   268                           
   269                           ; Initialize objects allocated to BANK0 (8 bytes)
   270                           ; load TBLPTR registers with __pidataBANK0
   271   001A00  0E6A               	movlw	low __pidataBANK0
   272   001A02  6EF6               	movwf	tblptrl,c
   273   001A04  0E1B               	movlw	high __pidataBANK0
   274   001A06  6EF7               	movwf	tblptrh,c
   275   001A08  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   276   001A0A  6EF8               	movwf	tblptru,c
   277   001A0C  EE00  F0C9         	lfsr	0,__pdataBANK0
   278   001A10  EE10 F008          	lfsr	1,8
   279   001A14                     copy_data0:
   280   001A14  0009               	tblrd		*+
   281   001A16  CFF5 FFEE          	movff	tablat,postinc0
   282   001A1A  50E5               	movf	postdec1,w,c
   283   001A1C  50E1               	movf	fsr1l,w,c
   284   001A1E  E1FA               	bnz	copy_data0
   285                           
   286                           ; Clear objects allocated to BANK0 (73 bytes)
   287   001A20  EE00  F080         	lfsr	0,__pbssBANK0
   288   001A24  0E49               	movlw	73
   289   001A26                     clear_0:
   290   001A26  6AEE               	clrf	postinc0,c
   291   001A28  06E8               	decf	wreg,f,c
   292   001A2A  E1FD               	bnz	clear_0
   293                           
   294                           ; Clear objects allocated to COMRAM (8 bytes)
   295   001A2C  EE00  F078         	lfsr	0,__pbssCOMRAM
   296   001A30  0E08               	movlw	8
   297   001A32                     clear_1:
   298   001A32  6AEE               	clrf	postinc0,c
   299   001A34  06E8               	decf	wreg,f,c
   300   001A36  E1FD               	bnz	clear_1
   301   001A38                     end_of_initialization:
   302                           	callstack 0
   303   001A38                     __end_of__initialization:
   304                           	callstack 0
   305   001A38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   306   001A3A  6EF8               	movwf	tblptru,c
   307   001A3C  0100               	movlb	0
   308   001A3E  EF1A  F009         	goto	_main	;jump to C main() function
   309                           
   310                           	psect	bssCOMRAM
   311   000078                     __pbssCOMRAM:
   312                           	callstack 0
   313   000078                     _prec:
   314                           	callstack 0
   315   000078                     	ds	2
   316   00007A                     _d:
   317                           	callstack 0
   318   00007A                     	ds	2
   319   00007C                     _h:
   320                           	callstack 0
   321   00007C                     	ds	2
   322   00007E                     _flags:
   323                           	callstack 0
   324   00007E                     	ds	1
   325   00007F                     _state:
   326                           	callstack 0
   327   00007F                     	ds	1
   328                           
   329                           	psect	bssBANK0
   330   000080                     __pbssBANK0:
   331                           	callstack 0
   332   000080                     fabsf@F465:
   333                           	callstack 0
   334   000080                     	ds	4
   335   000084                     _errno:
   336                           	callstack 0
   337   000084                     	ds	2
   338   000086                     _width:
   339                           	callstack 0
   340   000086                     	ds	2
   341   000088                     _lcd:
   342                           	callstack 0
   343   000088                     	ds	33
   344   0000A9                     _dbuf:
   345                           	callstack 0
   346   0000A9                     	ds	32
   347                           
   348                           	psect	dataBANK0
   349   0000C9                     __pdataBANK0:
   350                           	callstack 0
   351   0000C9                     _debouncers:
   352                           	callstack 0
   353   0000C9                     	ds	8
   354                           
   355                           	psect	cstackCOMRAM
   356   000001                     __pcstackCOMRAM:
   357                           	callstack 0
   358   000001                     ?_eeprom_93c46_read:
   359                           	callstack 0
   360   000001                     ?_get_pressed_button_col:
   361                           	callstack 0
   362   000001                     ?___aodiv:
   363                           	callstack 0
   364   000001                     ?___aomod:
   365                           	callstack 0
   366   000001                     lcd_data@rs:
   367                           	callstack 0
   368   000001                     debounce_button@id:
   369                           	callstack 0
   370   000001                     memset@dest:
   371                           	callstack 0
   372   000001                     fputc@c:
   373                           	callstack 0
   374   000001                     ___aodiv@dividend:
   375                           	callstack 0
   376   000001                     ___aomod@dividend:
   377                           	callstack 0
   378                           
   379                           ; 8 bytes @ 0x0
   380   000001                     	ds	1
   381   000002                     lcd_data@b:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x1
   385   000002                     	ds	1
   386   000003                     ??_debounce_button:
   387   000003                     ?_get_pressed_button:
   388                           	callstack 0
   389   000003                     lcd_data@bf:
   390                           	callstack 0
   391   000003                     memset@c:
   392                           	callstack 0
   393   000003                     fputc@fp:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397   000003                     	ds	1
   398   000004                     lcd_data@trisd_backup:
   399                           	callstack 0
   400   000004                     debounce_button@col:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x3
   404   000004                     	ds	1
   405   000005                     ??_fputc:
   406   000005                     lcd_update@i:
   407                           	callstack 0
   408   000005                     get_pressed_button@col:
   409                           	callstack 0
   410   000005                     memset@n:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x4
   414   000005                     	ds	2
   415   000007                     ??_memset:
   416   000007                     lcd_update@i_546:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x6
   420   000007                     	ds	2
   421   000009                     memset@k:
   422                           	callstack 0
   423   000009                     ___aodiv@divisor:
   424                           	callstack 0
   425   000009                     ___aomod@divisor:
   426                           	callstack 0
   427                           
   428                           ; 8 bytes @ 0x8
   429   000009                     	ds	1
   430   00000A                     fputs@s:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x9
   434   00000A                     	ds	1
   435   00000B                     memset@s:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xA
   439   00000B                     	ds	1
   440   00000C                     fputs@fp:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xB
   444   00000C                     	ds	1
   445   00000D                     ??_lcd_init:
   446   00000D                     
   447                           ; 1 bytes @ 0xC
   448   00000D                     	ds	1
   449   00000E                     fputs@c:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0xD
   453   00000E                     	ds	1
   454   00000F                     fputs@i:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xE
   458   00000F                     	ds	2
   459   000011                     ___aodiv@counter:
   460                           	callstack 0
   461   000011                     ___aomod@counter:
   462                           	callstack 0
   463   000011                     pad@fp:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x10
   467   000011                     	ds	1
   468   000012                     ___aodiv@sign:
   469                           	callstack 0
   470   000012                     ___aomod@sign:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x11
   474   000012                     	ds	1
   475   000013                     ?_abs:
   476                           	callstack 0
   477   000013                     pad@buf:
   478                           	callstack 0
   479   000013                     abs@a:
   480                           	callstack 0
   481   000013                     ___aodiv@quotient:
   482                           	callstack 0
   483                           
   484                           ; 8 bytes @ 0x12
   485   000013                     	ds	2
   486   000015                     ??_abs:
   487   000015                     pad@p:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x14
   491   000015                     	ds	2
   492   000017                     ??_pad:
   493                           
   494                           ; 1 bytes @ 0x16
   495   000017                     	ds	1
   496   000018                     pad@i:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x17
   500   000018                     	ds	2
   501   00001A                     pad@w:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x19
   505   00001A                     	ds	2
   506   00001C                     dtoa@fp:
   507                           	callstack 0
   508   00001C                     xtoa@fp:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x1B
   512   00001C                     	ds	2
   513   00001E                     dtoa@d:
   514                           	callstack 0
   515   00001E                     xtoa@d:
   516                           	callstack 0
   517                           
   518                           ; 8 bytes @ 0x1D
   519   00001E                     	ds	8
   520   000026                     ??_dtoa:
   521   000026                     ??_xtoa:
   522                           
   523                           ; 1 bytes @ 0x25
   524   000026                     	ds	8
   525   00002E                     _dtoa$1287:
   526                           	callstack 0
   527   00002E                     xtoa@w:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x2D
   531   00002E                     	ds	2
   532   000030                     dtoa@p:
   533                           	callstack 0
   534   000030                     _xtoa$1297:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x2F
   538   000030                     	ds	2
   539   000032                     dtoa@w:
   540                           	callstack 0
   541   000032                     xtoa@p:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x31
   545   000032                     	ds	2
   546   000034                     dtoa@n:
   547                           	callstack 0
   548   000034                     xtoa@n:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x33
   552   000034                     	ds	8
   553   00003C                     dtoa@i:
   554                           	callstack 0
   555   00003C                     xtoa@i:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x3B
   559   00003C                     	ds	2
   560   00003E                     dtoa@s:
   561                           	callstack 0
   562   00003E                     xtoa@c:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x3D
   566   00003E                     	ds	1
   567   00003F                     vfpfcnvrt@fp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x3E
   571   00003F                     	ds	2
   572   000041                     vfpfcnvrt@fmt:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x40
   576   000041                     	ds	2
   577   000043                     vfpfcnvrt@ap:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x42
   581   000043                     	ds	2
   582   000045                     ??_vfpfcnvrt:
   583                           
   584                           ; 1 bytes @ 0x44
   585   000045                     	ds	4
   586   000049                     vfpfcnvrt@convarg:
   587                           	callstack 0
   588                           
   589                           ; 8 bytes @ 0x48
   590   000049                     	ds	8
   591   000051                     vfpfcnvrt@cp:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x50
   595   000051                     	ds	2
   596   000053                     ?_vfprintf:
   597                           	callstack 0
   598   000053                     vfprintf@fp:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x52
   602   000053                     	ds	2
   603   000055                     vfprintf@fmt:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x54
   607   000055                     	ds	2
   608   000057                     vfprintf@ap:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x56
   612   000057                     	ds	2
   613   000059                     vfprintf@cfmt:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x58
   617   000059                     	ds	2
   618   00005B                     ?_sprintf:
   619                           	callstack 0
   620   00005B                     sprintf@s:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x5A
   624   00005B                     	ds	2
   625   00005D                     sprintf@fmt:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x5C
   629   00005D                     	ds	4
   630   000061                     sprintf@ap:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x60
   634   000061                     	ds	2
   635   000063                     sprintf@f:
   636                           	callstack 0
   637                           
   638                           ; 11 bytes @ 0x62
   639   000063                     	ds	11
   640   00006E                     ??_main:
   641                           
   642                           ; 1 bytes @ 0x6D
   643   00006E                     	ds	2
   644   000070                     main@state:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x6F
   648   000070                     	ds	2
   649   000072                     main@d:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x71
   653   000072                     	ds	2
   654   000074                     main@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x73
   658   000074                     	ds	2
   659   000076                     main@id:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x75
   663   000076                     	ds	2
   664                           
   665 ;;
   666 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   667 ;;
   668 ;; *************** function _main *****************
   669 ;; Defined at:
   670 ;;		line 11 in file "main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  id              2  117[COMRAM] int 
   675 ;;  i               2  115[COMRAM] int 
   676 ;;  d               2  113[COMRAM] unsigned int 
   677 ;;  state           2  111[COMRAM] int 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  2   28[None  ] int 
   680 ;; Registers used:
   681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   687 ;;      Params:         0       0       0       0       0       0       0
   688 ;;      Locals:         8       0       0       0       0       0       0
   689 ;;      Temps:          2       0       0       0       0       0       0
   690 ;;      Totals:        10       0       0       0       0       0       0
   691 ;;Total ram usage:       10 bytes
   692 ;; Hardware stack levels required when called: 8
   693 ;; This function calls:
   694 ;;		_buttons_init
   695 ;;		_debounce_button
   696 ;;		_eeprom_93c46_init
   697 ;;		_eeprom_93c46_read
   698 ;;		_get_pressed_button
   699 ;;		_lcd_cgram
   700 ;;		_lcd_cls
   701 ;;		_lcd_init
   702 ;;		_lcd_update
   703 ;;		_led_init
   704 ;;		_sprintf
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text0
   711   001234                     __ptext0:
   712                           	callstack 0
   713   001234                     _main:
   714                           	callstack 23
   715   001234  FFFF               	dw	65535	; assembler added errata NOP
   716                           
   717                           ;main.c: 14:     led_init();
   718   001236  EC9F  F00D         	call	_led_init	;wreg free
   719   00123A                     
   720                           ;main.c: 16:     buttons_init();
   721   00123A  EC91  F00D         	call	_buttons_init	;wreg free
   722   00123E                     
   723                           ;main.c: 18:     lcd_init();
   724   00123E  EC5D  F00C         	call	_lcd_init	;wreg free
   725   001242                     
   726                           ;main.c: 19:     lcd_cgram();
   727   001242  ECFF  F00B         	call	_lcd_cgram	;wreg free
   728   001246                     
   729                           ;main.c: 20:     lcd_cls();
   730   001246  EC3C  F00D         	call	_lcd_cls	;wreg free
   731   00124A                     
   732                           ;main.c: 22:     eeprom_93c46_init();
   733   00124A  ECAC  F00D         	call	_eeprom_93c46_init	;wreg free
   734   00124E                     
   735                           ;main.c: 24:     int i = 0;
   736   00124E  0E00               	movlw	0
   737   001250  6E75               	movwf	(main@i+1)^0,c
   738   001252  0E00               	movlw	0
   739   001254  6E74               	movwf	main@i^0,c
   740   001256                     
   741                           ;main.c: 26:     int state = 0;
   742   001256  0E00               	movlw	0
   743   001258  6E71               	movwf	(main@state+1)^0,c
   744   00125A  0E00               	movlw	0
   745   00125C  6E70               	movwf	main@state^0,c
   746   00125E                     
   747                           ;main.c: 27:     unsigned int d;;main.c: 29:     lcd_cls();
   748   00125E  EC3C  F00D         	call	_lcd_cls	;wreg free
   749   001262                     
   750                           ;main.c: 30:     sprintf(lcd, "Hello World!%d", i);
   751   001262  0E88               	movlw	low _lcd
   752   001264  6E5B               	movwf	sprintf@s^0,c
   753   001266  0E00               	movlw	high _lcd
   754   001268  6E5C               	movwf	(sprintf@s+1)^0,c
   755   00126A  0E7D               	movlw	low STR_1
   756   00126C  6E5D               	movwf	sprintf@fmt^0,c
   757   00126E  0E06               	movlw	high STR_1
   758   001270  6E5E               	movwf	(sprintf@fmt+1)^0,c
   759   001272  0E00               	movlw	0
   760   001274  6E60               	movwf	(?_sprintf+5)^0,c
   761   001276  0E00               	movlw	0
   762   001278  6E5F               	movwf	(?_sprintf+4)^0,c
   763   00127A  EC89  F00C         	call	_sprintf	;wreg free
   764   00127E                     l2449:
   765   00127E  FFFF               	dw	65535	; assembler added errata NOP
   766                           
   767                           ;main.c: 31:     lcd_update();
   768   001280  ECB3  F00A         	call	_lcd_update	;wreg free
   769   001284  EFB0  F009         	goto	l2481
   770   001288                     l2451:
   771   001288  FFFF               	dw	65535	; assembler added errata NOP
   772                           
   773                           ;main.c: 37:                 id = get_pressed_button();
   774   00128A  ECCA  F009         	call	_get_pressed_button	;wreg free
   775   00128E  C003  F076         	movff	?_get_pressed_button,main@id
   776   001292  C004  F077         	movff	?_get_pressed_button+1,main@id+1
   777   001296                     
   778                           ;main.c: 38:                 if (id == -1) continue;
   779   001296  2876               	incf	main@id^0,w,c
   780   001298  E106               	bnz	u1381
   781   00129A  2877               	incf	(main@id+1)^0,w,c
   782   00129C  A4D8               	btfss	status,2,c
   783   00129E  EF53  F009         	goto	u1381
   784   0012A2  EF56  F009         	goto	u1380
   785   0012A6                     u1381:
   786   0012A6  FFFF               	dw	65535	; assembler added errata NOP
   787   0012A8  EF59  F009         	goto	l2457
   788   0012AC                     u1380:
   789   0012AC  FFFF               	dw	65535	; assembler added errata NOP
   790   0012AE  EFB0  F009         	goto	l2481
   791   0012B2                     l2457:
   792   0012B2  FFFF               	dw	65535	; assembler added errata NOP
   793                           
   794                           ;main.c: 40:                 debounce_button(id);
   795   0012B4  C076  F001         	movff	main@id,debounce_button@id
   796   0012B8  C077  F002         	movff	main@id+1,debounce_button@id+1
   797   0012BC  ECCB  F00B         	call	_debounce_button	;wreg free
   798   0012C0                     
   799                           ;main.c: 41:                 i += id;
   800   0012C0  5076               	movf	main@id^0,w,c
   801   0012C2  2674               	addwf	main@i^0,f,c
   802   0012C4  5077               	movf	(main@id+1)^0,w,c
   803   0012C6  2275               	addwfc	(main@i+1)^0,f,c
   804   0012C8                     
   805                           ;main.c: 43:                 if (id == 15) {
   806   0012C8  0E0F               	movlw	15
   807   0012CA  1876               	xorwf	main@id^0,w,c
   808   0012CC  1077               	iorwf	(main@id+1)^0,w,c
   809   0012CE  A4D8               	btfss	status,2,c
   810   0012D0  EF6C  F009         	goto	u1391
   811   0012D4  EF6F  F009         	goto	u1390
   812   0012D8                     u1391:
   813   0012D8  FFFF               	dw	65535	; assembler added errata NOP
   814   0012DA  EF76  F009         	goto	l2465
   815   0012DE                     u1390:
   816   0012DE  FFFF               	dw	65535	; assembler added errata NOP
   817   0012E0                     
   818                           ;main.c: 44:                     state = 1;
   819   0012E0  0E00               	movlw	0
   820   0012E2  6E71               	movwf	(main@state+1)^0,c
   821   0012E4  0E01               	movlw	1
   822   0012E6  6E70               	movwf	main@state^0,c
   823                           
   824                           ;main.c: 45:                     break;
   825   0012E8  EFB0  F009         	goto	l2481
   826   0012EC                     l2465:
   827   0012EC  FFFF               	dw	65535	; assembler added errata NOP
   828                           
   829                           ;main.c: 48:                 lcd_cls();
   830   0012EE  EC3C  F00D         	call	_lcd_cls	;wreg free
   831   0012F2                     
   832                           ;main.c: 49:                 sprintf(lcd, "Hello World!%d", i);
   833   0012F2  0E88               	movlw	low _lcd
   834   0012F4  6E5B               	movwf	sprintf@s^0,c
   835   0012F6  0E00               	movlw	high _lcd
   836   0012F8  6E5C               	movwf	(sprintf@s+1)^0,c
   837   0012FA  0E7D               	movlw	low STR_1
   838   0012FC  6E5D               	movwf	sprintf@fmt^0,c
   839   0012FE  0E06               	movlw	high STR_1
   840   001300  6E5E               	movwf	(sprintf@fmt+1)^0,c
   841   001302  C074  F05F         	movff	main@i,?_sprintf+4
   842   001306  C075  F060         	movff	main@i+1,?_sprintf+5
   843   00130A  EC89  F00C         	call	_sprintf	;wreg free
   844   00130E  EF3F  F009         	goto	l2449
   845   001312                     l2471:
   846   001312  FFFF               	dw	65535	; assembler added errata NOP
   847                           
   848                           ;main.c: 55:                 d = eeprom_93c46_read();
   849   001314  EC21  F00D         	call	_eeprom_93c46_read	;wreg free
   850   001318  C001  F072         	movff	?_eeprom_93c46_read,main@d
   851   00131C  C002  F073         	movff	?_eeprom_93c46_read+1,main@d+1
   852   001320                     
   853                           ;main.c: 57:                 lcd_cls();
   854   001320  EC3C  F00D         	call	_lcd_cls	;wreg free
   855   001324                     
   856                           ;main.c: 58:                 sprintf(lcd, "%d", d);
   857   001324  0E88               	movlw	low _lcd
   858   001326  6E5B               	movwf	sprintf@s^0,c
   859   001328  0E00               	movlw	high _lcd
   860   00132A  6E5C               	movwf	(sprintf@s+1)^0,c
   861   00132C  0E89               	movlw	low (STR_1+12)
   862   00132E  6E5D               	movwf	sprintf@fmt^0,c
   863   001330  0E06               	movlw	high (STR_1+12)
   864   001332  6E5E               	movwf	(sprintf@fmt+1)^0,c
   865   001334  C072  F05F         	movff	main@d,?_sprintf+4
   866   001338  C073  F060         	movff	main@d+1,?_sprintf+5
   867   00133C  EC89  F00C         	call	_sprintf	;wreg free
   868   001340                     
   869                           ;main.c: 59:                 sprintf(lcd + 16, "0x%X", d);
   870   001340  0E98               	movlw	low (_lcd+16)
   871   001342  6E5B               	movwf	sprintf@s^0,c
   872   001344  0E00               	movlw	high (_lcd+16)
   873   001346  6E5C               	movwf	(sprintf@s+1)^0,c
   874   001348  0E8C               	movlw	low STR_4
   875   00134A  6E5D               	movwf	sprintf@fmt^0,c
   876   00134C  0E06               	movlw	high STR_4
   877   00134E  6E5E               	movwf	(sprintf@fmt+1)^0,c
   878   001350  C072  F05F         	movff	main@d,?_sprintf+4
   879   001354  C073  F060         	movff	main@d+1,?_sprintf+5
   880   001358  EC89  F00C         	call	_sprintf	;wreg free
   881   00135C  EF3F  F009         	goto	l2449
   882   001360                     l2481:
   883   001360  FFFF               	dw	65535	; assembler added errata NOP
   884   001362  C070  F06E         	movff	main@state,??_main
   885   001366  C071  F06F         	movff	main@state+1,??_main+1
   886                           
   887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   888                           ; Switch size 1, requested type "simple"
   889                           ; Number of cases is 1, Range of values is 0 to 0
   890                           ; switch strategies available:
   891                           ; Name         Instructions Cycles
   892                           ; simple_byte            4     3 (average)
   893                           ;	Chosen strategy is simple_byte
   894   00136A  506F               	movf	(??_main+1)^0,w,c
   895   00136C  0A00               	xorlw	0	; case 0
   896   00136E  B4D8               	btfsc	status,2,c
   897   001370  EFBC  F009         	goto	l2535
   898   001374  EFB0  F009         	goto	l2481
   899   001378                     l2535:
   900   001378  FFFF               	dw	65535	; assembler added errata NOP
   901                           
   902                           ; Switch size 1, requested type "simple"
   903                           ; Number of cases is 2, Range of values is 0 to 1
   904                           ; switch strategies available:
   905                           ; Name         Instructions Cycles
   906                           ; simple_byte            7     4 (average)
   907                           ;	Chosen strategy is simple_byte
   908   00137A  506E               	movf	??_main^0,w,c
   909   00137C  0A00               	xorlw	0	; case 0
   910   00137E  B4D8               	btfsc	status,2,c
   911   001380  EF44  F009         	goto	l2451
   912   001384  0A01               	xorlw	1	; case 1
   913   001386  B4D8               	btfsc	status,2,c
   914   001388  EF89  F009         	goto	l2471
   915   00138C  EFB0  F009         	goto	l2481
   916   001390  EF01  F000         	goto	start
   917   001394                     __end_of_main:
   918                           	callstack 0
   919                           
   920 ;; *************** function _sprintf *****************
   921 ;; Defined at:
   922 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  s               2   90[COMRAM] PTR unsigned char 
   925 ;;		 -> lcd(33), 
   926 ;;  fmt             2   92[COMRAM] PTR const unsigned char 
   927 ;;		 -> STR_4(5), STR_3(3), STR_2(15), STR_1(15), 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  f              11   98[COMRAM] struct _IO_FILE
   930 ;;  ap              2   96[COMRAM] PTR void [1]
   931 ;;		 -> ?_sprintf(2), 
   932 ;;  ret             2    0        int 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  2   90[COMRAM] int 
   935 ;; Registers used:
   936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   942 ;;      Params:         6       0       0       0       0       0       0
   943 ;;      Locals:        13       0       0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0
   945 ;;      Totals:        19       0       0       0       0       0       0
   946 ;;Total ram usage:       19 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 7
   949 ;; This function calls:
   950 ;;		_vfprintf
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text1
   957   001912                     __ptext1:
   958                           	callstack 0
   959   001912                     _sprintf:
   960                           	callstack 0
   961   001912  FFFF               	dw	65535	; assembler added errata NOP
   962   001914  0E5F               	movlw	low (?_sprintf+4)
   963   001916  6E61               	movwf	sprintf@ap^0,c
   964   001918  0E00               	movlw	high (?_sprintf+4)
   965   00191A  6E62               	movwf	(sprintf@ap+1)^0,c
   966   00191C  C05B  F063         	movff	sprintf@s,sprintf@f
   967   001920  C05C  F064         	movff	sprintf@s+1,sprintf@f+1
   968   001924  0E00               	movlw	0
   969   001926  6E67               	movwf	(sprintf@f+4)^0,c
   970   001928  0E00               	movlw	0
   971   00192A  6E66               	movwf	(sprintf@f+3)^0,c
   972   00192C  0E00               	movlw	0
   973   00192E  6E6D               	movwf	(sprintf@f+10)^0,c
   974   001930  0E00               	movlw	0
   975   001932  6E6C               	movwf	(sprintf@f+9)^0,c
   976   001934  0E63               	movlw	low sprintf@f
   977   001936  6E53               	movwf	vfprintf@fp^0,c
   978   001938  0E00               	movlw	high sprintf@f
   979   00193A  6E54               	movwf	(vfprintf@fp+1)^0,c
   980   00193C  C05D  F055         	movff	sprintf@fmt,vfprintf@fmt
   981   001940  C05E  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
   982   001944  0E61               	movlw	low sprintf@ap
   983   001946  6E57               	movwf	vfprintf@ap^0,c
   984   001948  0E00               	movlw	high sprintf@ap
   985   00194A  6E58               	movwf	(vfprintf@ap+1)^0,c
   986   00194C  EC2F  F00C         	call	_vfprintf	;wreg free
   987   001950  5066               	movf	(sprintf@f+3)^0,w,c
   988   001952  245B               	addwf	sprintf@s^0,w,c
   989   001954  6ED9               	movwf	fsr2l,c
   990   001956  5067               	movf	(sprintf@f+4)^0,w,c
   991   001958  205C               	addwfc	(sprintf@s+1)^0,w,c
   992   00195A  6EDA               	movwf	fsr2h,c
   993   00195C  0E00               	movlw	0
   994   00195E  6EDF               	movwf	indf2,c
   995   001960  0012               	return		;funcret
   996   001962  FFFF               	dw	65535	; errata NOP
   997   001964                     __end_of_sprintf:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _vfprintf *****************
  1001 ;; Defined at:
  1002 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1005 ;;		 -> sprintf@f(11), 
  1006 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1007 ;;		 -> STR_4(5), STR_3(3), STR_2(15), STR_1(15), 
  1008 ;;  ap              2   86[COMRAM] PTR PTR void 
  1009 ;;		 -> sprintf@ap(2), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1012 ;;		 -> STR_4(5), STR_3(3), STR_2(15), STR_1(15), 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2   82[COMRAM] int 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1022 ;;      Params:         6       0       0       0       0       0       0
  1023 ;;      Locals:         2       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0
  1025 ;;      Totals:         8       0       0       0       0       0       0
  1026 ;;Total ram usage:        8 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; Hardware stack levels required when called: 6
  1029 ;; This function calls:
  1030 ;;		_vfpfcnvrt
  1031 ;; This function is called by:
  1032 ;;		_sprintf
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text2
  1037   00185E                     __ptext2:
  1038                           	callstack 0
  1039   00185E                     _vfprintf:
  1040                           	callstack 0
  1041   00185E  FFFF               	dw	65535	; assembler added errata NOP
  1042   001860                     
  1043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1044   001860  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1045   001864  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1046                           
  1047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1048   001868  EF45  F00C         	goto	l2265
  1049   00186C                     l2263:
  1050   00186C  FFFF               	dw	65535	; assembler added errata NOP
  1051                           
  1052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1053   00186E  C053  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1054   001872  C054  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1055   001876  0E59               	movlw	low vfprintf@cfmt
  1056   001878  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1057   00187A  0E00               	movlw	high vfprintf@cfmt
  1058   00187C  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1059   00187E  C057  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1060   001882  C058  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1061   001886  ECA5  F004         	call	_vfpfcnvrt	;wreg free
  1062   00188A                     l2265:
  1063   00188A  FFFF               	dw	65535	; assembler added errata NOP
  1064                           
  1065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1066   00188C  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1067   001890  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1068   001894                     	if	0	;tblptru may be non-zero
  1069   001894                     	endif
  1070   001894                     	if	0	;tblptru may be non-zero
  1071   001894                     	endif
  1072   001894  0008               	tblrd		*
  1073   001896  FFFF               	dw	65535	; errata NOP
  1074   001898  50F5               	movf	tablat,w,c
  1075   00189A  0900               	iorlw	0
  1076   00189C  A4D8               	btfss	status,2,c
  1077   00189E  EF53  F00C         	goto	u1291
  1078   0018A2  EF56  F00C         	goto	u1290
  1079   0018A6                     u1291:
  1080   0018A6  FFFF               	dw	65535	; assembler added errata NOP
  1081   0018A8  EF36  F00C         	goto	l2263
  1082   0018AC                     u1290:
  1083   0018AC  FFFF               	dw	65535	; assembler added errata NOP
  1084   0018AE                     
  1085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1086   0018AE  0E00               	movlw	0
  1087   0018B0  6E54               	movwf	(?_vfprintf+1)^0,c
  1088   0018B2  0E00               	movlw	0
  1089   0018B4  6E53               	movwf	?_vfprintf^0,c
  1090   0018B6  0012               	return		;funcret
  1091   0018B8  FFFF               	dw	65535	; errata NOP
  1092   0018BA                     __end_of_vfprintf:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _vfpfcnvrt *****************
  1096 ;; Defined at:
  1097 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1100 ;;		 -> sprintf@f(11), 
  1101 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1102 ;;		 -> vfprintf@cfmt(2), 
  1103 ;;  ap              2   66[COMRAM] PTR PTR void 
  1104 ;;		 -> sprintf@ap(2), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  convarg         8   72[COMRAM] struct .
  1107 ;;  cp              2   80[COMRAM] PTR unsigned char 
  1108 ;;		 -> STR_4(5), STR_3(3), STR_2(15), STR_1(15), 
  1109 ;;  i               2    0        int 
  1110 ;;  done            2    0        int 
  1111 ;;  c               1    0        unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         6       0       0       0       0       0       0
  1122 ;;      Locals:        10       0       0       0       0       0       0
  1123 ;;      Temps:          4       0       0       0       0       0       0
  1124 ;;      Totals:        20       0       0       0       0       0       0
  1125 ;;Total ram usage:       20 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 5
  1128 ;; This function calls:
  1129 ;;		_dtoa
  1130 ;;		_fputc
  1131 ;;		_xtoa
  1132 ;; This function is called by:
  1133 ;;		_vfprintf
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text3
  1138   00094A                     __ptext3:
  1139                           	callstack 0
  1140   00094A                     _vfpfcnvrt:
  1141                           	callstack 0
  1142   00094A  FFFF               	dw	65535	; assembler added errata NOP
  1143   00094C                     
  1144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1145   00094C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1146   000950  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1147   000954  CFDE FFF6          	movff	postinc2,tblptrl
  1148   000958  CFDD FFF7          	movff	postdec2,tblptrh
  1149   00095C                     	if	0	;tblptru may be non-zero
  1150   00095C                     	endif
  1151   00095C                     	if	0	;tblptru may be non-zero
  1152   00095C                     	endif
  1153   00095C  0008               	tblrd		*
  1154   00095E  FFFF               	dw	65535	; errata NOP
  1155   000960  50F5               	movf	tablat,w,c
  1156   000962  0A25               	xorlw	37
  1157   000964  A4D8               	btfss	status,2,c
  1158   000966  EFB7  F004         	goto	u1151
  1159   00096A  EFBA  F004         	goto	u1150
  1160   00096E                     u1151:
  1161   00096E  FFFF               	dw	65535	; assembler added errata NOP
  1162   000970  EFB4  F005         	goto	l2165
  1163   000974                     u1150:
  1164   000974  FFFF               	dw	65535	; assembler added errata NOP
  1165   000976                     
  1166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1167   000976  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1168   00097A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1169   00097E  2ADE               	incf	postinc2,f,c
  1170   000980  0E00               	movlw	0
  1171   000982  22DD               	addwfc	postdec2,f,c
  1172   000984                     
  1173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1174   000984  0E00               	movlw	0
  1175   000986  0100               	movlb	0	; () banked
  1176   000988  6F87               	movwf	(_width+1)& (0+255),b
  1177   00098A  0E00               	movlw	0
  1178   00098C  6F86               	movwf	_width& (0+255),b
  1179   00098E  C086  F07E         	movff	_width,_flags
  1180   000992                     
  1181                           ; BSR set to: 0
  1182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1183   000992  6878               	setf	_prec^0,c
  1184   000994  6879               	setf	(_prec+1)^0,c
  1185   000996                     
  1186                           ; BSR set to: 0
  1187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1188   000996  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1189   00099A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1190   00099E  CFDE F051          	movff	postinc2,vfpfcnvrt@cp
  1191   0009A2  CFDD F052          	movff	postdec2,vfpfcnvrt@cp+1
  1192   0009A6                     
  1193                           ; BSR set to: 0
  1194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1195   0009A6  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1196   0009AA  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1197   0009AE                     	if	0	;tblptru may be non-zero
  1198   0009AE                     	endif
  1199   0009AE                     	if	0	;tblptru may be non-zero
  1200   0009AE                     	endif
  1201   0009AE  0008               	tblrd		*
  1202   0009B0  FFFF               	dw	65535	; errata NOP
  1203   0009B2  50F5               	movf	tablat,w,c
  1204   0009B4  0A64               	xorlw	100
  1205   0009B6  B4D8               	btfsc	status,2,c
  1206   0009B8  EFE0  F004         	goto	u1161
  1207   0009BC  EFE3  F004         	goto	u1160
  1208   0009C0                     u1161:
  1209   0009C0  FFFF               	dw	65535	; assembler added errata NOP
  1210   0009C2  EFF4  F004         	goto	l2143
  1211   0009C6                     u1160:
  1212   0009C6  FFFF               	dw	65535	; assembler added errata NOP
  1213   0009C8                     
  1214                           ; BSR set to: 0
  1215   0009C8  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1216   0009CC  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1217   0009D0                     	if	0	;tblptru may be non-zero
  1218   0009D0                     	endif
  1219   0009D0                     	if	0	;tblptru may be non-zero
  1220   0009D0                     	endif
  1221   0009D0  0008               	tblrd		*
  1222   0009D2  FFFF               	dw	65535	; errata NOP
  1223   0009D4  50F5               	movf	tablat,w,c
  1224   0009D6  0A69               	xorlw	105
  1225   0009D8  A4D8               	btfss	status,2,c
  1226   0009DA  EFF1  F004         	goto	u1171
  1227   0009DE  EFF4  F004         	goto	u1170
  1228   0009E2                     u1171:
  1229   0009E2  FFFF               	dw	65535	; assembler added errata NOP
  1230   0009E4  EF38  F005         	goto	l2149
  1231   0009E8                     u1170:
  1232   0009E8                     l2143:
  1233   0009E8  FFFF               	dw	65535	; assembler added errata NOP
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1237   0009EA  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1238   0009EE  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1239   0009F2  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1240   0009F6  0E02               	movlw	2
  1241   0009F8  26DE               	addwf	postinc2,f,c
  1242   0009FA  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1243   0009FE  0E00               	movlw	0
  1244   000A00  22DD               	addwfc	postdec2,f,c
  1245   000A02  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1246   000A06  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1247   000A0A  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1248   000A0E  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1249   000A12  0E00               	movlw	0
  1250   000A14  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1251   000A16  0EFF               	movlw	-1
  1252   000A18  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1253   000A1A  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1254   000A1C  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1255   000A1E  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1256   000A20  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1257   000A22  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1258                           
  1259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1260   000A24  0E01               	movlw	1
  1261   000A26  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1262   000A28  6E45               	movwf	??_vfpfcnvrt^0,c
  1263   000A2A  0E00               	movlw	0
  1264   000A2C  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1265   000A2E  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1266   000A30  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1267   000A34  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1268   000A38  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1269   000A3C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1270   000A40                     
  1271                           ; BSR set to: 0
  1272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1273   000A40  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1274   000A44  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1275   000A48  C049  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1276   000A4C  C04A  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1277   000A50  C04B  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1278   000A54  C04C  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1279   000A58  C04D  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1280   000A5C  C04E  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1281   000A60  C04F  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1282   000A64  C050  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1283   000A68  EC49  F003         	call	_dtoa	;wreg free
  1284   000A6C  EFCA  F005         	goto	l956
  1285   000A70                     l2149:
  1286   000A70  FFFF               	dw	65535	; assembler added errata NOP
  1287                           
  1288                           ; BSR set to: 0
  1289   000A72  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1290   000A76  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1291   000A7A                     	if	0	;tblptru may be non-zero
  1292   000A7A                     	endif
  1293   000A7A                     	if	0	;tblptru may be non-zero
  1294   000A7A                     	endif
  1295   000A7A  0008               	tblrd		*
  1296   000A7C  FFFF               	dw	65535	; errata NOP
  1297   000A7E  50F5               	movf	tablat,w,c
  1298   000A80  0A58               	xorlw	88
  1299   000A82  A4D8               	btfss	status,2,c
  1300   000A84  EF46  F005         	goto	u1181
  1301   000A88  EF49  F005         	goto	u1180
  1302   000A8C                     u1181:
  1303   000A8C  FFFF               	dw	65535	; assembler added errata NOP
  1304   000A8E  EFAA  F005         	goto	l2161
  1305   000A92                     u1180:
  1306   000A92  FFFF               	dw	65535	; assembler added errata NOP
  1307   000A94                     
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  1310   000A94  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1311   000A98  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1312   000A9C  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1313   000AA0  0E02               	movlw	2
  1314   000AA2  26DE               	addwf	postinc2,f,c
  1315   000AA4  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1316   000AA8  0E00               	movlw	0
  1317   000AAA  22DD               	addwfc	postdec2,f,c
  1318   000AAC  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1319   000AB0  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1320   000AB4  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  1321   000AB8  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  1322   000ABC  C047  F049         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  1323   000AC0  C048  F04A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  1324   000AC4  6A4B               	clrf	(vfpfcnvrt@convarg+2)^0,c
  1325   000AC6  6A4C               	clrf	(vfpfcnvrt@convarg+3)^0,c
  1326   000AC8  6A4D               	clrf	(vfpfcnvrt@convarg+4)^0,c
  1327   000ACA  6A4E               	clrf	(vfpfcnvrt@convarg+5)^0,c
  1328   000ACC  6A4F               	clrf	(vfpfcnvrt@convarg+6)^0,c
  1329   000ACE  6A50               	clrf	(vfpfcnvrt@convarg+7)^0,c
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  1332   000AD0  0E01               	movlw	1
  1333   000AD2  2451               	addwf	vfpfcnvrt@cp^0,w,c
  1334   000AD4  6E45               	movwf	??_vfpfcnvrt^0,c
  1335   000AD6  0E00               	movlw	0
  1336   000AD8  2052               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1337   000ADA  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1338   000ADC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1339   000AE0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1340   000AE4  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1341   000AE8  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1342                           
  1343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  1344   000AEC  EF91  F005         	goto	l2159
  1345   000AF0                     l2153:
  1346   000AF0  FFFF               	dw	65535	; assembler added errata NOP
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  1350   000AF2  C03F  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1351   000AF6  C040  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1352   000AFA  C049  F01E         	movff	vfpfcnvrt@convarg,xtoa@d
  1353   000AFE  C04A  F01F         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  1354   000B02  C04B  F020         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  1355   000B06  C04C  F021         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  1356   000B0A  C04D  F022         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  1357   000B0E  C04E  F023         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  1358   000B12  C04F  F024         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  1359   000B16  C050  F025         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  1360   000B1A  ECCD  F005         	call	_xtoa	;wreg free
  1361   000B1E  EFCA  F005         	goto	l956
  1362   000B22                     l2159:
  1363   000B22  FFFF               	dw	65535	; assembler added errata NOP
  1364                           
  1365                           ; BSR set to: 0
  1366   000B24  C051  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1367   000B28  C052  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1368   000B2C                     	if	0	;tblptru may be non-zero
  1369   000B2C                     	endif
  1370   000B2C                     	if	0	;tblptru may be non-zero
  1371   000B2C                     	endif
  1372   000B2C  0008               	tblrd		*
  1373   000B2E  FFFF               	dw	65535	; errata NOP
  1374   000B30  50F5               	movf	tablat,w,c
  1375   000B32  6E45               	movwf	??_vfpfcnvrt^0,c
  1376   000B34  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1377                           
  1378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1379                           ; Switch size 1, requested type "simple"
  1380                           ; Number of cases is 1, Range of values is 0 to 0
  1381                           ; switch strategies available:
  1382                           ; Name         Instructions Cycles
  1383                           ; simple_byte            4     3 (average)
  1384                           ;	Chosen strategy is simple_byte
  1385   000B36  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1386   000B38  0A00               	xorlw	0	; case 0
  1387   000B3A  B4D8               	btfsc	status,2,c
  1388   000B3C  EFA2  F005         	goto	l2537
  1389   000B40  EFAA  F005         	goto	l2161
  1390   000B44                     l2537:
  1391   000B44  FFFF               	dw	65535	; assembler added errata NOP
  1392                           
  1393                           ; BSR set to: 0
  1394                           ; Switch size 1, requested type "simple"
  1395                           ; Number of cases is 1, Range of values is 88 to 88
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte            4     3 (average)
  1399                           ;	Chosen strategy is simple_byte
  1400   000B46  5045               	movf	??_vfpfcnvrt^0,w,c
  1401   000B48  0A58               	xorlw	88	; case 88
  1402   000B4A  B4D8               	btfsc	status,2,c
  1403   000B4C  EF78  F005         	goto	l2153
  1404   000B50  EFAA  F005         	goto	l2161
  1405   000B54                     l2161:
  1406   000B54  FFFF               	dw	65535	; assembler added errata NOP
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1409   000B56  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1410   000B5A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1411   000B5E  2ADE               	incf	postinc2,f,c
  1412   000B60  0E00               	movlw	0
  1413   000B62  22DD               	addwfc	postdec2,f,c
  1414   000B64  EFCA  F005         	goto	l956
  1415   000B68                     l2165:
  1416   000B68  FFFF               	dw	65535	; assembler added errata NOP
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1419   000B6A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1420   000B6E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1421   000B72  CFDE FFF6          	movff	postinc2,tblptrl
  1422   000B76  CFDD FFF7          	movff	postdec2,tblptrh
  1423   000B7A                     	if	0	;tblptru may be non-zero
  1424   000B7A                     	endif
  1425   000B7A                     	if	0	;tblptru may be non-zero
  1426   000B7A                     	endif
  1427   000B7A  0008               	tblrd		*
  1428   000B7C  FFFF               	dw	65535	; errata NOP
  1429   000B7E  50F5               	movf	tablat,w,c
  1430   000B80  6E01               	movwf	fputc@c^0,c
  1431   000B82  6A02               	clrf	(fputc@c+1)^0,c
  1432   000B84  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1433   000B88  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1434   000B8C  EC42  F00A         	call	_fputc	;wreg free
  1435   000B90  EFAA  F005         	goto	l2161
  1436   000B94                     l956:
  1437   000B94  FFFF               	dw	65535	; assembler added errata NOP
  1438   000B96  0012               	return		;funcret
  1439   000B98  FFFF               	dw	65535	; errata NOP
  1440   000B9A                     __end_of_vfpfcnvrt:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _xtoa *****************
  1444 ;; Defined at:
  1445 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1448 ;;		 -> sprintf@f(11), 
  1449 ;;  d               8   29[COMRAM] unsigned long long 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  n               8   51[COMRAM] unsigned long long 
  1452 ;;  i               2   59[COMRAM] int 
  1453 ;;  p               2   49[COMRAM] int 
  1454 ;;  w               2   45[COMRAM] int 
  1455 ;;  c               1   61[COMRAM] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1465 ;;      Params:        10       0       0       0       0       0       0
  1466 ;;      Locals:        17       0       0       0       0       0       0
  1467 ;;      Temps:          8       0       0       0       0       0       0
  1468 ;;      Totals:        35       0       0       0       0       0       0
  1469 ;;Total ram usage:       35 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 4
  1472 ;; This function calls:
  1473 ;;		_pad
  1474 ;; This function is called by:
  1475 ;;		_vfpfcnvrt
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text4
  1480   000B9A                     __ptext4:
  1481                           	callstack 0
  1482   000B9A                     _xtoa:
  1483                           	callstack 0
  1484   000B9A  FFFF               	dw	65535	; assembler added errata NOP
  1485   000B9C                     
  1486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 948:     p = (0 < prec) ? prec : 1;
  1487   000B9C  BE79               	btfsc	(_prec+1)^0,7,c
  1488   000B9E  EFDC  F005         	goto	u1040
  1489   000BA2  5079               	movf	(_prec+1)^0,w,c
  1490   000BA4  E106               	bnz	u1041
  1491   000BA6  0478               	decf	_prec^0,w,c
  1492   000BA8  B0D8               	btfsc	status,0,c
  1493   000BAA  EFD9  F005         	goto	u1041
  1494   000BAE  EFDC  F005         	goto	u1040
  1495   000BB2                     u1041:
  1496   000BB2  FFFF               	dw	65535	; assembler added errata NOP
  1497   000BB4  EFE3  F005         	goto	l937
  1498   000BB8                     u1040:
  1499   000BB8  FFFF               	dw	65535	; assembler added errata NOP
  1500   000BBA  0E00               	movlw	0
  1501   000BBC  6E33               	movwf	(xtoa@p+1)^0,c
  1502   000BBE  0E01               	movlw	1
  1503   000BC0  6E32               	movwf	xtoa@p^0,c
  1504   000BC2  EFE8  F005         	goto	l939
  1505   000BC6                     l937:
  1506   000BC6  FFFF               	dw	65535	; assembler added errata NOP
  1507   000BC8  C078  F032         	movff	_prec,xtoa@p
  1508   000BCC  C079  F033         	movff	_prec+1,xtoa@p+1
  1509   000BD0                     l939:
  1510   000BD0  FFFF               	dw	65535	; assembler added errata NOP
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  1513   000BD2  C086  F02E         	movff	_width,xtoa@w
  1514   000BD6  C087  F02F         	movff	_width+1,xtoa@w+1
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  1517   000BDA  C01E  F034         	movff	xtoa@d,xtoa@n
  1518   000BDE  C01F  F035         	movff	xtoa@d+1,xtoa@n+1
  1519   000BE2  C020  F036         	movff	xtoa@d+2,xtoa@n+2
  1520   000BE6  C021  F037         	movff	xtoa@d+3,xtoa@n+3
  1521   000BEA  C022  F038         	movff	xtoa@d+4,xtoa@n+4
  1522   000BEE  C023  F039         	movff	xtoa@d+5,xtoa@n+5
  1523   000BF2  C024  F03A         	movff	xtoa@d+6,xtoa@n+6
  1524   000BF6  C025  F03B         	movff	xtoa@d+7,xtoa@n+7
  1525   000BFA                     
  1526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  1527   000BFA  0E00               	movlw	0
  1528   000BFC  6E3D               	movwf	(xtoa@i+1)^0,c
  1529   000BFE  0E1F               	movlw	31
  1530   000C00  6E3C               	movwf	xtoa@i^0,c
  1531   000C02                     
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  1533   000C02  0E00               	movlw	0
  1534   000C04  0100               	movlb	0	; () banked
  1535   000C06  6FC8               	movwf	(_dbuf+31)& (0+255),b
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  1538   000C08  EF68  F006         	goto	l2087
  1539   000C0C                     l2067:
  1540   000C0C  FFFF               	dw	65535	; assembler added errata NOP
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  1543   000C0E  063C               	decf	xtoa@i^0,f,c
  1544   000C10  A0D8               	btfss	status,0,c
  1545   000C12  063D               	decf	(xtoa@i+1)^0,f,c
  1546   000C14                     
  1547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  1548   000C14  5034               	movf	xtoa@n^0,w,c
  1549   000C16  0B0F               	andlw	15
  1550   000C18  6E3E               	movwf	xtoa@c^0,c
  1551   000C1A                     
  1552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 975:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'A' + (c - 10);
  1553   000C1A  0E09               	movlw	9
  1554   000C1C  643E               	cpfsgt	xtoa@c^0,c
  1555   000C1E  EF13  F006         	goto	u1051
  1556   000C22  EF16  F006         	goto	u1050
  1557   000C26                     u1051:
  1558   000C26  FFFF               	dw	65535	; assembler added errata NOP
  1559   000C28  EF1F  F006         	goto	l2075
  1560   000C2C                     u1050:
  1561   000C2C  FFFF               	dw	65535	; assembler added errata NOP
  1562   000C2E  0E37               	movlw	55
  1563   000C30  243E               	addwf	xtoa@c^0,w,c
  1564   000C32  6E30               	movwf	_xtoa$1297^0,c
  1565   000C34  6A31               	clrf	(_xtoa$1297+1)^0,c
  1566   000C36  0E00               	movlw	0
  1567   000C38  2231               	addwfc	(_xtoa$1297+1)^0,f,c
  1568   000C3A  EF26  F006         	goto	l2077
  1569   000C3E                     l2075:
  1570   000C3E  FFFF               	dw	65535	; assembler added errata NOP
  1571   000C40  0E30               	movlw	48
  1572   000C42  243E               	addwf	xtoa@c^0,w,c
  1573   000C44  6E30               	movwf	_xtoa$1297^0,c
  1574   000C46  6A31               	clrf	(_xtoa$1297+1)^0,c
  1575   000C48  0E00               	movlw	0
  1576   000C4A  2231               	addwfc	(_xtoa$1297+1)^0,f,c
  1577   000C4C                     l2077:
  1578   000C4C  FFFF               	dw	65535	; assembler added errata NOP
  1579   000C4E  C030  F03E         	movff	_xtoa$1297,xtoa@c
  1580   000C52                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  1582   000C52  0EA9               	movlw	low _dbuf
  1583   000C54  243C               	addwf	xtoa@i^0,w,c
  1584   000C56  6ED9               	movwf	fsr2l,c
  1585   000C58  0E00               	movlw	high _dbuf
  1586   000C5A  203D               	addwfc	(xtoa@i+1)^0,w,c
  1587   000C5C  6EDA               	movwf	fsr2h,c
  1588   000C5E  C03E  FFDF         	movff	xtoa@c,indf2
  1589   000C62                     
  1590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  1591   000C62  0632               	decf	xtoa@p^0,f,c
  1592   000C64  A0D8               	btfss	status,0,c
  1593   000C66  0633               	decf	(xtoa@p+1)^0,f,c
  1594   000C68                     
  1595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  1596   000C68  062E               	decf	xtoa@w^0,f,c
  1597   000C6A  A0D8               	btfss	status,0,c
  1598   000C6C  062F               	decf	(xtoa@w+1)^0,f,c
  1599   000C6E                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  1601   000C6E  C034  F026         	movff	xtoa@n,??_xtoa
  1602   000C72  C035  F027         	movff	xtoa@n+1,??_xtoa+1
  1603   000C76  C036  F028         	movff	xtoa@n+2,??_xtoa+2
  1604   000C7A  C037  F029         	movff	xtoa@n+3,??_xtoa+3
  1605   000C7E  C038  F02A         	movff	xtoa@n+4,??_xtoa+4
  1606   000C82  C039  F02B         	movff	xtoa@n+5,??_xtoa+5
  1607   000C86  C03A  F02C         	movff	xtoa@n+6,??_xtoa+6
  1608   000C8A  C03B  F02D         	movff	xtoa@n+7,??_xtoa+7
  1609   000C8E  0E05               	movlw	5
  1610   000C90  EF54  F006         	goto	u1060
  1611   000C94                     u1065:
  1612   000C94  FFFF               	dw	65535	; assembler added errata NOP
  1613   000C96  90D8               	bcf	status,0,c
  1614   000C98  322D               	rrcf	(??_xtoa+7)^0,f,c
  1615   000C9A  322C               	rrcf	(??_xtoa+6)^0,f,c
  1616   000C9C  322B               	rrcf	(??_xtoa+5)^0,f,c
  1617   000C9E  322A               	rrcf	(??_xtoa+4)^0,f,c
  1618   000CA0  3229               	rrcf	(??_xtoa+3)^0,f,c
  1619   000CA2  3228               	rrcf	(??_xtoa+2)^0,f,c
  1620   000CA4  3227               	rrcf	(??_xtoa+1)^0,f,c
  1621   000CA6  3226               	rrcf	??_xtoa^0,f,c
  1622   000CA8                     u1060:
  1623   000CA8  FFFF               	dw	65535	; assembler added errata NOP
  1624   000CAA  2EE8               	decfsz	wreg,f,c
  1625   000CAC  EF4A  F006         	goto	u1065
  1626   000CB0  C026  F034         	movff	??_xtoa,xtoa@n
  1627   000CB4  C027  F035         	movff	??_xtoa+1,xtoa@n+1
  1628   000CB8  C028  F036         	movff	??_xtoa+2,xtoa@n+2
  1629   000CBC  C029  F037         	movff	??_xtoa+3,xtoa@n+3
  1630   000CC0  C02A  F038         	movff	??_xtoa+4,xtoa@n+4
  1631   000CC4  C02B  F039         	movff	??_xtoa+5,xtoa@n+5
  1632   000CC8  C02C  F03A         	movff	??_xtoa+6,xtoa@n+6
  1633   000CCC  C02D  F03B         	movff	??_xtoa+7,xtoa@n+7
  1634   000CD0                     l2087:
  1635   000CD0  FFFF               	dw	65535	; assembler added errata NOP
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  1638   000CD2  BE3D               	btfsc	(xtoa@i+1)^0,7,c
  1639   000CD4  EF75  F006         	goto	u1071
  1640   000CD8  503D               	movf	(xtoa@i+1)^0,w,c
  1641   000CDA  E10A               	bnz	u1070
  1642   000CDC  0E02               	movlw	2
  1643   000CDE  5C3C               	subwf	xtoa@i^0,w,c
  1644   000CE0  A0D8               	btfss	status,0,c
  1645   000CE2  EF75  F006         	goto	u1071
  1646   000CE6  EF78  F006         	goto	u1070
  1647   000CEA                     u1071:
  1648   000CEA  FFFF               	dw	65535	; assembler added errata NOP
  1649   000CEC  EF98  F006         	goto	l2093
  1650   000CF0                     u1070:
  1651   000CF0  FFFF               	dw	65535	; assembler added errata NOP
  1652   000CF2  5034               	movf	xtoa@n^0,w,c
  1653   000CF4  1035               	iorwf	(xtoa@n+1)^0,w,c
  1654   000CF6  1036               	iorwf	(xtoa@n+2)^0,w,c
  1655   000CF8  1037               	iorwf	(xtoa@n+3)^0,w,c
  1656   000CFA  1038               	iorwf	(xtoa@n+4)^0,w,c
  1657   000CFC  1039               	iorwf	(xtoa@n+5)^0,w,c
  1658   000CFE  103A               	iorwf	(xtoa@n+6)^0,w,c
  1659   000D00  103B               	iorwf	(xtoa@n+7)^0,w,c
  1660   000D02  A4D8               	btfss	status,2,c
  1661   000D04  EF86  F006         	goto	u1081
  1662   000D08  EF89  F006         	goto	u1080
  1663   000D0C                     u1081:
  1664   000D0C  FFFF               	dw	65535	; assembler added errata NOP
  1665   000D0E  EF06  F006         	goto	l2067
  1666   000D12                     u1080:
  1667   000D12  FFFF               	dw	65535	; assembler added errata NOP
  1668   000D14  BE33               	btfsc	(xtoa@p+1)^0,7,c
  1669   000D16  EF98  F006         	goto	u1090
  1670   000D1A  5033               	movf	(xtoa@p+1)^0,w,c
  1671   000D1C  E106               	bnz	u1091
  1672   000D1E  0432               	decf	xtoa@p^0,w,c
  1673   000D20  B0D8               	btfsc	status,0,c
  1674   000D22  EF95  F006         	goto	u1091
  1675   000D26  EF98  F006         	goto	u1090
  1676   000D2A                     u1091:
  1677   000D2A  FFFF               	dw	65535	; assembler added errata NOP
  1678   000D2C  EF06  F006         	goto	l2067
  1679   000D30                     u1090:
  1680   000D30                     l2093:
  1681   000D30  FFFF               	dw	65535	; assembler added errata NOP
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  1684   000D32  C01C  F011         	movff	xtoa@fp,pad@fp
  1685   000D36  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  1686   000D3A  0EA9               	movlw	low _dbuf
  1687   000D3C  243C               	addwf	xtoa@i^0,w,c
  1688   000D3E  6E13               	movwf	pad@buf^0,c
  1689   000D40  0E00               	movlw	high _dbuf
  1690   000D42  203D               	addwfc	(xtoa@i+1)^0,w,c
  1691   000D44  6E14               	movwf	(pad@buf+1)^0,c
  1692   000D46  C02E  F015         	movff	xtoa@w,pad@p
  1693   000D4A  C02F  F016         	movff	xtoa@w+1,pad@p+1
  1694   000D4E  EC04  F00B         	call	_pad	;wreg free
  1695   000D52  0012               	return		;funcret
  1696   000D54  FFFF               	dw	65535	; errata NOP
  1697   000D56                     __end_of_xtoa:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _dtoa *****************
  1701 ;; Defined at:
  1702 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1705 ;;		 -> sprintf@f(11), 
  1706 ;;  d               8   29[COMRAM] long long 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  n               8   51[COMRAM] long long 
  1709 ;;  i               2   59[COMRAM] int 
  1710 ;;  w               2   49[COMRAM] int 
  1711 ;;  p               2   47[COMRAM] int 
  1712 ;;  s               1   61[COMRAM] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1722 ;;      Params:        10       0       0       0       0       0       0
  1723 ;;      Locals:        17       0       0       0       0       0       0
  1724 ;;      Temps:          8       0       0       0       0       0       0
  1725 ;;      Totals:        35       0       0       0       0       0       0
  1726 ;;Total ram usage:       35 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 4
  1729 ;; This function calls:
  1730 ;;		___aodiv
  1731 ;;		___aomod
  1732 ;;		_abs
  1733 ;;		_pad
  1734 ;; This function is called by:
  1735 ;;		_vfpfcnvrt
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text5
  1740   000692                     __ptext5:
  1741                           	callstack 0
  1742   000692                     _dtoa:
  1743                           	callstack 0
  1744   000692  FFFF               	dw	65535	; assembler added errata NOP
  1745   000694                     
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1747   000694  C01E  F034         	movff	dtoa@d,dtoa@n
  1748   000698  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1749   00069C  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1750   0006A0  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1751   0006A4  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1752   0006A8  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1753   0006AC  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1754   0006B0  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1755   0006B4                     
  1756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1757   0006B4  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1758   0006B6  EF5F  F003         	goto	u941
  1759   0006BA  EF63  F003         	goto	u940
  1760   0006BE                     u941:
  1761   0006BE  FFFF               	dw	65535	; assembler added errata NOP
  1762   0006C0  0E01               	movlw	1
  1763   0006C2  EF65  F003         	goto	u950
  1764   0006C6                     u940:
  1765   0006C6  FFFF               	dw	65535	; assembler added errata NOP
  1766   0006C8  0E00               	movlw	0
  1767   0006CA                     u950:
  1768   0006CA  FFFF               	dw	65535	; assembler added errata NOP
  1769   0006CC  6E3E               	movwf	dtoa@s^0,c
  1770   0006CE                     
  1771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1772   0006CE  503E               	movf	dtoa@s^0,w,c
  1773   0006D0  B4D8               	btfsc	status,2,c
  1774   0006D2  EF6D  F003         	goto	u961
  1775   0006D6  EF70  F003         	goto	u960
  1776   0006DA                     u961:
  1777   0006DA  FFFF               	dw	65535	; assembler added errata NOP
  1778   0006DC  EF81  F003         	goto	l2015
  1779   0006E0                     u960:
  1780   0006E0  FFFF               	dw	65535	; assembler added errata NOP
  1781   0006E2                     
  1782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1783   0006E2  1E3B               	comf	(dtoa@n+7)^0,f,c
  1784   0006E4  1E3A               	comf	(dtoa@n+6)^0,f,c
  1785   0006E6  1E39               	comf	(dtoa@n+5)^0,f,c
  1786   0006E8  1E38               	comf	(dtoa@n+4)^0,f,c
  1787   0006EA  1E37               	comf	(dtoa@n+3)^0,f,c
  1788   0006EC  1E36               	comf	(dtoa@n+2)^0,f,c
  1789   0006EE  1E35               	comf	(dtoa@n+1)^0,f,c
  1790   0006F0  6C34               	negf	dtoa@n^0,c
  1791   0006F2  0E00               	movlw	0
  1792   0006F4  2235               	addwfc	(dtoa@n+1)^0,f,c
  1793   0006F6  2236               	addwfc	(dtoa@n+2)^0,f,c
  1794   0006F8  2237               	addwfc	(dtoa@n+3)^0,f,c
  1795   0006FA  2238               	addwfc	(dtoa@n+4)^0,f,c
  1796   0006FC  2239               	addwfc	(dtoa@n+5)^0,f,c
  1797   0006FE  223A               	addwfc	(dtoa@n+6)^0,f,c
  1798   000700  223B               	addwfc	(dtoa@n+7)^0,f,c
  1799   000702                     l2015:
  1800   000702  FFFF               	dw	65535	; assembler added errata NOP
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1803   000704  BE79               	btfsc	(_prec+1)^0,7,c
  1804   000706  EF90  F003         	goto	u970
  1805   00070A  5079               	movf	(_prec+1)^0,w,c
  1806   00070C  E106               	bnz	u971
  1807   00070E  0478               	decf	_prec^0,w,c
  1808   000710  B0D8               	btfsc	status,0,c
  1809   000712  EF8D  F003         	goto	u971
  1810   000716  EF90  F003         	goto	u970
  1811   00071A                     u971:
  1812   00071A  FFFF               	dw	65535	; assembler added errata NOP
  1813   00071C  EF97  F003         	goto	l919
  1814   000720                     u970:
  1815   000720  FFFF               	dw	65535	; assembler added errata NOP
  1816   000722  0E00               	movlw	0
  1817   000724  6E31               	movwf	(dtoa@p+1)^0,c
  1818   000726  0E01               	movlw	1
  1819   000728  6E30               	movwf	dtoa@p^0,c
  1820   00072A  EF9C  F003         	goto	l921
  1821   00072E                     l919:
  1822   00072E  FFFF               	dw	65535	; assembler added errata NOP
  1823   000730  C078  F030         	movff	_prec,dtoa@p
  1824   000734  C079  F031         	movff	_prec+1,dtoa@p+1
  1825   000738                     l921:
  1826   000738  FFFF               	dw	65535	; assembler added errata NOP
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1829   00073A  C086  F032         	movff	_width,dtoa@w
  1830   00073E  C087  F033         	movff	_width+1,dtoa@w+1
  1831   000742                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1833   000742  503E               	movf	dtoa@s^0,w,c
  1834   000744  B4D8               	btfsc	status,2,c
  1835   000746  EFA7  F003         	goto	u981
  1836   00074A  EFAA  F003         	goto	u980
  1837   00074E                     u981:
  1838   00074E  FFFF               	dw	65535	; assembler added errata NOP
  1839   000750  EFC6  F003         	goto	l922
  1840   000754                     u980:
  1841   000754  FFFF               	dw	65535	; assembler added errata NOP
  1842   000756                     
  1843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1844   000756  0632               	decf	dtoa@w^0,f,c
  1845   000758  A0D8               	btfss	status,0,c
  1846   00075A  0633               	decf	(dtoa@w+1)^0,f,c
  1847   00075C                     
  1848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1849   00075C  503E               	movf	dtoa@s^0,w,c
  1850   00075E  A4D8               	btfss	status,2,c
  1851   000760  EFB4  F003         	goto	u991
  1852   000764  EFB7  F003         	goto	u990
  1853   000768                     u991:
  1854   000768  FFFF               	dw	65535	; assembler added errata NOP
  1855   00076A  EFBE  F003         	goto	l2027
  1856   00076E                     u990:
  1857   00076E  FFFF               	dw	65535	; assembler added errata NOP
  1858   000770  0E00               	movlw	0
  1859   000772  6E2F               	movwf	(_dtoa$1287+1)^0,c
  1860   000774  0E2B               	movlw	43
  1861   000776  6E2E               	movwf	_dtoa$1287^0,c
  1862   000778  EFC3  F003         	goto	l2029
  1863   00077C                     l2027:
  1864   00077C  FFFF               	dw	65535	; assembler added errata NOP
  1865   00077E  0E00               	movlw	0
  1866   000780  6E2F               	movwf	(_dtoa$1287+1)^0,c
  1867   000782  0E2D               	movlw	45
  1868   000784  6E2E               	movwf	_dtoa$1287^0,c
  1869   000786                     l2029:
  1870   000786  FFFF               	dw	65535	; assembler added errata NOP
  1871   000788  C02E  F03E         	movff	_dtoa$1287,dtoa@s
  1872   00078C                     l922:
  1873   00078C  FFFF               	dw	65535	; assembler added errata NOP
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1876   00078E  0E00               	movlw	0
  1877   000790  6E3D               	movwf	(dtoa@i+1)^0,c
  1878   000792  0E1F               	movlw	31
  1879   000794  6E3C               	movwf	dtoa@i^0,c
  1880   000796                     
  1881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1882   000796  0E00               	movlw	0
  1883   000798  0100               	movlb	0	; () banked
  1884   00079A  6FC8               	movwf	(_dbuf+31)& (0+255),b
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1887   00079C  EF4D  F004         	goto	l2043
  1888   0007A0                     l2033:
  1889   0007A0  FFFF               	dw	65535	; assembler added errata NOP
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1892   0007A2  063C               	decf	dtoa@i^0,f,c
  1893   0007A4  A0D8               	btfss	status,0,c
  1894   0007A6  063D               	decf	(dtoa@i+1)^0,f,c
  1895   0007A8                     
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1897   0007A8  0EA9               	movlw	low _dbuf
  1898   0007AA  243C               	addwf	dtoa@i^0,w,c
  1899   0007AC  6ED9               	movwf	fsr2l,c
  1900   0007AE  0E00               	movlw	high _dbuf
  1901   0007B0  203D               	addwfc	(dtoa@i+1)^0,w,c
  1902   0007B2  6EDA               	movwf	fsr2h,c
  1903   0007B4  C034  F001         	movff	dtoa@n,___aomod@dividend
  1904   0007B8  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1905   0007BC  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1906   0007C0  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1907   0007C4  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1908   0007C8  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1909   0007CC  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1910   0007D0  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1911   0007D4  0E0A               	movlw	10
  1912   0007D6  6E09               	movwf	___aomod@divisor^0,c
  1913   0007D8  0E00               	movlw	0
  1914   0007DA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1915   0007DC  0E00               	movlw	0
  1916   0007DE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1917   0007E0  0E00               	movlw	0
  1918   0007E2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1919   0007E4  0E00               	movlw	0
  1920   0007E6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1921   0007E8  0E00               	movlw	0
  1922   0007EA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1923   0007EC  0E00               	movlw	0
  1924   0007EE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1925   0007F0  0E00               	movlw	0
  1926   0007F2  6E10               	movwf	(___aomod@divisor+7)^0,c
  1927   0007F4  EC52  F008         	call	___aomod	;wreg free
  1928   0007F8  C001  F026         	movff	?___aomod,??_dtoa
  1929   0007FC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1930   000800  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1931   000804  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1932   000808  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1933   00080C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1934   000810  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1935   000814  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1936   000818  C026  F013         	movff	??_dtoa,abs@a
  1937   00081C  C027  F014         	movff	??_dtoa+1,abs@a+1
  1938   000820  ECDA  F00C         	call	_abs	;wreg free
  1939   000824  5013               	movf	?_abs^0,w,c
  1940   000826  0F30               	addlw	48
  1941   000828  6EDF               	movwf	indf2,c
  1942   00082A                     
  1943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1944   00082A  0630               	decf	dtoa@p^0,f,c
  1945   00082C  A0D8               	btfss	status,0,c
  1946   00082E  0631               	decf	(dtoa@p+1)^0,f,c
  1947   000830                     
  1948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1949   000830  0632               	decf	dtoa@w^0,f,c
  1950   000832  A0D8               	btfss	status,0,c
  1951   000834  0633               	decf	(dtoa@w+1)^0,f,c
  1952   000836                     
  1953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1954   000836  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1955   00083A  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1956   00083E  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1957   000842  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1958   000846  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1959   00084A  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1960   00084E  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1961   000852  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1962   000856  0E0A               	movlw	10
  1963   000858  6E09               	movwf	___aodiv@divisor^0,c
  1964   00085A  0E00               	movlw	0
  1965   00085C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1966   00085E  0E00               	movlw	0
  1967   000860  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1968   000862  0E00               	movlw	0
  1969   000864  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1970   000866  0E00               	movlw	0
  1971   000868  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1972   00086A  0E00               	movlw	0
  1973   00086C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1974   00086E  0E00               	movlw	0
  1975   000870  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1976   000872  0E00               	movlw	0
  1977   000874  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1978   000876  ECAB  F006         	call	___aodiv	;wreg free
  1979   00087A  C001  F034         	movff	?___aodiv,dtoa@n
  1980   00087E  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1981   000882  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1982   000886  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1983   00088A  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1984   00088E  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1985   000892  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1986   000896  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1987   00089A                     l2043:
  1988   00089A  FFFF               	dw	65535	; assembler added errata NOP
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1991   00089C  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1992   00089E  EF59  F004         	goto	u1001
  1993   0008A2  503D               	movf	(dtoa@i+1)^0,w,c
  1994   0008A4  E109               	bnz	u1000
  1995   0008A6  043C               	decf	dtoa@i^0,w,c
  1996   0008A8  A0D8               	btfss	status,0,c
  1997   0008AA  EF59  F004         	goto	u1001
  1998   0008AE  EF5C  F004         	goto	u1000
  1999   0008B2                     u1001:
  2000   0008B2  FFFF               	dw	65535	; assembler added errata NOP
  2001   0008B4  EF7C  F004         	goto	l2049
  2002   0008B8                     u1000:
  2003   0008B8  FFFF               	dw	65535	; assembler added errata NOP
  2004   0008BA  5034               	movf	dtoa@n^0,w,c
  2005   0008BC  1035               	iorwf	(dtoa@n+1)^0,w,c
  2006   0008BE  1036               	iorwf	(dtoa@n+2)^0,w,c
  2007   0008C0  1037               	iorwf	(dtoa@n+3)^0,w,c
  2008   0008C2  1038               	iorwf	(dtoa@n+4)^0,w,c
  2009   0008C4  1039               	iorwf	(dtoa@n+5)^0,w,c
  2010   0008C6  103A               	iorwf	(dtoa@n+6)^0,w,c
  2011   0008C8  103B               	iorwf	(dtoa@n+7)^0,w,c
  2012   0008CA  A4D8               	btfss	status,2,c
  2013   0008CC  EF6A  F004         	goto	u1011
  2014   0008D0  EF6D  F004         	goto	u1010
  2015   0008D4                     u1011:
  2016   0008D4  FFFF               	dw	65535	; assembler added errata NOP
  2017   0008D6  EFD0  F003         	goto	l2033
  2018   0008DA                     u1010:
  2019   0008DA  FFFF               	dw	65535	; assembler added errata NOP
  2020   0008DC  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2021   0008DE  EF7C  F004         	goto	u1020
  2022   0008E2  5031               	movf	(dtoa@p+1)^0,w,c
  2023   0008E4  E106               	bnz	u1021
  2024   0008E6  0430               	decf	dtoa@p^0,w,c
  2025   0008E8  B0D8               	btfsc	status,0,c
  2026   0008EA  EF79  F004         	goto	u1021
  2027   0008EE  EF7C  F004         	goto	u1020
  2028   0008F2                     u1021:
  2029   0008F2  FFFF               	dw	65535	; assembler added errata NOP
  2030   0008F4  EFD0  F003         	goto	l2033
  2031   0008F8                     u1020:
  2032   0008F8                     l2049:
  2033   0008F8  FFFF               	dw	65535	; assembler added errata NOP
  2034                           
  2035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2036   0008FA  503E               	movf	dtoa@s^0,w,c
  2037   0008FC  B4D8               	btfsc	status,2,c
  2038   0008FE  EF83  F004         	goto	u1031
  2039   000902  EF86  F004         	goto	u1030
  2040   000906                     u1031:
  2041   000906  FFFF               	dw	65535	; assembler added errata NOP
  2042   000908  EF92  F004         	goto	l2055
  2043   00090C                     u1030:
  2044   00090C  FFFF               	dw	65535	; assembler added errata NOP
  2045   00090E                     
  2046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2047   00090E  063C               	decf	dtoa@i^0,f,c
  2048   000910  A0D8               	btfss	status,0,c
  2049   000912  063D               	decf	(dtoa@i+1)^0,f,c
  2050   000914                     
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2052   000914  0EA9               	movlw	low _dbuf
  2053   000916  243C               	addwf	dtoa@i^0,w,c
  2054   000918  6ED9               	movwf	fsr2l,c
  2055   00091A  0E00               	movlw	high _dbuf
  2056   00091C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2057   00091E  6EDA               	movwf	fsr2h,c
  2058   000920  C03E  FFDF         	movff	dtoa@s,indf2
  2059   000924                     l2055:
  2060   000924  FFFF               	dw	65535	; assembler added errata NOP
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2063   000926  C01C  F011         	movff	dtoa@fp,pad@fp
  2064   00092A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2065   00092E  0EA9               	movlw	low _dbuf
  2066   000930  243C               	addwf	dtoa@i^0,w,c
  2067   000932  6E13               	movwf	pad@buf^0,c
  2068   000934  0E00               	movlw	high _dbuf
  2069   000936  203D               	addwfc	(dtoa@i+1)^0,w,c
  2070   000938  6E14               	movwf	(pad@buf+1)^0,c
  2071   00093A  C032  F015         	movff	dtoa@w,pad@p
  2072   00093E  C033  F016         	movff	dtoa@w+1,pad@p+1
  2073   000942  EC04  F00B         	call	_pad	;wreg free
  2074   000946  0012               	return		;funcret
  2075   000948  FFFF               	dw	65535	; errata NOP
  2076   00094A                     __end_of_dtoa:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _pad *****************
  2080 ;; Defined at:
  2081 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2084 ;;		 -> sprintf@f(11), 
  2085 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2086 ;;		 -> dbuf(32), 
  2087 ;;  p               2   20[COMRAM] int 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  w               2   25[COMRAM] int 
  2090 ;;  i               2   23[COMRAM] int 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2100 ;;      Params:         6       0       0       0       0       0       0
  2101 ;;      Locals:         4       0       0       0       0       0       0
  2102 ;;      Temps:          1       0       0       0       0       0       0
  2103 ;;      Totals:        11       0       0       0       0       0       0
  2104 ;;Total ram usage:       11 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 3
  2107 ;; This function calls:
  2108 ;;		_fputc
  2109 ;;		_fputs
  2110 ;; This function is called by:
  2111 ;;		_dtoa
  2112 ;;		_xtoa
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text6
  2117   001608                     __ptext6:
  2118                           	callstack 0
  2119   001608                     _pad:
  2120                           	callstack 0
  2121   001608  FFFF               	dw	65535	; assembler added errata NOP
  2122   00160A                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2124   00160A  BE16               	btfsc	(pad@p+1)^0,7,c
  2125   00160C  EF0A  F00B         	goto	u911
  2126   001610  EF0D  F00B         	goto	u910
  2127   001614                     u911:
  2128   001614  FFFF               	dw	65535	; assembler added errata NOP
  2129   001616  EF14  F00B         	goto	l1993
  2130   00161A                     u910:
  2131   00161A  FFFF               	dw	65535	; assembler added errata NOP
  2132   00161C  C015  F01A         	movff	pad@p,pad@w
  2133   001620  C016  F01B         	movff	pad@p+1,pad@w+1
  2134   001624  EF19  F00B         	goto	l910
  2135   001628                     l1993:
  2136   001628  FFFF               	dw	65535	; assembler added errata NOP
  2137   00162A  0E00               	movlw	0
  2138   00162C  6E1B               	movwf	(pad@w+1)^0,c
  2139   00162E  0E00               	movlw	0
  2140   001630  6E1A               	movwf	pad@w^0,c
  2141   001632                     l910:
  2142   001632  FFFF               	dw	65535	; assembler added errata NOP
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2145   001634  0E00               	movlw	0
  2146   001636  6E19               	movwf	(pad@i+1)^0,c
  2147   001638  0E00               	movlw	0
  2148   00163A  6E18               	movwf	pad@i^0,c
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2151   00163C  EF2D  F00B         	goto	l1999
  2152   001640                     l1995:
  2153   001640  FFFF               	dw	65535	; assembler added errata NOP
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2156   001642  0E00               	movlw	0
  2157   001644  6E02               	movwf	(fputc@c+1)^0,c
  2158   001646  0E20               	movlw	32
  2159   001648  6E01               	movwf	fputc@c^0,c
  2160   00164A  C011  F003         	movff	pad@fp,fputc@fp
  2161   00164E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2162   001652  EC42  F00A         	call	_fputc	;wreg free
  2163   001656                     
  2164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2165   001656  4A18               	infsnz	pad@i^0,f,c
  2166   001658  2A19               	incf	(pad@i+1)^0,f,c
  2167   00165A                     l1999:
  2168   00165A  FFFF               	dw	65535	; assembler added errata NOP
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2171   00165C  501A               	movf	pad@w^0,w,c
  2172   00165E  5C18               	subwf	pad@i^0,w,c
  2173   001660  5019               	movf	(pad@i+1)^0,w,c
  2174   001662  0A80               	xorlw	128
  2175   001664  6E17               	movwf	??_pad^0,c
  2176   001666  501B               	movf	(pad@w+1)^0,w,c
  2177   001668  0A80               	xorlw	128
  2178   00166A  5817               	subwfb	??_pad^0,w,c
  2179   00166C  A0D8               	btfss	status,0,c
  2180   00166E  EF3B  F00B         	goto	u921
  2181   001672  EF3E  F00B         	goto	u920
  2182   001676                     u921:
  2183   001676  FFFF               	dw	65535	; assembler added errata NOP
  2184   001678  EF20  F00B         	goto	l1995
  2185   00167C                     u920:
  2186   00167C  FFFF               	dw	65535	; assembler added errata NOP
  2187   00167E                     
  2188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2189   00167E  C013  F00A         	movff	pad@buf,fputs@s
  2190   001682  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2191   001686  C011  F00C         	movff	pad@fp,fputs@fp
  2192   00168A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2193   00168E  ECB2  F00C         	call	_fputs	;wreg free
  2194   001692  0012               	return		;funcret
  2195   001694  FFFF               	dw	65535	; errata NOP
  2196   001696                     __end_of_pad:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function _fputs *****************
  2200 ;; Defined at:
  2201 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2204 ;;		 -> dbuf(32), 
  2205 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2206 ;;		 -> sprintf@f(11), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  i               2   14[COMRAM] int 
  2209 ;;  c               1   13[COMRAM] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2    9[COMRAM] int 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2219 ;;      Params:         4       0       0       0       0       0       0
  2220 ;;      Locals:         3       0       0       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0       0       0
  2222 ;;      Totals:         7       0       0       0       0       0       0
  2223 ;;Total ram usage:        7 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 2
  2226 ;; This function calls:
  2227 ;;		_fputc
  2228 ;; This function is called by:
  2229 ;;		_pad
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text7
  2234   001964                     __ptext7:
  2235                           	callstack 0
  2236   001964                     _fputs:
  2237                           	callstack 0
  2238   001964  FFFF               	dw	65535	; assembler added errata NOP
  2239   001966  0E00               	movlw	0
  2240   001968  6E10               	movwf	(fputs@i+1)^0,c
  2241   00196A  0E00               	movlw	0
  2242   00196C  6E0F               	movwf	fputs@i^0,c
  2243   00196E  EFC5  F00C         	goto	l1907
  2244   001972                     l1903:
  2245   001972  FFFF               	dw	65535	; assembler added errata NOP
  2246   001974  C00E  F001         	movff	fputs@c,fputc@c
  2247   001978  6A02               	clrf	(fputc@c+1)^0,c
  2248   00197A  C00C  F003         	movff	fputs@fp,fputc@fp
  2249   00197E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2250   001982  EC42  F00A         	call	_fputc	;wreg free
  2251   001986  4A0F               	infsnz	fputs@i^0,f,c
  2252   001988  2A10               	incf	(fputs@i+1)^0,f,c
  2253   00198A                     l1907:
  2254   00198A  FFFF               	dw	65535	; assembler added errata NOP
  2255   00198C  500F               	movf	fputs@i^0,w,c
  2256   00198E  240A               	addwf	fputs@s^0,w,c
  2257   001990  6ED9               	movwf	fsr2l,c
  2258   001992  5010               	movf	(fputs@i+1)^0,w,c
  2259   001994  200B               	addwfc	(fputs@s+1)^0,w,c
  2260   001996  6EDA               	movwf	fsr2h,c
  2261   001998  50DF               	movf	indf2,w,c
  2262   00199A  6E0E               	movwf	fputs@c^0,c
  2263   00199C  500E               	movf	fputs@c^0,w,c
  2264   00199E  A4D8               	btfss	status,2,c
  2265   0019A0  EFD4  F00C         	goto	u771
  2266   0019A4  EFD7  F00C         	goto	u770
  2267   0019A8                     u771:
  2268   0019A8  FFFF               	dw	65535	; assembler added errata NOP
  2269   0019AA  EFB9  F00C         	goto	l1903
  2270   0019AE                     u770:
  2271   0019AE  FFFF               	dw	65535	; assembler added errata NOP
  2272   0019B0  0012               	return		;funcret
  2273   0019B2  FFFF               	dw	65535	; errata NOP
  2274   0019B4                     __end_of_fputs:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _fputc *****************
  2278 ;; Defined at:
  2279 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  c               2    0[COMRAM] int 
  2282 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2283 ;;		 -> sprintf@f(11), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2    0[COMRAM] int 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2295 ;;      Params:         4       0       0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0
  2297 ;;      Temps:          5       0       0       0       0       0       0
  2298 ;;      Totals:         9       0       0       0       0       0       0
  2299 ;;Total ram usage:        9 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 1
  2302 ;; This function calls:
  2303 ;;		_putch
  2304 ;; This function is called by:
  2305 ;;		_pad
  2306 ;;		_vfpfcnvrt
  2307 ;;		_fputs
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text8
  2312   001484                     __ptext8:
  2313                           	callstack 0
  2314   001484                     _fputc:
  2315                           	callstack 0
  2316   001484  FFFF               	dw	65535	; assembler added errata NOP
  2317   001486  5003               	movf	fputc@fp^0,w,c
  2318   001488  1004               	iorwf	(fputc@fp+1)^0,w,c
  2319   00148A  B4D8               	btfsc	status,2,c
  2320   00148C  EF4A  F00A         	goto	u731
  2321   001490  EF4D  F00A         	goto	u730
  2322   001494                     u731:
  2323   001494  FFFF               	dw	65535	; assembler added errata NOP
  2324   001496  EF58  F00A         	goto	l1891
  2325   00149A                     u730:
  2326   00149A  FFFF               	dw	65535	; assembler added errata NOP
  2327   00149C  5003               	movf	fputc@fp^0,w,c
  2328   00149E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2329   0014A0  A4D8               	btfss	status,2,c
  2330   0014A2  EF55  F00A         	goto	u741
  2331   0014A6  EF58  F00A         	goto	u740
  2332   0014AA                     u741:
  2333   0014AA  FFFF               	dw	65535	; assembler added errata NOP
  2334   0014AC  EF5E  F00A         	goto	l1893
  2335   0014B0                     u740:
  2336   0014B0                     l1891:
  2337   0014B0  FFFF               	dw	65535	; assembler added errata NOP
  2338   0014B2  5001               	movf	fputc@c^0,w,c
  2339   0014B4  ECB9  F00D         	call	_putch
  2340   0014B8  EFB0  F00A         	goto	l987
  2341   0014BC                     l1893:
  2342   0014BC  FFFF               	dw	65535	; assembler added errata NOP
  2343   0014BE  EE20 F009          	lfsr	2,9
  2344   0014C2  5003               	movf	fputc@fp^0,w,c
  2345   0014C4  26D9               	addwf	fsr2l,f,c
  2346   0014C6  5004               	movf	(fputc@fp+1)^0,w,c
  2347   0014C8  22DA               	addwfc	fsr2h,f,c
  2348   0014CA  50DE               	movf	postinc2,w,c
  2349   0014CC  10DE               	iorwf	postinc2,w,c
  2350   0014CE  B4D8               	btfsc	status,2,c
  2351   0014D0  EF6C  F00A         	goto	u751
  2352   0014D4  EF6F  F00A         	goto	u750
  2353   0014D8                     u751:
  2354   0014D8  FFFF               	dw	65535	; assembler added errata NOP
  2355   0014DA  EF8C  F00A         	goto	l1897
  2356   0014DE                     u750:
  2357   0014DE  FFFF               	dw	65535	; assembler added errata NOP
  2358   0014E0  EE20 F009          	lfsr	2,9
  2359   0014E4  5003               	movf	fputc@fp^0,w,c
  2360   0014E6  26D9               	addwf	fsr2l,f,c
  2361   0014E8  5004               	movf	(fputc@fp+1)^0,w,c
  2362   0014EA  22DA               	addwfc	fsr2h,f,c
  2363   0014EC  EE10 F003          	lfsr	1,3
  2364   0014F0  5003               	movf	fputc@fp^0,w,c
  2365   0014F2  26E1               	addwf	fsr1l,f,c
  2366   0014F4  5004               	movf	(fputc@fp+1)^0,w,c
  2367   0014F6  22E2               	addwfc	fsr1h,f,c
  2368   0014F8  50DE               	movf	postinc2,w,c
  2369   0014FA  5CE6               	subwf	postinc1,w,c
  2370   0014FC  50E6               	movf	postinc1,w,c
  2371   0014FE  0A80               	xorlw	128
  2372   001500  6E09               	movwf	(??_fputc+4)^0,c
  2373   001502  50DE               	movf	postinc2,w,c
  2374   001504  0A80               	xorlw	128
  2375   001506  5809               	subwfb	(??_fputc+4)^0,w,c
  2376   001508  B0D8               	btfsc	status,0,c
  2377   00150A  EF89  F00A         	goto	u761
  2378   00150E  EF8C  F00A         	goto	u760
  2379   001512                     u761:
  2380   001512  FFFF               	dw	65535	; assembler added errata NOP
  2381   001514  EFB0  F00A         	goto	l987
  2382   001518                     u760:
  2383   001518                     l1897:
  2384   001518  FFFF               	dw	65535	; assembler added errata NOP
  2385   00151A  EE20 F003          	lfsr	2,3
  2386   00151E  5003               	movf	fputc@fp^0,w,c
  2387   001520  26D9               	addwf	fsr2l,f,c
  2388   001522  5004               	movf	(fputc@fp+1)^0,w,c
  2389   001524  22DA               	addwfc	fsr2h,f,c
  2390   001526  CFDE F005          	movff	postinc2,??_fputc
  2391   00152A  CFDD F006          	movff	postdec2,??_fputc+1
  2392   00152E  C003  FFD9         	movff	fputc@fp,fsr2l
  2393   001532  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2394   001536  CFDE F007          	movff	postinc2,??_fputc+2
  2395   00153A  CFDD F008          	movff	postdec2,??_fputc+3
  2396   00153E  5005               	movf	??_fputc^0,w,c
  2397   001540  2407               	addwf	(??_fputc+2)^0,w,c
  2398   001542  6ED9               	movwf	fsr2l,c
  2399   001544  5006               	movf	(??_fputc+1)^0,w,c
  2400   001546  2008               	addwfc	(??_fputc+3)^0,w,c
  2401   001548  6EDA               	movwf	fsr2h,c
  2402   00154A  C001  FFDF         	movff	fputc@c,indf2
  2403   00154E  EE20 F003          	lfsr	2,3
  2404   001552  5003               	movf	fputc@fp^0,w,c
  2405   001554  26D9               	addwf	fsr2l,f,c
  2406   001556  5004               	movf	(fputc@fp+1)^0,w,c
  2407   001558  22DA               	addwfc	fsr2h,f,c
  2408   00155A  2ADE               	incf	postinc2,f,c
  2409   00155C  0E00               	movlw	0
  2410   00155E  22DD               	addwfc	postdec2,f,c
  2411   001560                     l987:
  2412   001560  FFFF               	dw	65535	; assembler added errata NOP
  2413   001562  0012               	return		;funcret
  2414   001564  FFFF               	dw	65535	; errata NOP
  2415   001566                     __end_of_fputc:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _putch *****************
  2419 ;; Defined at:
  2420 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  c               1    wreg     unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  c               1    0[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2434 ;;      Params:         0       0       0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_fputc
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text9
  2448   001B72                     __ptext9:
  2449                           	callstack 0
  2450   001B72                     _putch:
  2451                           	callstack 0
  2452   001B72  FFFF               	dw	65535	; assembler added errata NOP
  2453   001B74  0012               	return		;funcret
  2454   001B76  FFFF               	dw	65535	; errata NOP
  2455   001B78                     __end_of_putch:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _abs *****************
  2459 ;; Defined at:
  2460 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  a               2   18[COMRAM] int 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2   18[COMRAM] int 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2474 ;;      Params:         2       0       0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0
  2476 ;;      Temps:          2       0       0       0       0       0       0
  2477 ;;      Totals:         4       0       0       0       0       0       0
  2478 ;;Total ram usage:        4 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_dtoa
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text10
  2488   0019B4                     __ptext10:
  2489                           	callstack 0
  2490   0019B4                     _abs:
  2491                           	callstack 0
  2492   0019B4  FFFF               	dw	65535	; assembler added errata NOP
  2493   0019B6  BE14               	btfsc	(abs@a+1)^0,7,c
  2494   0019B8  EFE9  F00C         	goto	u930
  2495   0019BC  5014               	movf	(abs@a+1)^0,w,c
  2496   0019BE  E106               	bnz	u931
  2497   0019C0  0413               	decf	abs@a^0,w,c
  2498   0019C2  B0D8               	btfsc	status,0,c
  2499   0019C4  EFE6  F00C         	goto	u931
  2500   0019C8  EFE9  F00C         	goto	u930
  2501   0019CC                     u931:
  2502   0019CC  FFFF               	dw	65535	; assembler added errata NOP
  2503   0019CE  EFF8  F00C         	goto	l972
  2504   0019D2                     u930:
  2505   0019D2  FFFF               	dw	65535	; assembler added errata NOP
  2506   0019D4  C013  F015         	movff	abs@a,??_abs
  2507   0019D8  C014  F016         	movff	abs@a+1,??_abs+1
  2508   0019DC  1E15               	comf	??_abs^0,f,c
  2509   0019DE  1E16               	comf	(??_abs+1)^0,f,c
  2510   0019E0  4A15               	infsnz	??_abs^0,f,c
  2511   0019E2  2A16               	incf	(??_abs+1)^0,f,c
  2512   0019E4  C015  F013         	movff	??_abs,?_abs
  2513   0019E8  C016  F014         	movff	??_abs+1,?_abs+1
  2514   0019EC  EFFD  F00C         	goto	l975
  2515   0019F0                     l972:
  2516   0019F0  FFFF               	dw	65535	; assembler added errata NOP
  2517   0019F2  C013  F013         	movff	abs@a,?_abs
  2518   0019F6  C014  F014         	movff	abs@a+1,?_abs+1
  2519   0019FA                     l975:
  2520   0019FA  FFFF               	dw	65535	; assembler added errata NOP
  2521   0019FC  0012               	return		;funcret
  2522   0019FE  FFFF               	dw	65535	; errata NOP
  2523   001A00                     __end_of_abs:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function ___aomod *****************
  2527 ;; Defined at:
  2528 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  dividend        8    0[COMRAM] long long 
  2531 ;;  divisor         8    8[COMRAM] long long 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  sign            1   17[COMRAM] unsigned char 
  2534 ;;  counter         1   16[COMRAM] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  8    0[COMRAM] long long 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2544 ;;      Params:        16       0       0       0       0       0       0
  2545 ;;      Locals:         2       0       0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0       0       0
  2547 ;;      Totals:        18       0       0       0       0       0       0
  2548 ;;Total ram usage:       18 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_dtoa
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text11
  2558   0010A4                     __ptext11:
  2559                           	callstack 0
  2560   0010A4                     ___aomod:
  2561                           	callstack 0
  2562   0010A4  FFFF               	dw	65535	; assembler added errata NOP
  2563   0010A6  0E00               	movlw	0
  2564   0010A8  6E12               	movwf	___aomod@sign^0,c
  2565   0010AA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2566   0010AC  EF5D  F008         	goto	u850
  2567   0010B0  EF5A  F008         	goto	u851
  2568   0010B4                     u851:
  2569   0010B4  FFFF               	dw	65535	; assembler added errata NOP
  2570   0010B6  EF70  F008         	goto	l1961
  2571   0010BA                     u850:
  2572   0010BA  FFFF               	dw	65535	; assembler added errata NOP
  2573   0010BC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2574   0010BE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2575   0010C0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2576   0010C2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2577   0010C4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2578   0010C6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2579   0010C8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2580   0010CA  6C01               	negf	___aomod@dividend^0,c
  2581   0010CC  0E00               	movlw	0
  2582   0010CE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2583   0010D0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2584   0010D2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2585   0010D4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2586   0010D6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2587   0010D8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2588   0010DA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2589   0010DC  0E01               	movlw	1
  2590   0010DE  6E12               	movwf	___aomod@sign^0,c
  2591   0010E0                     l1961:
  2592   0010E0  FFFF               	dw	65535	; assembler added errata NOP
  2593   0010E2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2594   0010E4  EF79  F008         	goto	u860
  2595   0010E8  EF76  F008         	goto	u861
  2596   0010EC                     u861:
  2597   0010EC  FFFF               	dw	65535	; assembler added errata NOP
  2598   0010EE  EF8A  F008         	goto	l1965
  2599   0010F2                     u860:
  2600   0010F2  FFFF               	dw	65535	; assembler added errata NOP
  2601   0010F4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2602   0010F6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2603   0010F8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2604   0010FA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2605   0010FC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2606   0010FE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2607   001100  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2608   001102  6C09               	negf	___aomod@divisor^0,c
  2609   001104  0E00               	movlw	0
  2610   001106  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2611   001108  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2612   00110A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2613   00110C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2614   00110E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2615   001110  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2616   001112  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2617   001114                     l1965:
  2618   001114  FFFF               	dw	65535	; assembler added errata NOP
  2619   001116  5009               	movf	___aomod@divisor^0,w,c
  2620   001118  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2621   00111A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2622   00111C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2623   00111E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2624   001120  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2625   001122  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2626   001124  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2627   001126  B4D8               	btfsc	status,2,c
  2628   001128  EF98  F008         	goto	u871
  2629   00112C  EF9B  F008         	goto	u870
  2630   001130                     u871:
  2631   001130  FFFF               	dw	65535	; assembler added errata NOP
  2632   001132  EFEC  F008         	goto	l1981
  2633   001136                     u870:
  2634   001136  FFFF               	dw	65535	; assembler added errata NOP
  2635   001138  0E01               	movlw	1
  2636   00113A  6E11               	movwf	___aomod@counter^0,c
  2637   00113C  EFAB  F008         	goto	l1971
  2638   001140                     l1969:
  2639   001140  FFFF               	dw	65535	; assembler added errata NOP
  2640   001142  90D8               	bcf	status,0,c
  2641   001144  3609               	rlcf	___aomod@divisor^0,f,c
  2642   001146  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2643   001148  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2644   00114A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2645   00114C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2646   00114E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2647   001150  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2648   001152  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2649   001154  2A11               	incf	___aomod@counter^0,f,c
  2650   001156                     l1971:
  2651   001156  FFFF               	dw	65535	; assembler added errata NOP
  2652   001158  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2653   00115A  EFB1  F008         	goto	u881
  2654   00115E  EFB4  F008         	goto	u880
  2655   001162                     u881:
  2656   001162  FFFF               	dw	65535	; assembler added errata NOP
  2657   001164  EFA0  F008         	goto	l1969
  2658   001168                     u880:
  2659   001168  FFFF               	dw	65535	; assembler added errata NOP
  2660   00116A                     l1973:
  2661   00116A  FFFF               	dw	65535	; assembler added errata NOP
  2662   00116C  5009               	movf	___aomod@divisor^0,w,c
  2663   00116E  5C01               	subwf	___aomod@dividend^0,w,c
  2664   001170  500A               	movf	(___aomod@divisor+1)^0,w,c
  2665   001172  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2666   001174  500B               	movf	(___aomod@divisor+2)^0,w,c
  2667   001176  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2668   001178  500C               	movf	(___aomod@divisor+3)^0,w,c
  2669   00117A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2670   00117C  500D               	movf	(___aomod@divisor+4)^0,w,c
  2671   00117E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2672   001180  500E               	movf	(___aomod@divisor+5)^0,w,c
  2673   001182  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2674   001184  500F               	movf	(___aomod@divisor+6)^0,w,c
  2675   001186  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2676   001188  5010               	movf	(___aomod@divisor+7)^0,w,c
  2677   00118A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2678   00118C  A0D8               	btfss	status,0,c
  2679   00118E  EFCB  F008         	goto	u891
  2680   001192  EFCE  F008         	goto	u890
  2681   001196                     u891:
  2682   001196  FFFF               	dw	65535	; assembler added errata NOP
  2683   001198  EFDF  F008         	goto	l1977
  2684   00119C                     u890:
  2685   00119C  FFFF               	dw	65535	; assembler added errata NOP
  2686   00119E  5009               	movf	___aomod@divisor^0,w,c
  2687   0011A0  5E01               	subwf	___aomod@dividend^0,f,c
  2688   0011A2  500A               	movf	(___aomod@divisor+1)^0,w,c
  2689   0011A4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2690   0011A6  500B               	movf	(___aomod@divisor+2)^0,w,c
  2691   0011A8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2692   0011AA  500C               	movf	(___aomod@divisor+3)^0,w,c
  2693   0011AC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2694   0011AE  500D               	movf	(___aomod@divisor+4)^0,w,c
  2695   0011B0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2696   0011B2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2697   0011B4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2698   0011B6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2699   0011B8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2700   0011BA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2701   0011BC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2702   0011BE                     l1977:
  2703   0011BE  FFFF               	dw	65535	; assembler added errata NOP
  2704   0011C0  90D8               	bcf	status,0,c
  2705   0011C2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2706   0011C4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2707   0011C6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2708   0011C8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2709   0011CA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2710   0011CC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2711   0011CE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2712   0011D0  3209               	rrcf	___aomod@divisor^0,f,c
  2713   0011D2  2E11               	decfsz	___aomod@counter^0,f,c
  2714   0011D4  EFB5  F008         	goto	l1973
  2715   0011D8                     l1981:
  2716   0011D8  FFFF               	dw	65535	; assembler added errata NOP
  2717   0011DA  5012               	movf	___aomod@sign^0,w,c
  2718   0011DC  B4D8               	btfsc	status,2,c
  2719   0011DE  EFF3  F008         	goto	u901
  2720   0011E2  EFF6  F008         	goto	u900
  2721   0011E6                     u901:
  2722   0011E6  FFFF               	dw	65535	; assembler added errata NOP
  2723   0011E8  EF07  F009         	goto	l1985
  2724   0011EC                     u900:
  2725   0011EC  FFFF               	dw	65535	; assembler added errata NOP
  2726   0011EE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2727   0011F0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2728   0011F2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2729   0011F4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2730   0011F6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2731   0011F8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2732   0011FA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2733   0011FC  6C01               	negf	___aomod@dividend^0,c
  2734   0011FE  0E00               	movlw	0
  2735   001200  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2736   001202  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2737   001204  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2738   001206  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2739   001208  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2740   00120A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2741   00120C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2742   00120E                     l1985:
  2743   00120E  FFFF               	dw	65535	; assembler added errata NOP
  2744   001210  C001  F001         	movff	___aomod@dividend,?___aomod
  2745   001214  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2746   001218  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2747   00121C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2748   001220  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2749   001224  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2750   001228  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2751   00122C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2752   001230  0012               	return		;funcret
  2753   001232  FFFF               	dw	65535	; errata NOP
  2754   001234                     __end_of___aomod:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function ___aodiv *****************
  2758 ;; Defined at:
  2759 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  dividend        8    0[COMRAM] long long 
  2762 ;;  divisor         8    8[COMRAM] long long 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  quotient        8   18[COMRAM] long long 
  2765 ;;  sign            1   17[COMRAM] unsigned char 
  2766 ;;  counter         1   16[COMRAM] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  8    0[COMRAM] long long 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2776 ;;      Params:        16       0       0       0       0       0       0
  2777 ;;      Locals:        10       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0
  2779 ;;      Totals:        26       0       0       0       0       0       0
  2780 ;;Total ram usage:       26 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_dtoa
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text12
  2790   000D56                     __ptext12:
  2791                           	callstack 0
  2792   000D56                     ___aodiv:
  2793                           	callstack 0
  2794   000D56  FFFF               	dw	65535	; assembler added errata NOP
  2795   000D58  0E00               	movlw	0
  2796   000D5A  6E12               	movwf	___aodiv@sign^0,c
  2797   000D5C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2798   000D5E  EFB6  F006         	goto	u780
  2799   000D62  EFB3  F006         	goto	u781
  2800   000D66                     u781:
  2801   000D66  FFFF               	dw	65535	; assembler added errata NOP
  2802   000D68  EFC9  F006         	goto	l1917
  2803   000D6C                     u780:
  2804   000D6C  FFFF               	dw	65535	; assembler added errata NOP
  2805   000D6E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2806   000D70  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2807   000D72  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2808   000D74  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2809   000D76  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2810   000D78  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2811   000D7A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2812   000D7C  6C09               	negf	___aodiv@divisor^0,c
  2813   000D7E  0E00               	movlw	0
  2814   000D80  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2815   000D82  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2816   000D84  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2817   000D86  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2818   000D88  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2819   000D8A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2820   000D8C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2821   000D8E  0E01               	movlw	1
  2822   000D90  6E12               	movwf	___aodiv@sign^0,c
  2823   000D92                     l1917:
  2824   000D92  FFFF               	dw	65535	; assembler added errata NOP
  2825   000D94  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2826   000D96  EFD2  F006         	goto	u790
  2827   000D9A  EFCF  F006         	goto	u791
  2828   000D9E                     u791:
  2829   000D9E  FFFF               	dw	65535	; assembler added errata NOP
  2830   000DA0  EFE5  F006         	goto	l1923
  2831   000DA4                     u790:
  2832   000DA4  FFFF               	dw	65535	; assembler added errata NOP
  2833   000DA6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2834   000DA8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2835   000DAA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2836   000DAC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2837   000DAE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2838   000DB0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2839   000DB2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2840   000DB4  6C01               	negf	___aodiv@dividend^0,c
  2841   000DB6  0E00               	movlw	0
  2842   000DB8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2843   000DBA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2844   000DBC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2845   000DBE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2846   000DC0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2847   000DC2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2848   000DC4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2849   000DC6  0E01               	movlw	1
  2850   000DC8  1A12               	xorwf	___aodiv@sign^0,f,c
  2851   000DCA                     l1923:
  2852   000DCA  FFFF               	dw	65535	; assembler added errata NOP
  2853   000DCC  EE20  F013         	lfsr	2,___aodiv@quotient
  2854   000DD0  0E07               	movlw	7
  2855   000DD2                     u801:
  2856   000DD2  6ADE               	clrf	postinc2,c
  2857   000DD4  06E8               	decf	wreg,f,c
  2858   000DD6  E2FD               	bc	u801
  2859   000DD8  5009               	movf	___aodiv@divisor^0,w,c
  2860   000DDA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2861   000DDC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2862   000DDE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2863   000DE0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2864   000DE2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2865   000DE4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2866   000DE6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2867   000DE8  B4D8               	btfsc	status,2,c
  2868   000DEA  EFF9  F006         	goto	u811
  2869   000DEE  EFFC  F006         	goto	u810
  2870   000DF2                     u811:
  2871   000DF2  FFFF               	dw	65535	; assembler added errata NOP
  2872   000DF4  EF57  F007         	goto	l1945
  2873   000DF8                     u810:
  2874   000DF8  FFFF               	dw	65535	; assembler added errata NOP
  2875   000DFA  0E01               	movlw	1
  2876   000DFC  6E11               	movwf	___aodiv@counter^0,c
  2877   000DFE  EF0C  F007         	goto	l1931
  2878   000E02                     l1929:
  2879   000E02  FFFF               	dw	65535	; assembler added errata NOP
  2880   000E04  90D8               	bcf	status,0,c
  2881   000E06  3609               	rlcf	___aodiv@divisor^0,f,c
  2882   000E08  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2883   000E0A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2884   000E0C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2885   000E0E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2886   000E10  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2887   000E12  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2888   000E14  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2889   000E16  2A11               	incf	___aodiv@counter^0,f,c
  2890   000E18                     l1931:
  2891   000E18  FFFF               	dw	65535	; assembler added errata NOP
  2892   000E1A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2893   000E1C  EF12  F007         	goto	u821
  2894   000E20  EF15  F007         	goto	u820
  2895   000E24                     u821:
  2896   000E24  FFFF               	dw	65535	; assembler added errata NOP
  2897   000E26  EF01  F007         	goto	l1929
  2898   000E2A                     u820:
  2899   000E2A  FFFF               	dw	65535	; assembler added errata NOP
  2900   000E2C                     l1933:
  2901   000E2C  FFFF               	dw	65535	; assembler added errata NOP
  2902   000E2E  90D8               	bcf	status,0,c
  2903   000E30  3613               	rlcf	___aodiv@quotient^0,f,c
  2904   000E32  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2905   000E34  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2906   000E36  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2907   000E38  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2908   000E3A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2909   000E3C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2910   000E3E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2911   000E40  5009               	movf	___aodiv@divisor^0,w,c
  2912   000E42  5C01               	subwf	___aodiv@dividend^0,w,c
  2913   000E44  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2914   000E46  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2915   000E48  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2916   000E4A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2917   000E4C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2918   000E4E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2919   000E50  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2920   000E52  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2921   000E54  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2922   000E56  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2923   000E58  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2924   000E5A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2925   000E5C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2926   000E5E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2927   000E60  A0D8               	btfss	status,0,c
  2928   000E62  EF35  F007         	goto	u831
  2929   000E66  EF38  F007         	goto	u830
  2930   000E6A                     u831:
  2931   000E6A  FFFF               	dw	65535	; assembler added errata NOP
  2932   000E6C  EF4A  F007         	goto	l1941
  2933   000E70                     u830:
  2934   000E70  FFFF               	dw	65535	; assembler added errata NOP
  2935   000E72  5009               	movf	___aodiv@divisor^0,w,c
  2936   000E74  5E01               	subwf	___aodiv@dividend^0,f,c
  2937   000E76  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2938   000E78  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2939   000E7A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2940   000E7C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2941   000E7E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2942   000E80  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2943   000E82  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2944   000E84  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2945   000E86  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2946   000E88  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2947   000E8A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2948   000E8C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2949   000E8E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2950   000E90  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2951   000E92  8013               	bsf	___aodiv@quotient^0,0,c
  2952   000E94                     l1941:
  2953   000E94  FFFF               	dw	65535	; assembler added errata NOP
  2954   000E96  90D8               	bcf	status,0,c
  2955   000E98  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2956   000E9A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2957   000E9C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2958   000E9E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2959   000EA0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2960   000EA2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2961   000EA4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2962   000EA6  3209               	rrcf	___aodiv@divisor^0,f,c
  2963   000EA8  2E11               	decfsz	___aodiv@counter^0,f,c
  2964   000EAA  EF16  F007         	goto	l1933
  2965   000EAE                     l1945:
  2966   000EAE  FFFF               	dw	65535	; assembler added errata NOP
  2967   000EB0  5012               	movf	___aodiv@sign^0,w,c
  2968   000EB2  B4D8               	btfsc	status,2,c
  2969   000EB4  EF5E  F007         	goto	u841
  2970   000EB8  EF61  F007         	goto	u840
  2971   000EBC                     u841:
  2972   000EBC  FFFF               	dw	65535	; assembler added errata NOP
  2973   000EBE  EF72  F007         	goto	l1949
  2974   000EC2                     u840:
  2975   000EC2  FFFF               	dw	65535	; assembler added errata NOP
  2976   000EC4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2977   000EC6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2978   000EC8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2979   000ECA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2980   000ECC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2981   000ECE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2982   000ED0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2983   000ED2  6C13               	negf	___aodiv@quotient^0,c
  2984   000ED4  0E00               	movlw	0
  2985   000ED6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2986   000ED8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2987   000EDA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2988   000EDC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2989   000EDE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2990   000EE0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2991   000EE2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2992   000EE4                     l1949:
  2993   000EE4  FFFF               	dw	65535	; assembler added errata NOP
  2994   000EE6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2995   000EEA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2996   000EEE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2997   000EF2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2998   000EF6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2999   000EFA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3000   000EFE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3001   000F02  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3002   000F06  0012               	return		;funcret
  3003   000F08  FFFF               	dw	65535	; errata NOP
  3004   000F0A                     __end_of___aodiv:
  3005                           	callstack 0
  3006                           
  3007 ;; *************** function _led_init *****************
  3008 ;; Defined at:
  3009 ;;		line 3 in file "led.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3023 ;;      Params:         0       0       0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0
  3026 ;;      Totals:         0       0       0       0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text13
  3037   001B3E                     __ptext13:
  3038                           	callstack 0
  3039   001B3E                     _led_init:
  3040                           	callstack 0
  3041   001B3E  FFFF               	dw	65535	; assembler added errata NOP
  3042   001B40                     
  3043                           ;led.c: 5:     TRISD = 0x00;
  3044   001B40  0E00               	movlw	0
  3045   001B42  6E95               	movwf	149,c	;volatile
  3046   001B44                     
  3047                           ;led.c: 7:     LATDbits.LATD0 = 0;
  3048   001B44  908C               	bcf	140,0,c	;volatile
  3049   001B46                     
  3050                           ;led.c: 8:     LATDbits.LATD1 = 0;
  3051   001B46  928C               	bcf	140,1,c	;volatile
  3052   001B48                     
  3053                           ;led.c: 9:     LATDbits.LATD2 = 0;
  3054   001B48  948C               	bcf	140,2,c	;volatile
  3055   001B4A                     
  3056                           ;led.c: 10:     LATDbits.LATD3 = 0;
  3057   001B4A  968C               	bcf	140,3,c	;volatile
  3058   001B4C                     
  3059                           ;led.c: 11:     LATDbits.LATD4 = 0;
  3060   001B4C  988C               	bcf	140,4,c	;volatile
  3061   001B4E                     
  3062                           ;led.c: 12:     LATDbits.LATD5 = 0;
  3063   001B4E  9A8C               	bcf	140,5,c	;volatile
  3064   001B50                     
  3065                           ;led.c: 13:     LATDbits.LATD6 = 0;
  3066   001B50  9C8C               	bcf	140,6,c	;volatile
  3067   001B52                     
  3068                           ;led.c: 14:     LATDbits.LATD7 = 0;
  3069   001B52  9E8C               	bcf	140,7,c	;volatile
  3070   001B54  0012               	return		;funcret
  3071   001B56  FFFF               	dw	65535	; errata NOP
  3072   001B58                     __end_of_led_init:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _lcd_update *****************
  3076 ;; Defined at:
  3077 ;;		line 89 in file "lcd.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  i               2    6[COMRAM] int 
  3082 ;;  i               2    4[COMRAM] int 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3092 ;;      Params:         0       0       0       0       0       0       0
  3093 ;;      Locals:         4       0       0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0
  3095 ;;      Totals:         4       0       0       0       0       0       0
  3096 ;;Total ram usage:        4 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 1
  3099 ;; This function calls:
  3100 ;;		_lcd_data
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text14
  3107   001566                     __ptext14:
  3108                           	callstack 0
  3109   001566                     _lcd_update:
  3110                           	callstack 0
  3111   001566  FFFF               	dw	65535	; assembler added errata NOP
  3112   001568                     
  3113                           ;lcd.c: 91:     lcd_data(0x80, 0);
  3114   001568  0E00               	movlw	0
  3115   00156A  6E01               	movwf	lcd_data@rs^0,c
  3116   00156C  0E80               	movlw	128
  3117   00156E  EC91  F00B         	call	_lcd_data
  3118   001572                     
  3119                           ;lcd.c: 92:     for (int i = 0; i < 16; i++) lcd_data(lcd[i], 1);
  3120   001572  0E00               	movlw	0
  3121   001574  6E06               	movwf	(lcd_update@i+1)^0,c
  3122   001576  0E00               	movlw	0
  3123   001578  6E05               	movwf	lcd_update@i^0,c
  3124   00157A                     l2349:
  3125   00157A  FFFF               	dw	65535	; assembler added errata NOP
  3126   00157C  0E01               	movlw	1
  3127   00157E  6E01               	movwf	lcd_data@rs^0,c
  3128   001580  0E88               	movlw	low _lcd
  3129   001582  2405               	addwf	lcd_update@i^0,w,c
  3130   001584  6ED9               	movwf	fsr2l,c
  3131   001586  0E00               	movlw	high _lcd
  3132   001588  2006               	addwfc	(lcd_update@i+1)^0,w,c
  3133   00158A  6EDA               	movwf	fsr2h,c
  3134   00158C  50DF               	movf	indf2,w,c
  3135   00158E  EC91  F00B         	call	_lcd_data
  3136   001592  4A05               	infsnz	lcd_update@i^0,f,c
  3137   001594  2A06               	incf	(lcd_update@i+1)^0,f,c
  3138   001596  BE06               	btfsc	(lcd_update@i+1)^0,7,c
  3139   001598  EFD7  F00A         	goto	u1301
  3140   00159C  5006               	movf	(lcd_update@i+1)^0,w,c
  3141   00159E  E10A               	bnz	u1300
  3142   0015A0  0E10               	movlw	16
  3143   0015A2  5C05               	subwf	lcd_update@i^0,w,c
  3144   0015A4  A0D8               	btfss	status,0,c
  3145   0015A6  EFD7  F00A         	goto	u1301
  3146   0015AA  EFDA  F00A         	goto	u1300
  3147   0015AE                     u1301:
  3148   0015AE  FFFF               	dw	65535	; assembler added errata NOP
  3149   0015B0  EFBD  F00A         	goto	l2349
  3150   0015B4                     u1300:
  3151   0015B4  FFFF               	dw	65535	; assembler added errata NOP
  3152   0015B6                     
  3153                           ;lcd.c: 94:     lcd_data(0xc0, 0);
  3154   0015B6  0E00               	movlw	0
  3155   0015B8  6E01               	movwf	lcd_data@rs^0,c
  3156   0015BA  0EC0               	movlw	192
  3157   0015BC  EC91  F00B         	call	_lcd_data
  3158   0015C0                     
  3159                           ;lcd.c: 95:     for (int i = 0; i < 16; i++) lcd_data(lcd[i + 16], 1);
  3160   0015C0  0E00               	movlw	0
  3161   0015C2  6E08               	movwf	(lcd_update@i_546+1)^0,c
  3162   0015C4  0E00               	movlw	0
  3163   0015C6  6E07               	movwf	lcd_update@i_546^0,c
  3164   0015C8                     l2363:
  3165   0015C8  FFFF               	dw	65535	; assembler added errata NOP
  3166   0015CA  0E01               	movlw	1
  3167   0015CC  6E01               	movwf	lcd_data@rs^0,c
  3168   0015CE  0E98               	movlw	low (_lcd+16)
  3169   0015D0  2407               	addwf	lcd_update@i_546^0,w,c
  3170   0015D2  6ED9               	movwf	fsr2l,c
  3171   0015D4  0E00               	movlw	high (_lcd+16)
  3172   0015D6  2008               	addwfc	(lcd_update@i_546+1)^0,w,c
  3173   0015D8  6EDA               	movwf	fsr2h,c
  3174   0015DA  50DF               	movf	indf2,w,c
  3175   0015DC  EC91  F00B         	call	_lcd_data
  3176   0015E0  4A07               	infsnz	lcd_update@i_546^0,f,c
  3177   0015E2  2A08               	incf	(lcd_update@i_546+1)^0,f,c
  3178   0015E4  BE08               	btfsc	(lcd_update@i_546+1)^0,7,c
  3179   0015E6  EFFE  F00A         	goto	u1311
  3180   0015EA  5008               	movf	(lcd_update@i_546+1)^0,w,c
  3181   0015EC  E10A               	bnz	u1310
  3182   0015EE  0E10               	movlw	16
  3183   0015F0  5C07               	subwf	lcd_update@i_546^0,w,c
  3184   0015F2  A0D8               	btfss	status,0,c
  3185   0015F4  EFFE  F00A         	goto	u1311
  3186   0015F8  EF01  F00B         	goto	u1310
  3187   0015FC                     u1311:
  3188   0015FC  FFFF               	dw	65535	; assembler added errata NOP
  3189   0015FE  EFE4  F00A         	goto	l2363
  3190   001602                     u1310:
  3191   001602  FFFF               	dw	65535	; assembler added errata NOP
  3192   001604  0012               	return		;funcret
  3193   001606  FFFF               	dw	65535	; errata NOP
  3194   001608                     __end_of_lcd_update:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _lcd_init *****************
  3198 ;; Defined at:
  3199 ;;		line 66 in file "lcd.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3213 ;;      Params:         0       0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0
  3215 ;;      Temps:          1       0       0       0       0       0       0
  3216 ;;      Totals:         1       0       0       0       0       0       0
  3217 ;;Total ram usage:        1 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 2
  3220 ;; This function calls:
  3221 ;;		_lcd_cls
  3222 ;;		_lcd_data
  3223 ;; This function is called by:
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text15
  3229   0018BA                     __ptext15:
  3230                           	callstack 0
  3231   0018BA                     _lcd_init:
  3232                           	callstack 0
  3233   0018BA  FFFF               	dw	65535	; assembler added errata NOP
  3234   0018BC                     
  3235                           ;lcd.c: 67:     TRISD = 0x00;
  3236   0018BC  0E00               	movlw	0
  3237   0018BE  6E95               	movwf	149,c	;volatile
  3238   0018C0                     
  3239                           ;lcd.c: 68:     TRISEbits.TRISE0 = 0;
  3240   0018C0  9096               	bcf	150,0,c	;volatile
  3241   0018C2                     
  3242                           ;lcd.c: 69:     TRISEbits.TRISE1 = 0;
  3243   0018C2  9296               	bcf	150,1,c	;volatile
  3244   0018C4                     
  3245                           ;lcd.c: 70:     TRISEbits.TRISE2 = 0;
  3246   0018C4  9496               	bcf	150,2,c	;volatile
  3247   0018C6                     
  3248                           ;lcd.c: 73:     LATEbits.LATE1 = 0;
  3249   0018C6  928D               	bcf	141,1,c	;volatile
  3250   0018C8                     
  3251                           ;lcd.c: 74:     _delay((unsigned long)((50)*(4000000L / 4/4000.0)));
  3252   0018C8  0E0D               	movlw	13
  3253   0018CA  6E0D               	movwf	??_lcd_init^0,c
  3254   0018CC  0E2E               	movlw	46
  3255   0018CE                     u1407:
  3256   0018CE  FFFF               	dw	65535	; errata NOP
  3257   0018D0  2EE8               	decfsz	wreg,f,c
  3258   0018D2  D7FD               	bra	u1407
  3259   0018D4  2E0D               	decfsz	??_lcd_init^0,f,c
  3260   0018D6  D7FB               	bra	u1407
  3261   0018D8                     
  3262                           ;lcd.c: 77:     lcd_data(0x38, 0);
  3263   0018D8  0E00               	movlw	0
  3264   0018DA  6E01               	movwf	lcd_data@rs^0,c
  3265   0018DC  0E38               	movlw	56
  3266   0018DE  EC91  F00B         	call	_lcd_data
  3267   0018E2                     
  3268                           ;lcd.c: 78:     lcd_data(0x0E, 0);
  3269   0018E2  0E00               	movlw	0
  3270   0018E4  6E01               	movwf	lcd_data@rs^0,c
  3271   0018E6  0E0E               	movlw	14
  3272   0018E8  EC91  F00B         	call	_lcd_data
  3273   0018EC                     
  3274                           ;lcd.c: 79:     lcd_data(0x01, 0);
  3275   0018EC  0E00               	movlw	0
  3276   0018EE  6E01               	movwf	lcd_data@rs^0,c
  3277   0018F0  0E01               	movlw	1
  3278   0018F2  EC91  F00B         	call	_lcd_data
  3279   0018F6                     
  3280                           ;lcd.c: 80:     lcd_data(0x02, 0);
  3281   0018F6  0E00               	movlw	0
  3282   0018F8  6E01               	movwf	lcd_data@rs^0,c
  3283   0018FA  0E02               	movlw	2
  3284   0018FC  EC91  F00B         	call	_lcd_data
  3285   001900                     
  3286                           ;lcd.c: 81:     lcd_data(0x06, 0);
  3287   001900  0E00               	movlw	0
  3288   001902  6E01               	movwf	lcd_data@rs^0,c
  3289   001904  0E06               	movlw	6
  3290   001906  EC91  F00B         	call	_lcd_data
  3291   00190A                     
  3292                           ;lcd.c: 82:     lcd_cls();
  3293   00190A  EC3C  F00D         	call	_lcd_cls	;wreg free
  3294   00190E  0012               	return		;funcret
  3295   001910  FFFF               	dw	65535	; errata NOP
  3296   001912                     __end_of_lcd_init:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _lcd_cls *****************
  3300 ;; Defined at:
  3301 ;;		line 85 in file "lcd.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3315 ;;      Params:         0       0       0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 1
  3322 ;; This function calls:
  3323 ;;		_memset
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;;		_lcd_init
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text16
  3331   001A78                     __ptext16:
  3332                           	callstack 0
  3333   001A78                     _lcd_cls:
  3334                           	callstack 0
  3335   001A78  FFFF               	dw	65535	; assembler added errata NOP
  3336   001A7A                     
  3337                           ;lcd.c: 86:     memset(lcd, ' ', 16 * 2);
  3338   001A7A  0E88               	movlw	low _lcd
  3339   001A7C  6E01               	movwf	memset@dest^0,c
  3340   001A7E  0E00               	movlw	high _lcd
  3341   001A80  6E02               	movwf	(memset@dest+1)^0,c
  3342   001A82  0E00               	movlw	0
  3343   001A84  6E04               	movwf	(memset@c+1)^0,c
  3344   001A86  0E20               	movlw	32
  3345   001A88  6E03               	movwf	memset@c^0,c
  3346   001A8A  0E00               	movlw	0
  3347   001A8C  6E06               	movwf	(memset@n+1)^0,c
  3348   001A8E  0E20               	movlw	32
  3349   001A90  6E05               	movwf	memset@n^0,c
  3350   001A92  EC85  F007         	call	_memset	;wreg free
  3351   001A96  0012               	return		;funcret
  3352   001A98  FFFF               	dw	65535	; errata NOP
  3353   001A9A                     __end_of_lcd_cls:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _memset *****************
  3357 ;; Defined at:
  3358 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memset.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  dest            2    0[COMRAM] PTR void 
  3361 ;;		 -> lcd(33), 
  3362 ;;  c               2    2[COMRAM] int 
  3363 ;;  n               2    4[COMRAM] unsigned int 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  s               2   10[COMRAM] PTR unsigned char 
  3366 ;;		 -> lcd(33), 
  3367 ;;  k               2    8[COMRAM] unsigned int 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  2    0[COMRAM] PTR void 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3377 ;;      Params:         6       0       0       0       0       0       0
  3378 ;;      Locals:         4       0       0       0       0       0       0
  3379 ;;      Temps:          2       0       0       0       0       0       0
  3380 ;;      Totals:        12       0       0       0       0       0       0
  3381 ;;Total ram usage:       12 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_lcd_cls
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text17
  3391   000F0A                     __ptext17:
  3392                           	callstack 0
  3393   000F0A                     _memset:
  3394                           	callstack 0
  3395   000F0A  FFFF               	dw	65535	; assembler added errata NOP
  3396   000F0C  C001  F00B         	movff	memset@dest,memset@s
  3397   000F10  C002  F00C         	movff	memset@dest+1,memset@s+1
  3398   000F14  5005               	movf	memset@n^0,w,c
  3399   000F16  1006               	iorwf	(memset@n+1)^0,w,c
  3400   000F18  A4D8               	btfss	status,2,c
  3401   000F1A  EF91  F007         	goto	u1101
  3402   000F1E  EF94  F007         	goto	u1100
  3403   000F22                     u1101:
  3404   000F22  FFFF               	dw	65535	; assembler added errata NOP
  3405   000F24  EF97  F007         	goto	l2101
  3406   000F28                     u1100:
  3407   000F28  FFFF               	dw	65535	; assembler added errata NOP
  3408   000F2A  EF4F  F008         	goto	l875
  3409   000F2E                     l2101:
  3410   000F2E  FFFF               	dw	65535	; assembler added errata NOP
  3411   000F30  C00B  FFD9         	movff	memset@s,fsr2l
  3412   000F34  C00C  FFDA         	movff	memset@s+1,fsr2h
  3413   000F38  C003  FFDF         	movff	memset@c,indf2
  3414   000F3C  5005               	movf	memset@n^0,w,c
  3415   000F3E  240B               	addwf	memset@s^0,w,c
  3416   000F40  6E07               	movwf	??_memset^0,c
  3417   000F42  5006               	movf	(memset@n+1)^0,w,c
  3418   000F44  200C               	addwfc	(memset@s+1)^0,w,c
  3419   000F46  6E08               	movwf	(??_memset+1)^0,c
  3420   000F48  0EFF               	movlw	255
  3421   000F4A  2407               	addwf	??_memset^0,w,c
  3422   000F4C  6ED9               	movwf	fsr2l,c
  3423   000F4E  0EFF               	movlw	255
  3424   000F50  2008               	addwfc	(??_memset+1)^0,w,c
  3425   000F52  6EDA               	movwf	fsr2h,c
  3426   000F54  C003  FFDF         	movff	memset@c,indf2
  3427   000F58  5006               	movf	(memset@n+1)^0,w,c
  3428   000F5A  E107               	bnz	u1111
  3429   000F5C  0E03               	movlw	3
  3430   000F5E  5C05               	subwf	memset@n^0,w,c
  3431   000F60  B0D8               	btfsc	status,0,c
  3432   000F62  EFB5  F007         	goto	u1111
  3433   000F66  EFB8  F007         	goto	u1110
  3434   000F6A                     u1111:
  3435   000F6A  FFFF               	dw	65535	; assembler added errata NOP
  3436   000F6C  EFBB  F007         	goto	l2107
  3437   000F70                     u1110:
  3438   000F70  FFFF               	dw	65535	; assembler added errata NOP
  3439   000F72  EF4F  F008         	goto	l875
  3440   000F76                     l2107:
  3441   000F76  FFFF               	dw	65535	; assembler added errata NOP
  3442   000F78  EE20 F001          	lfsr	2,1
  3443   000F7C  500B               	movf	memset@s^0,w,c
  3444   000F7E  26D9               	addwf	fsr2l,f,c
  3445   000F80  500C               	movf	(memset@s+1)^0,w,c
  3446   000F82  22DA               	addwfc	fsr2h,f,c
  3447   000F84  C003  FFDF         	movff	memset@c,indf2
  3448   000F88  EE20 F002          	lfsr	2,2
  3449   000F8C  500B               	movf	memset@s^0,w,c
  3450   000F8E  26D9               	addwf	fsr2l,f,c
  3451   000F90  500C               	movf	(memset@s+1)^0,w,c
  3452   000F92  22DA               	addwfc	fsr2h,f,c
  3453   000F94  C003  FFDF         	movff	memset@c,indf2
  3454   000F98  5005               	movf	memset@n^0,w,c
  3455   000F9A  240B               	addwf	memset@s^0,w,c
  3456   000F9C  6E07               	movwf	??_memset^0,c
  3457   000F9E  5006               	movf	(memset@n+1)^0,w,c
  3458   000FA0  200C               	addwfc	(memset@s+1)^0,w,c
  3459   000FA2  6E08               	movwf	(??_memset+1)^0,c
  3460   000FA4  0EFE               	movlw	254
  3461   000FA6  2407               	addwf	??_memset^0,w,c
  3462   000FA8  6ED9               	movwf	fsr2l,c
  3463   000FAA  0EFF               	movlw	255
  3464   000FAC  2008               	addwfc	(??_memset+1)^0,w,c
  3465   000FAE  6EDA               	movwf	fsr2h,c
  3466   000FB0  C003  FFDF         	movff	memset@c,indf2
  3467   000FB4  5005               	movf	memset@n^0,w,c
  3468   000FB6  240B               	addwf	memset@s^0,w,c
  3469   000FB8  6E07               	movwf	??_memset^0,c
  3470   000FBA  5006               	movf	(memset@n+1)^0,w,c
  3471   000FBC  200C               	addwfc	(memset@s+1)^0,w,c
  3472   000FBE  6E08               	movwf	(??_memset+1)^0,c
  3473   000FC0  0EFD               	movlw	253
  3474   000FC2  2407               	addwf	??_memset^0,w,c
  3475   000FC4  6ED9               	movwf	fsr2l,c
  3476   000FC6  0EFF               	movlw	255
  3477   000FC8  2008               	addwfc	(??_memset+1)^0,w,c
  3478   000FCA  6EDA               	movwf	fsr2h,c
  3479   000FCC  C003  FFDF         	movff	memset@c,indf2
  3480   000FD0  5006               	movf	(memset@n+1)^0,w,c
  3481   000FD2  E107               	bnz	u1121
  3482   000FD4  0E07               	movlw	7
  3483   000FD6  5C05               	subwf	memset@n^0,w,c
  3484   000FD8  B0D8               	btfsc	status,0,c
  3485   000FDA  EFF1  F007         	goto	u1121
  3486   000FDE  EFF4  F007         	goto	u1120
  3487   000FE2                     u1121:
  3488   000FE2  FFFF               	dw	65535	; assembler added errata NOP
  3489   000FE4  EFF7  F007         	goto	l2113
  3490   000FE8                     u1120:
  3491   000FE8  FFFF               	dw	65535	; assembler added errata NOP
  3492   000FEA  EF4F  F008         	goto	l875
  3493   000FEE                     l2113:
  3494   000FEE  FFFF               	dw	65535	; assembler added errata NOP
  3495   000FF0  EE20 F003          	lfsr	2,3
  3496   000FF4  500B               	movf	memset@s^0,w,c
  3497   000FF6  26D9               	addwf	fsr2l,f,c
  3498   000FF8  500C               	movf	(memset@s+1)^0,w,c
  3499   000FFA  22DA               	addwfc	fsr2h,f,c
  3500   000FFC  C003  FFDF         	movff	memset@c,indf2
  3501   001000  5005               	movf	memset@n^0,w,c
  3502   001002  240B               	addwf	memset@s^0,w,c
  3503   001004  6E07               	movwf	??_memset^0,c
  3504   001006  5006               	movf	(memset@n+1)^0,w,c
  3505   001008  200C               	addwfc	(memset@s+1)^0,w,c
  3506   00100A  6E08               	movwf	(??_memset+1)^0,c
  3507   00100C  0EFC               	movlw	252
  3508   00100E  2407               	addwf	??_memset^0,w,c
  3509   001010  6ED9               	movwf	fsr2l,c
  3510   001012  0EFF               	movlw	255
  3511   001014  2008               	addwfc	(??_memset+1)^0,w,c
  3512   001016  6EDA               	movwf	fsr2h,c
  3513   001018  C003  FFDF         	movff	memset@c,indf2
  3514   00101C  5006               	movf	(memset@n+1)^0,w,c
  3515   00101E  E107               	bnz	u1131
  3516   001020  0E09               	movlw	9
  3517   001022  5C05               	subwf	memset@n^0,w,c
  3518   001024  B0D8               	btfsc	status,0,c
  3519   001026  EF17  F008         	goto	u1131
  3520   00102A  EF1A  F008         	goto	u1130
  3521   00102E                     u1131:
  3522   00102E  FFFF               	dw	65535	; assembler added errata NOP
  3523   001030  EF1D  F008         	goto	l2119
  3524   001034                     u1130:
  3525   001034  FFFF               	dw	65535	; assembler added errata NOP
  3526   001036  EF4F  F008         	goto	l875
  3527   00103A                     l2119:
  3528   00103A  FFFF               	dw	65535	; assembler added errata NOP
  3529   00103C  C00B  F007         	movff	memset@s,??_memset
  3530   001040  C00C  F008         	movff	memset@s+1,??_memset+1
  3531   001044  1E07               	comf	??_memset^0,f,c
  3532   001046  1E08               	comf	(??_memset+1)^0,f,c
  3533   001048  4A07               	infsnz	??_memset^0,f,c
  3534   00104A  2A08               	incf	(??_memset+1)^0,f,c
  3535   00104C  0E03               	movlw	3
  3536   00104E  1407               	andwf	??_memset^0,w,c
  3537   001050  6E09               	movwf	memset@k^0,c
  3538   001052  6A0A               	clrf	(memset@k+1)^0,c
  3539   001054  5009               	movf	memset@k^0,w,c
  3540   001056  260B               	addwf	memset@s^0,f,c
  3541   001058  500A               	movf	(memset@k+1)^0,w,c
  3542   00105A  220C               	addwfc	(memset@s+1)^0,f,c
  3543   00105C  5009               	movf	memset@k^0,w,c
  3544   00105E  5E05               	subwf	memset@n^0,f,c
  3545   001060  500A               	movf	(memset@k+1)^0,w,c
  3546   001062  5A06               	subwfb	(memset@n+1)^0,f,c
  3547   001064  0EFC               	movlw	252
  3548   001066  1605               	andwf	memset@n^0,f,c
  3549   001068  0EFF               	movlw	255
  3550   00106A  1606               	andwf	(memset@n+1)^0,f,c
  3551   00106C  EF44  F008         	goto	l2127
  3552   001070                     l2121:
  3553   001070  FFFF               	dw	65535	; assembler added errata NOP
  3554   001072  C00B  FFD9         	movff	memset@s,fsr2l
  3555   001076  C00C  FFDA         	movff	memset@s+1,fsr2h
  3556   00107A  C003  FFDF         	movff	memset@c,indf2
  3557   00107E  0605               	decf	memset@n^0,f,c
  3558   001080  A0D8               	btfss	status,0,c
  3559   001082  0606               	decf	(memset@n+1)^0,f,c
  3560   001084  4A0B               	infsnz	memset@s^0,f,c
  3561   001086  2A0C               	incf	(memset@s+1)^0,f,c
  3562   001088                     l2127:
  3563   001088  FFFF               	dw	65535	; assembler added errata NOP
  3564   00108A  5005               	movf	memset@n^0,w,c
  3565   00108C  1006               	iorwf	(memset@n+1)^0,w,c
  3566   00108E  A4D8               	btfss	status,2,c
  3567   001090  EF4C  F008         	goto	u1141
  3568   001094  EF4F  F008         	goto	u1140
  3569   001098                     u1141:
  3570   001098  FFFF               	dw	65535	; assembler added errata NOP
  3571   00109A  EF38  F008         	goto	l2121
  3572   00109E                     u1140:
  3573   00109E                     l875:
  3574   00109E  FFFF               	dw	65535	; assembler added errata NOP
  3575   0010A0  0012               	return		;funcret
  3576   0010A2  FFFF               	dw	65535	; errata NOP
  3577   0010A4                     __end_of_memset:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function _lcd_cgram *****************
  3581 ;; Defined at:
  3582 ;;		line 98 in file "lcd.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3596 ;;      Params:         0       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 1
  3603 ;; This function calls:
  3604 ;;		_lcd_data
  3605 ;; This function is called by:
  3606 ;;		_main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text18
  3611   0017FE                     __ptext18:
  3612                           	callstack 0
  3613   0017FE                     _lcd_cgram:
  3614                           	callstack 0
  3615   0017FE  FFFF               	dw	65535	; assembler added errata NOP
  3616   001800                     
  3617                           ;lcd.c: 99:     lcd_data(0x40, 0);
  3618   001800  0E00               	movlw	0
  3619   001802  6E01               	movwf	lcd_data@rs^0,c
  3620   001804  0E40               	movlw	64
  3621   001806  EC91  F00B         	call	_lcd_data
  3622                           
  3623                           ;lcd.c: 100:     lcd_data(0x00, 1);
  3624   00180A  0E01               	movlw	1
  3625   00180C  6E01               	movwf	lcd_data@rs^0,c
  3626   00180E  0E00               	movlw	0
  3627   001810  EC91  F00B         	call	_lcd_data
  3628                           
  3629                           ;lcd.c: 101:     lcd_data(0x0a, 1);
  3630   001814  0E01               	movlw	1
  3631   001816  6E01               	movwf	lcd_data@rs^0,c
  3632   001818  0E0A               	movlw	10
  3633   00181A  EC91  F00B         	call	_lcd_data
  3634                           
  3635                           ;lcd.c: 102:     lcd_data(0x15, 1);
  3636   00181E  0E01               	movlw	1
  3637   001820  6E01               	movwf	lcd_data@rs^0,c
  3638   001822  0E15               	movlw	21
  3639   001824  EC91  F00B         	call	_lcd_data
  3640                           
  3641                           ;lcd.c: 103:     lcd_data(0x11, 1);
  3642   001828  0E01               	movlw	1
  3643   00182A  6E01               	movwf	lcd_data@rs^0,c
  3644   00182C  0E11               	movlw	17
  3645   00182E  EC91  F00B         	call	_lcd_data
  3646                           
  3647                           ;lcd.c: 104:     lcd_data(0x0a, 1);
  3648   001832  0E01               	movlw	1
  3649   001834  6E01               	movwf	lcd_data@rs^0,c
  3650   001836  0E0A               	movlw	10
  3651   001838  EC91  F00B         	call	_lcd_data
  3652                           
  3653                           ;lcd.c: 105:     lcd_data(0x04, 1);
  3654   00183C  0E01               	movlw	1
  3655   00183E  6E01               	movwf	lcd_data@rs^0,c
  3656   001840  0E04               	movlw	4
  3657   001842  EC91  F00B         	call	_lcd_data
  3658                           
  3659                           ;lcd.c: 106:     lcd_data(0x00, 1);
  3660   001846  0E01               	movlw	1
  3661   001848  6E01               	movwf	lcd_data@rs^0,c
  3662   00184A  0E00               	movlw	0
  3663   00184C  EC91  F00B         	call	_lcd_data
  3664                           
  3665                           ;lcd.c: 107:     lcd_data(0x00, 1);
  3666   001850  0E01               	movlw	1
  3667   001852  6E01               	movwf	lcd_data@rs^0,c
  3668   001854  0E00               	movlw	0
  3669   001856  EC91  F00B         	call	_lcd_data
  3670   00185A  0012               	return		;funcret
  3671   00185C  FFFF               	dw	65535	; errata NOP
  3672   00185E                     __end_of_lcd_cgram:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function _lcd_data *****************
  3676 ;; Defined at:
  3677 ;;		line 5 in file "lcd.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  b               1    wreg     unsigned char 
  3680 ;;  rs              1    0[COMRAM] unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  b               1    1[COMRAM] unsigned char 
  3683 ;;  trisd_backup    1    3[COMRAM] unsigned char 
  3684 ;;  bf              1    2[COMRAM] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3694 ;;      Params:         1       0       0       0       0       0       0
  3695 ;;      Locals:         3       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0
  3697 ;;      Totals:         4       0       0       0       0       0       0
  3698 ;;Total ram usage:        4 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_lcd_init
  3704 ;;		_lcd_update
  3705 ;;		_lcd_cgram
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text19
  3710   001722                     __ptext19:
  3711                           	callstack 0
  3712   001722                     _lcd_data:
  3713                           	callstack 0
  3714   001722  FFFF               	dw	65535	; assembler added errata NOP
  3715                           
  3716                           ;incstack = 0
  3717                           ;lcd_data@b stored from wreg
  3718   001724  6E02               	movwf	lcd_data@b^0,c
  3719   001726                     
  3720                           ;lcd.c: 6:     unsigned char bf;;lcd.c: 9:     unsigned char trisd_backup = TRISD;
  3721   001726  CF95 F004          	movff	3989,lcd_data@trisd_backup	;volatile
  3722                           
  3723                           ;lcd.c: 12:     LATEbits.LATE0 = rs;
  3724   00172A  B001               	btfsc	lcd_data@rs^0,0,c
  3725   00172C  D002               	bra	u1195
  3726   00172E  908D               	bcf	141,0,c	;volatile
  3727   001730  D001               	bra	u1196
  3728   001732                     u1195:
  3729   001732  808D               	bsf	141,0,c	;volatile
  3730   001734                     u1196:
  3731   001734                     
  3732                           ;lcd.c: 13:     LATD = b;
  3733   001734  C002  FF8C         	movff	lcd_data@b,3980	;volatile
  3734   001738                     
  3735                           ;lcd.c: 16:     __nop();
  3736   001738  F000               	nop	
  3737   00173A                     
  3738                           ;lcd.c: 17:     __nop();
  3739   00173A  F000               	nop	
  3740   00173C                     
  3741                           ;lcd.c: 18:     __nop();
  3742   00173C  F000               	nop	
  3743   00173E                     
  3744                           ;lcd.c: 21:     LATEbits.LATE2 = 1;
  3745   00173E  848D               	bsf	141,2,c	;volatile
  3746   001740                     
  3747                           ;lcd.c: 24:     __nop();
  3748   001740  F000               	nop	
  3749   001742                     
  3750                           ;lcd.c: 25:     __nop();
  3751   001742  F000               	nop	
  3752   001744                     
  3753                           ;lcd.c: 26:     __nop();
  3754   001744  F000               	nop	
  3755   001746                     
  3756                           ;lcd.c: 29:     LATEbits.LATE2 = 0;
  3757   001746  948D               	bcf	141,2,c	;volatile
  3758   001748                     
  3759                           ;lcd.c: 32:     __nop();
  3760   001748  F000               	nop	
  3761   00174A                     
  3762                           ;lcd.c: 33:     __nop();
  3763   00174A  F000               	nop	
  3764   00174C                     
  3765                           ;lcd.c: 34:     __nop();
  3766   00174C  F000               	nop	
  3767   00174E                     
  3768                           ;lcd.c: 37:     LATD = 0x00;
  3769   00174E  0E00               	movlw	0
  3770   001750  6E8C               	movwf	140,c	;volatile
  3771   001752                     
  3772                           ;lcd.c: 38:     TRISD = 0xFF;
  3773   001752  6895               	setf	149,c	;volatile
  3774   001754                     
  3775                           ;lcd.c: 39:     LATEbits.LATE1 = 1;
  3776   001754  828D               	bsf	141,1,c	;volatile
  3777   001756                     
  3778                           ;lcd.c: 40:     LATEbits.LATE0 = 0;
  3779   001756  908D               	bcf	141,0,c	;volatile
  3780   001758                     
  3781                           ;lcd.c: 43:     __nop();
  3782   001758  F000               	nop	
  3783   00175A                     
  3784                           ;lcd.c: 44:     __nop();
  3785   00175A  F000               	nop	
  3786   00175C                     
  3787                           ;lcd.c: 45:     __nop();
  3788   00175C  F000               	nop	
  3789   00175E                     l2217:
  3790   00175E  FFFF               	dw	65535	; assembler added errata NOP
  3791                           
  3792                           ;lcd.c: 48:         LATEbits.LATE2 = 1;
  3793   001760  848D               	bsf	141,2,c	;volatile
  3794   001762                     
  3795                           ;lcd.c: 50:         __nop();
  3796   001762  F000               	nop	
  3797   001764                     
  3798                           ;lcd.c: 51:         __nop();
  3799   001764  F000               	nop	
  3800   001766                     
  3801                           ;lcd.c: 52:         __nop();
  3802   001766  F000               	nop	
  3803   001768                     
  3804                           ;lcd.c: 54:         bf = PORTDbits.RD7;
  3805   001768  0E00               	movlw	0
  3806   00176A  BE83               	btfsc	131,7,c	;volatile
  3807   00176C  0E01               	movlw	1
  3808   00176E  6E03               	movwf	lcd_data@bf^0,c
  3809   001770                     
  3810                           ;lcd.c: 55:         LATEbits.LATE2 = 0;
  3811   001770  948D               	bcf	141,2,c	;volatile
  3812   001772                     
  3813                           ;lcd.c: 57:         __nop();
  3814   001772  F000               	nop	
  3815   001774                     
  3816                           ;lcd.c: 58:         __nop();
  3817   001774  F000               	nop	
  3818   001776                     
  3819                           ;lcd.c: 59:         __nop();
  3820   001776  F000               	nop	
  3821                           
  3822                           ;lcd.c: 60:     } while (bf);
  3823   001778  5003               	movf	lcd_data@bf^0,w,c
  3824   00177A  A4D8               	btfss	status,2,c
  3825   00177C  EFC2  F00B         	goto	u1201
  3826   001780  EFC5  F00B         	goto	u1200
  3827   001784                     u1201:
  3828   001784  FFFF               	dw	65535	; assembler added errata NOP
  3829   001786  EFAF  F00B         	goto	l2217
  3830   00178A                     u1200:
  3831   00178A  FFFF               	dw	65535	; assembler added errata NOP
  3832   00178C                     
  3833                           ;lcd.c: 62:     TRISD = trisd_backup;
  3834   00178C  C004  FF95         	movff	lcd_data@trisd_backup,3989	;volatile
  3835                           
  3836                           ;lcd.c: 63:     LATEbits.LATE1 = 0;
  3837   001790  928D               	bcf	141,1,c	;volatile
  3838   001792  0012               	return		;funcret
  3839   001794  FFFF               	dw	65535	; errata NOP
  3840   001796                     __end_of_lcd_data:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _get_pressed_button *****************
  3844 ;; Defined at:
  3845 ;;		line 30 in file "buttons.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  col             2    4[COMRAM] int 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  2    2[COMRAM] int 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3859 ;;      Params:         2       0       0       0       0       0       0
  3860 ;;      Locals:         2       0       0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0
  3862 ;;      Totals:         4       0       0       0       0       0       0
  3863 ;;Total ram usage:        4 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 1
  3866 ;; This function calls:
  3867 ;;		_get_pressed_button_col
  3868 ;; This function is called by:
  3869 ;;		_main
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text20
  3874   001394                     __ptext20:
  3875                           	callstack 0
  3876   001394                     _get_pressed_button:
  3877                           	callstack 0
  3878   001394  FFFF               	dw	65535	; assembler added errata NOP
  3879   001396                     
  3880                           ;buttons.c: 34:     LATBbits.LATB0 = 0;
  3881   001396  908A               	bcf	138,0,c	;volatile
  3882   001398                     
  3883                           ;buttons.c: 35:     col = get_pressed_button_col();
  3884   001398  EC4B  F00B         	call	_get_pressed_button_col	;wreg free
  3885   00139C  C001  F005         	movff	?_get_pressed_button_col,get_pressed_button@col
  3886   0013A0  C002  F006         	movff	?_get_pressed_button_col+1,get_pressed_button@col+1
  3887   0013A4                     
  3888                           ;buttons.c: 36:     if (col != -1) {
  3889   0013A4  2805               	incf	get_pressed_button@col^0,w,c
  3890   0013A6  E109               	bnz	u1320
  3891   0013A8  2806               	incf	(get_pressed_button@col+1)^0,w,c
  3892   0013AA  B4D8               	btfsc	status,2,c
  3893   0013AC  EFDA  F009         	goto	u1321
  3894   0013B0  EFDD  F009         	goto	u1320
  3895   0013B4                     u1321:
  3896   0013B4  FFFF               	dw	65535	; assembler added errata NOP
  3897   0013B6  EFE4  F009         	goto	l161
  3898   0013BA                     u1320:
  3899   0013BA  FFFF               	dw	65535	; assembler added errata NOP
  3900   0013BC                     
  3901                           ;buttons.c: 37:         return col;
  3902   0013BC  C005  F003         	movff	get_pressed_button@col,?_get_pressed_button
  3903   0013C0  C006  F004         	movff	get_pressed_button@col+1,?_get_pressed_button+1
  3904   0013C4  EF3F  F00A         	goto	l162
  3905   0013C8                     l161:
  3906   0013C8  FFFF               	dw	65535	; assembler added errata NOP
  3907                           
  3908                           ;buttons.c: 41:     LATBbits.LATB0 = 1;
  3909   0013CA  808A               	bsf	138,0,c	;volatile
  3910                           
  3911                           ;buttons.c: 42:     LATBbits.LATB1 = 0;
  3912   0013CC  928A               	bcf	138,1,c	;volatile
  3913   0013CE                     
  3914                           ;buttons.c: 43:     col = get_pressed_button_col();
  3915   0013CE  EC4B  F00B         	call	_get_pressed_button_col	;wreg free
  3916   0013D2  C001  F005         	movff	?_get_pressed_button_col,get_pressed_button@col
  3917   0013D6  C002  F006         	movff	?_get_pressed_button_col+1,get_pressed_button@col+1
  3918   0013DA                     
  3919                           ;buttons.c: 44:     if (col != -1) {
  3920   0013DA  2805               	incf	get_pressed_button@col^0,w,c
  3921   0013DC  E109               	bnz	u1330
  3922   0013DE  2806               	incf	(get_pressed_button@col+1)^0,w,c
  3923   0013E0  B4D8               	btfsc	status,2,c
  3924   0013E2  EFF5  F009         	goto	u1331
  3925   0013E6  EFF8  F009         	goto	u1330
  3926   0013EA                     u1331:
  3927   0013EA  FFFF               	dw	65535	; assembler added errata NOP
  3928   0013EC  EF01  F00A         	goto	l163
  3929   0013F0                     u1330:
  3930   0013F0  FFFF               	dw	65535	; assembler added errata NOP
  3931   0013F2                     
  3932                           ;buttons.c: 45:         return col + 4;
  3933   0013F2  0E04               	movlw	4
  3934   0013F4  2405               	addwf	get_pressed_button@col^0,w,c
  3935   0013F6  6E03               	movwf	?_get_pressed_button^0,c
  3936   0013F8  0E00               	movlw	0
  3937   0013FA  2006               	addwfc	(get_pressed_button@col+1)^0,w,c
  3938   0013FC  6E04               	movwf	(?_get_pressed_button+1)^0,c
  3939   0013FE  EF3F  F00A         	goto	l162
  3940   001402                     l163:
  3941   001402  FFFF               	dw	65535	; assembler added errata NOP
  3942                           
  3943                           ;buttons.c: 49:     LATBbits.LATB1 = 1;
  3944   001404  828A               	bsf	138,1,c	;volatile
  3945                           
  3946                           ;buttons.c: 50:     LATBbits.LATB2 = 0;
  3947   001406  948A               	bcf	138,2,c	;volatile
  3948   001408                     
  3949                           ;buttons.c: 51:     col = get_pressed_button_col();
  3950   001408  EC4B  F00B         	call	_get_pressed_button_col	;wreg free
  3951   00140C  C001  F005         	movff	?_get_pressed_button_col,get_pressed_button@col
  3952   001410  C002  F006         	movff	?_get_pressed_button_col+1,get_pressed_button@col+1
  3953   001414                     
  3954                           ;buttons.c: 52:     if (col != -1) {
  3955   001414  2805               	incf	get_pressed_button@col^0,w,c
  3956   001416  E109               	bnz	u1340
  3957   001418  2806               	incf	(get_pressed_button@col+1)^0,w,c
  3958   00141A  B4D8               	btfsc	status,2,c
  3959   00141C  EF12  F00A         	goto	u1341
  3960   001420  EF15  F00A         	goto	u1340
  3961   001424                     u1341:
  3962   001424  FFFF               	dw	65535	; assembler added errata NOP
  3963   001426  EF1E  F00A         	goto	l164
  3964   00142A                     u1340:
  3965   00142A  FFFF               	dw	65535	; assembler added errata NOP
  3966   00142C                     
  3967                           ;buttons.c: 53:         return col + 8;
  3968   00142C  0E08               	movlw	8
  3969   00142E  2405               	addwf	get_pressed_button@col^0,w,c
  3970   001430  6E03               	movwf	?_get_pressed_button^0,c
  3971   001432  0E00               	movlw	0
  3972   001434  2006               	addwfc	(get_pressed_button@col+1)^0,w,c
  3973   001436  6E04               	movwf	(?_get_pressed_button+1)^0,c
  3974   001438  EF3F  F00A         	goto	l162
  3975   00143C                     l164:
  3976   00143C  FFFF               	dw	65535	; assembler added errata NOP
  3977                           
  3978                           ;buttons.c: 57:     LATBbits.LATB2 = 1;
  3979   00143E  848A               	bsf	138,2,c	;volatile
  3980                           
  3981                           ;buttons.c: 58:     LATBbits.LATB3 = 0;
  3982   001440  968A               	bcf	138,3,c	;volatile
  3983   001442                     
  3984                           ;buttons.c: 59:     col = get_pressed_button_col();
  3985   001442  EC4B  F00B         	call	_get_pressed_button_col	;wreg free
  3986   001446  C001  F005         	movff	?_get_pressed_button_col,get_pressed_button@col
  3987   00144A  C002  F006         	movff	?_get_pressed_button_col+1,get_pressed_button@col+1
  3988   00144E                     
  3989                           ;buttons.c: 60:     if (col != -1) {
  3990   00144E  2805               	incf	get_pressed_button@col^0,w,c
  3991   001450  E109               	bnz	u1350
  3992   001452  2806               	incf	(get_pressed_button@col+1)^0,w,c
  3993   001454  B4D8               	btfsc	status,2,c
  3994   001456  EF2F  F00A         	goto	u1351
  3995   00145A  EF32  F00A         	goto	u1350
  3996   00145E                     u1351:
  3997   00145E  FFFF               	dw	65535	; assembler added errata NOP
  3998   001460  EF3B  F00A         	goto	l165
  3999   001464                     u1350:
  4000   001464  FFFF               	dw	65535	; assembler added errata NOP
  4001   001466                     
  4002                           ;buttons.c: 61:         return col + 12;
  4003   001466  0E0C               	movlw	12
  4004   001468  2405               	addwf	get_pressed_button@col^0,w,c
  4005   00146A  6E03               	movwf	?_get_pressed_button^0,c
  4006   00146C  0E00               	movlw	0
  4007   00146E  2006               	addwfc	(get_pressed_button@col+1)^0,w,c
  4008   001470  6E04               	movwf	(?_get_pressed_button+1)^0,c
  4009   001472  EF3F  F00A         	goto	l162
  4010   001476                     l165:
  4011   001476  FFFF               	dw	65535	; assembler added errata NOP
  4012                           
  4013                           ;buttons.c: 65:     LATBbits.LATB3 = 1;
  4014   001478  868A               	bsf	138,3,c	;volatile
  4015                           
  4016                           ;buttons.c: 66:     return -1;
  4017   00147A  6803               	setf	?_get_pressed_button^0,c
  4018   00147C  6804               	setf	(?_get_pressed_button+1)^0,c
  4019   00147E                     l162:
  4020   00147E  FFFF               	dw	65535	; assembler added errata NOP
  4021   001480  0012               	return		;funcret
  4022   001482  FFFF               	dw	65535	; errata NOP
  4023   001484                     __end_of_get_pressed_button:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _get_pressed_button_col *****************
  4027 ;; Defined at:
  4028 ;;		line 21 in file "buttons.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  2    0[COMRAM] int 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4042 ;;      Params:         2       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0
  4045 ;;      Totals:         2       0       0       0       0       0       0
  4046 ;;Total ram usage:        2 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_get_pressed_button
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text21
  4056   001696                     __ptext21:
  4057                           	callstack 0
  4058   001696                     _get_pressed_button_col:
  4059                           	callstack 0
  4060   001696  FFFF               	dw	65535	; assembler added errata NOP
  4061   001698                     
  4062                           ;buttons.c: 22:     if (!PORTBbits.RB4) return 0;
  4063   001698  B881               	btfsc	129,4,c	;volatile
  4064   00169A  EF51  F00B         	goto	u1211
  4065   00169E  EF54  F00B         	goto	u1210
  4066   0016A2                     u1211:
  4067   0016A2  FFFF               	dw	65535	; assembler added errata NOP
  4068   0016A4  EF5B  F00B         	goto	l154
  4069   0016A8                     u1210:
  4070   0016A8  FFFF               	dw	65535	; assembler added errata NOP
  4071   0016AA  0E00               	movlw	0
  4072   0016AC  6E02               	movwf	(?_get_pressed_button_col+1)^0,c
  4073   0016AE  0E00               	movlw	0
  4074   0016B0  6E01               	movwf	?_get_pressed_button_col^0,c
  4075   0016B2  EF8E  F00B         	goto	l155
  4076   0016B6                     l154:
  4077   0016B6  FFFF               	dw	65535	; assembler added errata NOP
  4078                           
  4079                           ;buttons.c: 23:     if (!PORTBbits.RB5) return 1;
  4080   0016B8  BA81               	btfsc	129,5,c	;volatile
  4081   0016BA  EF61  F00B         	goto	u1221
  4082   0016BE  EF64  F00B         	goto	u1220
  4083   0016C2                     u1221:
  4084   0016C2  FFFF               	dw	65535	; assembler added errata NOP
  4085   0016C4  EF6B  F00B         	goto	l156
  4086   0016C8                     u1220:
  4087   0016C8  FFFF               	dw	65535	; assembler added errata NOP
  4088   0016CA  0E00               	movlw	0
  4089   0016CC  6E02               	movwf	(?_get_pressed_button_col+1)^0,c
  4090   0016CE  0E01               	movlw	1
  4091   0016D0  6E01               	movwf	?_get_pressed_button_col^0,c
  4092   0016D2  EF8E  F00B         	goto	l155
  4093   0016D6                     l156:
  4094   0016D6  FFFF               	dw	65535	; assembler added errata NOP
  4095                           
  4096                           ;buttons.c: 24:     if (!PORTAbits.RA3) return 2;
  4097   0016D8  B680               	btfsc	128,3,c	;volatile
  4098   0016DA  EF71  F00B         	goto	u1231
  4099   0016DE  EF74  F00B         	goto	u1230
  4100   0016E2                     u1231:
  4101   0016E2  FFFF               	dw	65535	; assembler added errata NOP
  4102   0016E4  EF7B  F00B         	goto	l157
  4103   0016E8                     u1230:
  4104   0016E8  FFFF               	dw	65535	; assembler added errata NOP
  4105   0016EA  0E00               	movlw	0
  4106   0016EC  6E02               	movwf	(?_get_pressed_button_col+1)^0,c
  4107   0016EE  0E02               	movlw	2
  4108   0016F0  6E01               	movwf	?_get_pressed_button_col^0,c
  4109   0016F2  EF8E  F00B         	goto	l155
  4110   0016F6                     l157:
  4111   0016F6  FFFF               	dw	65535	; assembler added errata NOP
  4112                           
  4113                           ;buttons.c: 25:     if (!PORTAbits.RA5) return 3;
  4114   0016F8  BA80               	btfsc	128,5,c	;volatile
  4115   0016FA  EF81  F00B         	goto	u1241
  4116   0016FE  EF84  F00B         	goto	u1240
  4117   001702                     u1241:
  4118   001702  FFFF               	dw	65535	; assembler added errata NOP
  4119   001704  EF8B  F00B         	goto	l158
  4120   001708                     u1240:
  4121   001708  FFFF               	dw	65535	; assembler added errata NOP
  4122   00170A  0E00               	movlw	0
  4123   00170C  6E02               	movwf	(?_get_pressed_button_col+1)^0,c
  4124   00170E  0E03               	movlw	3
  4125   001710  6E01               	movwf	?_get_pressed_button_col^0,c
  4126   001712  EF8E  F00B         	goto	l155
  4127   001716                     l158:
  4128   001716  FFFF               	dw	65535	; assembler added errata NOP
  4129                           
  4130                           ;buttons.c: 27:     return -1;
  4131   001718  6801               	setf	?_get_pressed_button_col^0,c
  4132   00171A  6802               	setf	(?_get_pressed_button_col+1)^0,c
  4133   00171C                     l155:
  4134   00171C  FFFF               	dw	65535	; assembler added errata NOP
  4135   00171E  0012               	return		;funcret
  4136   001720  FFFF               	dw	65535	; errata NOP
  4137   001722                     __end_of_get_pressed_button_col:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _eeprom_93c46_read *****************
  4141 ;; Defined at:
  4142 ;;		line 81 in file "eeprom.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;		None
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2    0[COMRAM] unsigned int 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4156 ;;      Params:         2       0       0       0       0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0
  4159 ;;      Totals:         2       0       0       0       0       0       0
  4160 ;;Total ram usage:        2 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_main
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text22
  4170   001A42                     __ptext22:
  4171                           	callstack 0
  4172   001A42                     _eeprom_93c46_read:
  4173                           	callstack 0
  4174   001A42  FFFF               	dw	65535	; assembler added errata NOP
  4175   001A44                     
  4176                           ;eeprom.c: 82:     state = SET_READ;
  4177   001A44  0E01               	movlw	1
  4178   001A46  6E7F               	movwf	_state^0,c
  4179                           
  4180                           ;eeprom.c: 84:     while(state != FINISHED) __nop();
  4181   001A48  EF28  F00D         	goto	l2419
  4182   001A4C                     l82:
  4183   001A4C  FFFF               	dw	65535	; assembler added errata NOP
  4184   001A4E  F000               	nop	
  4185   001A50                     l2419:
  4186   001A50  FFFF               	dw	65535	; assembler added errata NOP
  4187   001A52  0E04               	movlw	4
  4188   001A54  187F               	xorwf	_state^0,w,c
  4189   001A56  A4D8               	btfss	status,2,c
  4190   001A58  EF30  F00D         	goto	u1371
  4191   001A5C  EF33  F00D         	goto	u1370
  4192   001A60                     u1371:
  4193   001A60  FFFF               	dw	65535	; assembler added errata NOP
  4194   001A62  EF26  F00D         	goto	l82
  4195   001A66                     u1370:
  4196   001A66  FFFF               	dw	65535	; assembler added errata NOP
  4197   001A68                     
  4198                           ;eeprom.c: 86:     state = STANDBY;
  4199   001A68  0E00               	movlw	0
  4200   001A6A  6E7F               	movwf	_state^0,c
  4201   001A6C                     
  4202                           ;eeprom.c: 88:     return d;
  4203   001A6C  C07A  F001         	movff	_d,?_eeprom_93c46_read
  4204   001A70  C07B  F002         	movff	_d+1,?_eeprom_93c46_read+1
  4205   001A74  0012               	return		;funcret
  4206   001A76  FFFF               	dw	65535	; errata NOP
  4207   001A78                     __end_of_eeprom_93c46_read:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _eeprom_93c46_init *****************
  4211 ;; Defined at:
  4212 ;;		line 68 in file "eeprom.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		None
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4226 ;;      Params:         0       0       0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text23
  4240   001B58                     __ptext23:
  4241                           	callstack 0
  4242   001B58                     _eeprom_93c46_init:
  4243                           	callstack 0
  4244   001B58  FFFF               	dw	65535	; assembler added errata NOP
  4245   001B5A                     
  4246                           ;eeprom.c: 69:     TRISCbits.TRISC3 = 0;
  4247   001B5A  9694               	bcf	148,3,c	;volatile
  4248                           
  4249                           ;eeprom.c: 70:     TRISCbits.TRISC5 = 0;
  4250   001B5C  9A94               	bcf	148,5,c	;volatile
  4251                           
  4252                           ;eeprom.c: 72:     TRISAbits.TRISA1 = 0;
  4253   001B5E  9292               	bcf	146,1,c	;volatile
  4254                           
  4255                           ;eeprom.c: 73:     TRISAbits.TRISA2 = 0;
  4256   001B60  9492               	bcf	146,2,c	;volatile
  4257                           
  4258                           ;eeprom.c: 75:     TRISCbits.TRISC4 = 1;
  4259   001B62  8894               	bsf	148,4,c	;volatile
  4260                           
  4261                           ;eeprom.c: 78:     PORTAbits.RA2 = 1;
  4262   001B64  8480               	bsf	128,2,c	;volatile
  4263   001B66  0012               	return		;funcret
  4264   001B68  FFFF               	dw	65535	; errata NOP
  4265   001B6A                     __end_of_eeprom_93c46_init:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _debounce_button *****************
  4269 ;; Defined at:
  4270 ;;		line 81 in file "buttons.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  id              2    0[COMRAM] int 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  col             2    3[COMRAM] const int 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4284 ;;      Params:         2       0       0       0       0       0       0
  4285 ;;      Locals:         2       0       0       0       0       0       0
  4286 ;;      Temps:          1       0       0       0       0       0       0
  4287 ;;      Totals:         5       0       0       0       0       0       0
  4288 ;;Total ram usage:        5 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; Hardware stack levels required when called: 1
  4291 ;; This function calls:
  4292 ;;		_debounce_col_0
  4293 ;;		_debounce_col_1
  4294 ;;		_debounce_col_2
  4295 ;;		_debounce_col_3
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text24
  4302   001796                     __ptext24:
  4303                           	callstack 0
  4304   001796                     _debounce_button:
  4305                           	callstack 0
  4306   001796  FFFF               	dw	65535	; assembler added errata NOP
  4307   001798                     
  4308                           ;buttons.c: 82:     const int col = id % 4;
  4309   001798  0E03               	movlw	3
  4310   00179A  1401               	andwf	debounce_button@id^0,w,c
  4311   00179C  6E04               	movwf	debounce_button@col^0,c
  4312   00179E  6A05               	clrf	(debounce_button@col+1)^0,c
  4313   0017A0                     
  4314                           ;buttons.c: 84:     _delay((unsigned long)((10)*(4000000L / 4/4000.0)));
  4315   0017A0  0E03               	movlw	3
  4316   0017A2  6E03               	movwf	??_debounce_button^0,c
  4317   0017A4  0E6F               	movlw	111
  4318   0017A6                     u1417:
  4319   0017A6  FFFF               	dw	65535	; errata NOP
  4320   0017A8  2EE8               	decfsz	wreg,f,c
  4321   0017AA  D7FD               	bra	u1417
  4322   0017AC  2E03               	decfsz	??_debounce_button^0,f,c
  4323   0017AE  D7FB               	bra	u1417
  4324   0017B0                     
  4325                           ;buttons.c: 85:     (*debouncers[col])();
  4326   0017B0  90D8               	bcf	status,0,c
  4327   0017B2  3404               	rlcf	debounce_button@col^0,w,c
  4328   0017B4  6ED9               	movwf	fsr2l,c
  4329   0017B6  3405               	rlcf	(debounce_button@col+1)^0,w,c
  4330   0017B8  6EDA               	movwf	fsr2h,c
  4331   0017BA  0EC9               	movlw	low _debouncers
  4332   0017BC  26D9               	addwf	fsr2l,f,c
  4333   0017BE  0E00               	movlw	high _debouncers
  4334   0017C0  22DA               	addwfc	fsr2h,f,c
  4335   0017C2  D802               	call	u1368
  4336   0017C4  EFF0  F00B         	goto	u1369
  4337   0017C8                     u1368:
  4338   0017C8  FFFF               	dw	65535	; assembler added errata NOP
  4339   0017CA  0005               	push	
  4340   0017CC  6EFA               	movwf	pclath,c
  4341   0017CE  50DE               	movf	postinc2,w,c
  4342   0017D0  6EFD               	movwf	tosl,c
  4343   0017D2  50DE               	movf	postinc2,w,c
  4344   0017D4  6EFE               	movwf	tosh,c
  4345   0017D6  50F8               	movf	tblptru,w,c
  4346   0017D8  6EFF               	movwf	tosu,c
  4347   0017DA  50FA               	movf	pclath,w,c
  4348   0017DC  0012               	return		;indir
  4349   0017DE  FFFF               	dw	65535	; errata NOP
  4350   0017E0                     u1369:
  4351   0017E0  FFFF               	dw	65535	; assembler added errata NOP
  4352   0017E2                     
  4353                           ;buttons.c: 86:     _delay((unsigned long)((10)*(4000000L / 4/4000.0)));
  4354   0017E2  0E03               	movlw	3
  4355   0017E4  6E03               	movwf	??_debounce_button^0,c
  4356   0017E6  0E6F               	movlw	111
  4357   0017E8                     u1427:
  4358   0017E8  FFFF               	dw	65535	; errata NOP
  4359   0017EA  2EE8               	decfsz	wreg,f,c
  4360   0017EC  D7FD               	bra	u1427
  4361   0017EE  2E03               	decfsz	??_debounce_button^0,f,c
  4362   0017F0  D7FB               	bra	u1427
  4363   0017F2                     
  4364                           ;buttons.c: 89:     LATBbits.LATB0 = 1;
  4365   0017F2  808A               	bsf	138,0,c	;volatile
  4366   0017F4                     
  4367                           ;buttons.c: 90:     LATBbits.LATB1 = 1;
  4368   0017F4  828A               	bsf	138,1,c	;volatile
  4369   0017F6                     
  4370                           ;buttons.c: 91:     LATBbits.LATB2 = 1;
  4371   0017F6  848A               	bsf	138,2,c	;volatile
  4372   0017F8                     
  4373                           ;buttons.c: 92:     LATBbits.LATB3 = 1;
  4374   0017F8  868A               	bsf	138,3,c	;volatile
  4375   0017FA  0012               	return		;funcret
  4376   0017FC  FFFF               	dw	65535	; errata NOP
  4377   0017FE                     __end_of_debounce_button:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _debounce_col_2 *****************
  4381 ;; Defined at:
  4382 ;;		line 71 in file "buttons.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		None
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4396 ;;      Params:         0       0       0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_debounce_button
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text25
  4410   001A9A                     __ptext25:
  4411                           	callstack 0
  4412   001A9A                     _debounce_col_2:
  4413                           	callstack 29
  4414   001A9A  FFFF               	dw	65535	; assembler added errata NOP
  4415   001A9C  EF52  F00D         	goto	l180
  4416   001AA0                     l181:
  4417   001AA0  FFFF               	dw	65535	; assembler added errata NOP
  4418   001AA2  F000               	nop	
  4419   001AA4                     l180:
  4420   001AA4  FFFF               	dw	65535	; assembler added errata NOP
  4421   001AA6  A680               	btfss	128,3,c	;volatile
  4422   001AA8  EF58  F00D         	goto	u1271
  4423   001AAC  EF5B  F00D         	goto	u1270
  4424   001AB0                     u1271:
  4425   001AB0  FFFF               	dw	65535	; assembler added errata NOP
  4426   001AB2  EF50  F00D         	goto	l181
  4427   001AB6                     u1270:
  4428   001AB6  FFFF               	dw	65535	; assembler added errata NOP
  4429   001AB8  0012               	return		;funcret
  4430   001ABA  FFFF               	dw	65535	; errata NOP
  4431   001ABC                     __end_of_debounce_col_2:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _debounce_col_1 *****************
  4435 ;; Defined at:
  4436 ;;		line 70 in file "buttons.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		None
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4450 ;;      Params:         0       0       0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_debounce_button
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text26
  4464   001ABC                     __ptext26:
  4465                           	callstack 0
  4466   001ABC                     _debounce_col_1:
  4467                           	callstack 29
  4468   001ABC  FFFF               	dw	65535	; assembler added errata NOP
  4469   001ABE  EF63  F00D         	goto	l174
  4470   001AC2                     l175:
  4471   001AC2  FFFF               	dw	65535	; assembler added errata NOP
  4472   001AC4  F000               	nop	
  4473   001AC6                     l174:
  4474   001AC6  FFFF               	dw	65535	; assembler added errata NOP
  4475   001AC8  AA81               	btfss	129,5,c	;volatile
  4476   001ACA  EF69  F00D         	goto	u1261
  4477   001ACE  EF6C  F00D         	goto	u1260
  4478   001AD2                     u1261:
  4479   001AD2  FFFF               	dw	65535	; assembler added errata NOP
  4480   001AD4  EF61  F00D         	goto	l175
  4481   001AD8                     u1260:
  4482   001AD8  FFFF               	dw	65535	; assembler added errata NOP
  4483   001ADA  0012               	return		;funcret
  4484   001ADC  FFFF               	dw	65535	; errata NOP
  4485   001ADE                     __end_of_debounce_col_1:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function _debounce_col_0 *****************
  4489 ;; Defined at:
  4490 ;;		line 69 in file "buttons.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		None
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4504 ;;      Params:         0       0       0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used: 1
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_debounce_button
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text27
  4518   001ADE                     __ptext27:
  4519                           	callstack 0
  4520   001ADE                     _debounce_col_0:
  4521                           	callstack 29
  4522   001ADE  FFFF               	dw	65535	; assembler added errata NOP
  4523   001AE0  EF74  F00D         	goto	l168
  4524   001AE4                     l169:
  4525   001AE4  FFFF               	dw	65535	; assembler added errata NOP
  4526   001AE6  F000               	nop	
  4527   001AE8                     l168:
  4528   001AE8  FFFF               	dw	65535	; assembler added errata NOP
  4529   001AEA  A881               	btfss	129,4,c	;volatile
  4530   001AEC  EF7A  F00D         	goto	u1251
  4531   001AF0  EF7D  F00D         	goto	u1250
  4532   001AF4                     u1251:
  4533   001AF4  FFFF               	dw	65535	; assembler added errata NOP
  4534   001AF6  EF72  F00D         	goto	l169
  4535   001AFA                     u1250:
  4536   001AFA  FFFF               	dw	65535	; assembler added errata NOP
  4537   001AFC  0012               	return		;funcret
  4538   001AFE  FFFF               	dw	65535	; errata NOP
  4539   001B00                     __end_of_debounce_col_0:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _debounce_col_3 *****************
  4543 ;; Defined at:
  4544 ;;		line 72 in file "buttons.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		None
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:         0       0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_debounce_button
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text28
  4572   001B00                     __ptext28:
  4573                           	callstack 0
  4574   001B00                     _debounce_col_3:
  4575                           	callstack 29
  4576   001B00  FFFF               	dw	65535	; assembler added errata NOP
  4577   001B02  EF85  F00D         	goto	l186
  4578   001B06                     l187:
  4579   001B06  FFFF               	dw	65535	; assembler added errata NOP
  4580   001B08  F000               	nop	
  4581   001B0A                     l186:
  4582   001B0A  FFFF               	dw	65535	; assembler added errata NOP
  4583   001B0C  AA80               	btfss	128,5,c	;volatile
  4584   001B0E  EF8B  F00D         	goto	u1281
  4585   001B12  EF8E  F00D         	goto	u1280
  4586   001B16                     u1281:
  4587   001B16  FFFF               	dw	65535	; assembler added errata NOP
  4588   001B18  EF83  F00D         	goto	l187
  4589   001B1C                     u1280:
  4590   001B1C  FFFF               	dw	65535	; assembler added errata NOP
  4591   001B1E  0012               	return		;funcret
  4592   001B20  FFFF               	dw	65535	; errata NOP
  4593   001B22                     __end_of_debounce_col_3:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _buttons_init *****************
  4597 ;; Defined at:
  4598 ;;		line 3 in file "buttons.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4612 ;;      Params:         0       0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_main
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text29
  4626   001B22                     __ptext29:
  4627                           	callstack 0
  4628   001B22                     _buttons_init:
  4629                           	callstack 0
  4630   001B22  FFFF               	dw	65535	; assembler added errata NOP
  4631   001B24                     
  4632                           ;buttons.c: 5:     TRISB &= 0b11110000;
  4633   001B24  0EF0               	movlw	240
  4634   001B26  1693               	andwf	147,f,c	;volatile
  4635                           
  4636                           ;buttons.c: 7:     TRISB |= 0b00110000;
  4637   001B28  0E30               	movlw	48
  4638   001B2A  1293               	iorwf	147,f,c	;volatile
  4639                           
  4640                           ;buttons.c: 8:     TRISA |= 0b00101000;
  4641   001B2C  0E28               	movlw	40
  4642   001B2E  1292               	iorwf	146,f,c	;volatile
  4643   001B30                     
  4644                           ;buttons.c: 12:     INTCON2bits.RBPU = 0;
  4645   001B30  9EF1               	bcf	241,7,c	;volatile
  4646   001B32                     
  4647                           ;buttons.c: 15:     LATBbits.LATB0 = 1;
  4648   001B32  808A               	bsf	138,0,c	;volatile
  4649   001B34                     
  4650                           ;buttons.c: 16:     LATBbits.LATB1 = 1;
  4651   001B34  828A               	bsf	138,1,c	;volatile
  4652   001B36                     
  4653                           ;buttons.c: 17:     LATBbits.LATB2 = 1;
  4654   001B36  848A               	bsf	138,2,c	;volatile
  4655   001B38                     
  4656                           ;buttons.c: 18:     LATBbits.LATB3 = 1;
  4657   001B38  868A               	bsf	138,3,c	;volatile
  4658   001B3A  0012               	return		;funcret
  4659   001B3C  FFFF               	dw	65535	; errata NOP
  4660   001B3E                     __end_of_buttons_init:
  4661                           	callstack 0
  4662                           
  4663                           	psect	text30
  4664   001B78                     __ptext30:
  4665                           	callstack 0
  4666   001B78  FFFF               	dw	65535	; assembler added errata NOP
  4667                           
  4668                           	psect	rparam
  4669   000000                     
  4670                           	psect	idloc
  4671                           
  4672                           ;Config register IDLOC0 @ 0x200000
  4673                           ;	unspecified, using default values
  4674   200000                     	org	2097152
  4675   200000  FF                 	db	255
  4676                           
  4677                           ;Config register IDLOC1 @ 0x200001
  4678                           ;	unspecified, using default values
  4679   200001                     	org	2097153
  4680   200001  FF                 	db	255
  4681                           
  4682                           ;Config register IDLOC2 @ 0x200002
  4683                           ;	unspecified, using default values
  4684   200002                     	org	2097154
  4685   200002  FF                 	db	255
  4686                           
  4687                           ;Config register IDLOC3 @ 0x200003
  4688                           ;	unspecified, using default values
  4689   200003                     	org	2097155
  4690   200003  FF                 	db	255
  4691                           
  4692                           ;Config register IDLOC4 @ 0x200004
  4693                           ;	unspecified, using default values
  4694   200004                     	org	2097156
  4695   200004  FF                 	db	255
  4696                           
  4697                           ;Config register IDLOC5 @ 0x200005
  4698                           ;	unspecified, using default values
  4699   200005                     	org	2097157
  4700   200005  FF                 	db	255
  4701                           
  4702                           ;Config register IDLOC6 @ 0x200006
  4703                           ;	unspecified, using default values
  4704   200006                     	org	2097158
  4705   200006  FF                 	db	255
  4706                           
  4707                           ;Config register IDLOC7 @ 0x200007
  4708                           ;	unspecified, using default values
  4709   200007                     	org	2097159
  4710   200007  FF                 	db	255
  4711                           
  4712                           	psect	config
  4713                           
  4714                           ; Padding undefined space
  4715   300000                     	org	3145728
  4716   300000  FF                 	db	255
  4717                           
  4718                           ;Config register CONFIG1H @ 0x300001
  4719                           ;	Oscillator Selection bits
  4720                           ;	OSC = HS, HS oscillator
  4721                           ;	Oscillator System Clock Switch Enable bit
  4722                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  4723   300001                     	org	3145729
  4724   300001  22                 	db	34
  4725                           
  4726                           ;Config register CONFIG2L @ 0x300002
  4727                           ;	Power-up Timer Enable bit
  4728                           ;	PWRT = OFF, PWRT disabled
  4729                           ;	Brown-out Reset Enable bit
  4730                           ;	BOR = ON, Brown-out Reset enabled
  4731                           ;	Brown-out Reset Voltage bits
  4732                           ;	BORV = 20, VBOR set to 2.0V
  4733   300002                     	org	3145730
  4734   300002  0F                 	db	15
  4735                           
  4736                           ;Config register CONFIG2H @ 0x300003
  4737                           ;	Watchdog Timer Enable bit
  4738                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4739                           ;	Watchdog Timer Postscale Select bits
  4740                           ;	WDTPS = 128, 1:128
  4741   300003                     	org	3145731
  4742   300003  0E                 	db	14
  4743                           
  4744                           ; Padding undefined space
  4745   300004                     	org	3145732
  4746   300004  FF                 	db	255
  4747                           
  4748                           ;Config register CONFIG3H @ 0x300005
  4749                           ;	CCP2 Mux bit
  4750                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  4751   300005                     	org	3145733
  4752   300005  01                 	db	1
  4753                           
  4754                           ;Config register CONFIG4L @ 0x300006
  4755                           ;	Stack Full/Underflow Reset Enable bit
  4756                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  4757                           ;	Low Voltage ICSP Enable bit
  4758                           ;	LVP = OFF, Low Voltage ICSP disabled
  4759                           ;	Background Debugger Enable bit
  4760                           ;	DEBUG = 0x1, unprogrammed default
  4761   300006                     	org	3145734
  4762   300006  81                 	db	129
  4763                           
  4764                           ; Padding undefined space
  4765   300007                     	org	3145735
  4766   300007  FF                 	db	255
  4767                           
  4768                           ;Config register CONFIG5L @ 0x300008
  4769                           ;	Code Protection bit
  4770                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  4771                           ;	Code Protection bit
  4772                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4773                           ;	Code Protection bit
  4774                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4775                           ;	Code Protection bit
  4776                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4777   300008                     	org	3145736
  4778   300008  0F                 	db	15
  4779                           
  4780                           ;Config register CONFIG5H @ 0x300009
  4781                           ;	Boot Block Code Protection bit
  4782                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4783                           ;	Data EEPROM Code Protection bit
  4784                           ;	CPD = OFF, Data EEPROM not code protected
  4785   300009                     	org	3145737
  4786   300009  C0                 	db	192
  4787                           
  4788                           ;Config register CONFIG6L @ 0x30000A
  4789                           ;	Write Protection bit
  4790                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4791                           ;	Write Protection bit
  4792                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4793                           ;	Write Protection bit
  4794                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4795                           ;	Write Protection bit
  4796                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4797   30000A                     	org	3145738
  4798   30000A  0F                 	db	15
  4799                           
  4800                           ;Config register CONFIG6H @ 0x30000B
  4801                           ;	Configuration Register Write Protection bit
  4802                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4803                           ;	Boot Block Write Protection bit
  4804                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4805                           ;	Data EEPROM Write Protection bit
  4806                           ;	WRTD = OFF, Data EEPROM not write protected
  4807   30000B                     	org	3145739
  4808   30000B  E0                 	db	224
  4809                           
  4810                           ;Config register CONFIG7L @ 0x30000C
  4811                           ;	Table Read Protection bit
  4812                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4813                           ;	Table Read Protection bit
  4814                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4815                           ;	Table Read Protection bit
  4816                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4817                           ;	Table Read Protection bit
  4818                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4819   30000C                     	org	3145740
  4820   30000C  0F                 	db	15
  4821                           
  4822                           ;Config register CONFIG7H @ 0x30000D
  4823                           ;	Boot Block Table Read Protection bit
  4824                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4825   30000D                     	org	3145741
  4826   30000D  40                 	db	64
  4827                           tosu	equ	0xFFF
  4828                           tosh	equ	0xFFE
  4829                           tosl	equ	0xFFD
  4830                           stkptr	equ	0xFFC
  4831                           pclatu	equ	0xFFB
  4832                           pclath	equ	0xFFA
  4833                           pcl	equ	0xFF9
  4834                           tblptru	equ	0xFF8
  4835                           tblptrh	equ	0xFF7
  4836                           tblptrl	equ	0xFF6
  4837                           tablat	equ	0xFF5
  4838                           prodh	equ	0xFF4
  4839                           prodl	equ	0xFF3
  4840                           indf0	equ	0xFEF
  4841                           postinc0	equ	0xFEE
  4842                           postdec0	equ	0xFED
  4843                           preinc0	equ	0xFEC
  4844                           plusw0	equ	0xFEB
  4845                           fsr0h	equ	0xFEA
  4846                           fsr0l	equ	0xFE9
  4847                           wreg	equ	0xFE8
  4848                           indf1	equ	0xFE7
  4849                           postinc1	equ	0xFE6
  4850                           postdec1	equ	0xFE5
  4851                           preinc1	equ	0xFE4
  4852                           plusw1	equ	0xFE3
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           bsr	equ	0xFE0
  4856                           indf2	equ	0xFDF
  4857                           postinc2	equ	0xFDE
  4858                           postdec2	equ	0xFDD
  4859                           preinc2	equ	0xFDC
  4860                           plusw2	equ	0xFDB
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    124
    Data        8
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    119     127
    BANK0           128      0      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[5]), STR_3(CODE[3]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[5]), STR_3(CODE[3]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[5]), STR_3(CODE[3]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1259$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[5]), STR_3(CODE[3]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 33
		 -> lcd(BANK0[33]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1206$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1206$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 33
		 -> lcd(BANK0[33]), 

    memset@s	PTR unsigned char  size(2) Largest target is 33
		 -> lcd(BANK0[33]), 

    debouncers	PTR FTN()void [4] size(2) Largest target is 1
		 -> debounce_col_3(), debounce_col_2(), debounce_col_1(), debounce_col_0(), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> lcd(BANK0[33]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_update->_lcd_data
    _lcd_cls->_memset
    _lcd_cgram->_lcd_data
    _get_pressed_button->_get_pressed_button_col

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   16068
                                            109 COMRAM    10    10      0
                       _buttons_init
                    _debounce_button
                  _eeprom_93c46_init
                  _eeprom_93c46_read
                 _get_pressed_button
                          _lcd_cgram
                            _lcd_cls
                           _lcd_init
                         _lcd_update
                           _led_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    9157
                                             90 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8348
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6    7996
                                             62 COMRAM    20    14      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    2744
                                             27 COMRAM    35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3877
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2227
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                           4     4      0    1594
                                              4 COMRAM     4     4      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    2405
                                             12 COMRAM     1     1      0
                            _lcd_cls
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_cls                                              0     0      0     947
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6     947
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _lcd_cgram                                            0     0      0    1458
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             4     3      1    1458
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _get_pressed_button                                   4     2      2     181
                                              2 COMRAM     4     2      2
             _get_pressed_button_col
 ---------------------------------------------------------------------------------
 (2) _get_pressed_button_col                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _eeprom_93c46_read                                    2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _eeprom_93c46_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debounce_button                                      5     3      2     121
                                              0 COMRAM     5     3      2
                     _debounce_col_0 *
                     _debounce_col_1 *
                     _debounce_col_2 *
                     _debounce_col_3 *
 ---------------------------------------------------------------------------------
 (2) _debounce_col_3                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _debounce_col_2                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _debounce_col_1                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _debounce_col_0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttons_init
   _debounce_button
     _debounce_col_0 *
     _debounce_col_1 *
     _debounce_col_2 *
     _debounce_col_3 *
   _eeprom_93c46_init
   _eeprom_93c46_read
   _get_pressed_button
     _get_pressed_button_col
   _lcd_cgram
     _lcd_data
   _lcd_cls
     _memset
   _lcd_init
     _lcd_cls
     _lcd_data
   _lcd_update
     _lcd_data
   _led_init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _xtoa
           _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      51       5       63.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     77      7F       1      100.0%
BITBIGSFRhhl        5A      0       0      17        0.0%
BITBIGSFRhhh         E      0       0      16        0.0%
BITBIGSFRhllll       6      0       0      20        0.0%
BITBIGSFRhllh        4      0       0      18        0.0%
BITBIGSFRhlllh       1      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0      21        0.0%
DATA                 0      0      D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 29 22:18:00 2022

                                                          _d 007A  
                                                          _h 007C  
                                                         _L1 0659  
                                                         _L2 0655  
                                                         _L3 0651  
                                                         _L4 064D  
                                                         _L5 0649  
                                                         _L6 0645  
                                                         _P1 0641  
                                                         _P2 063D  
                                                         _P3 0639  
                                                         _P4 0635  
                                                         _P5 0631  
                                                         l82 1A4C  
                                                         l91 1B54  
                                                         l84 1A74  
                                                         l78 1B66  
                                                         _bp 0669  
                                                         _cp 061D  
                                                        l122 1A96  
                                                        l115 178C  
                                                        l116 1792  
                                                        l132 185A  
                                                        l151 1B3A  
                                                        l119 190E  
                                                        l161 13C8  
                                                        l129 1604  
                                                        l154 16B6  
                                                        l162 147E  
                                                        l314 0F06  
                                                        l171 1AFC  
                                                        l155 171C  
                                                        l163 1402  
                                                        l180 1AA4  
                                                        l156 16D6  
                                                        l164 143C  
                                                        l181 1AA0  
                                                        l157 16F6  
                                                        l165 1476  
                                                        l174 1AC6  
                                                        l158 1716  
                                                        l175 1AC2  
                                                        l183 1AB8  
                                                        l327 1230  
                                                        l168 1AE8  
                                                        l169 1AE4  
                                                        l177 1ADA  
                                                        l186 1B0A  
                                                        l194 17FA  
                                                        l187 1B06  
                                                        l189 1B1E  
                                                        l910 1632  
                                                        l921 0738  
                                                        l914 1692  
                                                        l922 078C  
                                                        l933 0946  
                                                        l919 072E  
                                                        l937 0BC6  
                                                        l875 109E  
                                                        l939 0BD0  
                                                        l972 19F0  
                                                        l956 0B94  
                                                        l949 0D52  
                                                        l975 19FA  
                                                        l968 18B6  
                                                        l888 1960  
                                                        l987 1560  
                                                        l995 19B0  
                                                        u801 0DD2  
                                                        u810 0DF8  
                                                        u730 149A  
                                                        u811 0DF2  
                                                        u731 1494  
                                                        u820 0E2A  
                                                        u900 11EC  
                                                        u740 14B0  
                                                        u821 0E24  
                                                        u901 11E6  
                                                        u741 14AA  
                                                        u830 0E70  
                                                        u750 14DE  
                                                        u910 161A  
                                                        u831 0E6A  
                                                        u751 14D8  
                                                        u911 1614  
                                                        u840 0EC2  
                                                        u760 1518  
                                                        u920 167C  
                                                        u841 0EBC  
                                                        u761 1512  
                                                        u921 1676  
                                                        u850 10BA  
                                                        u930 19D2  
                                                        u770 19AE  
                                                        u851 10B4  
                                                        u931 19CC  
                                                        u771 19A8  
                                                        u780 0D6C  
                                                        u860 10F2  
                                                        u940 06C6  
                                                        u781 0D66  
                                                        u861 10EC  
                                                        u941 06BE  
                                                        u790 0DA4  
                                                        u870 1136  
                                                        u950 06CA  
                                                        u791 0D9E  
                                                        u871 1130  
                                                        u880 1168  
                                                        u960 06E0  
                                                        u881 1162  
                                                        u961 06DA  
                                                        u890 119C  
                                                        u970 0720  
                                                        u891 1196  
                                                        u971 071A  
                                                        u980 0754  
                                                        u981 074E  
                                                        u990 076E  
                                                        u991 0768  
                                                        _lg2 062D  
                                                        _abs 19B4  
                                                        _lcd 0088  
                                                        _pad 1608  
                                                        _ovt 0621  
                                                        tosl 000FFD  
                                                        wreg 000FE8  
                                                       l2001 167E  
                                                       l2003 19B6  
                                                       l2011 06CE  
                                                       ?_abs 0013  
                                                       l2101 0F2E  
                                                       l2005 19D4  
                                                       l2021 0756  
                                                       l2013 06E2  
                                                       l2103 0F3C  
                                                       l2031 0796  
                                                       l2023 075C  
                                                       l2015 0702  
                                                       l2007 0694  
                                                       l2201 174C  
                                                       l2121 1070  
                                                       l2113 0FEE  
                                                       l2041 0836  
                                                       l2033 07A0  
                                                       l2025 0770  
                                                       l2017 0722  
                                                       l2009 06B4  
                                                       l2211 1758  
                                                       l2203 174E  
                                                       l2123 107E  
                                                       l2115 101C  
                                                       l2107 0F76  
                                                       l2051 090E  
                                                       l2035 07A8  
                                                       l2043 089A  
                                                       l2027 077C  
                                                       l2019 0742  
                                                       l2131 0976  
                                                       l2221 1764  
                                                       l2213 175A  
                                                       l2205 1752  
                                                       l2125 1084  
                                                       l2109 0FD0  
                                                       l2301 18BC  
                                                       l2053 0914  
                                                       l2045 08BA  
                                                       l2037 082A  
                                                       l2029 0786  
                                                       l2061 0BBA  
                                                       l2141 09C8  
                                                       l2133 0984  
                                                       l2231 1774  
                                                       l2223 1766  
                                                       l2215 175C  
                                                       l2207 1754  
                                                       l2127 1088  
                                                       l2119 103A  
                                                       l2311 18C8  
                                                       l2303 18C0  
                                                       l2055 0924  
                                                       l2047 08DC  
                                                       l2039 0830  
                                                       l2071 0C1A  
                                                       l2063 0BFA  
                                                       l2151 0A94  
                                                       l2143 09E8  
                                                       l2135 0992  
                                                       l2401 1798  
                                                       l2241 16CA  
                                                       l2233 1776  
                                                       l2225 1768  
                                                       l2217 175E  
                                                       l2209 1756  
                                                       l2321 1900  
                                                       l2313 18D8  
                                                       l2305 18C2  
                                                       l2049 08F8  
                                                       l2081 0C62  
                                                       l2073 0C2E  
                                                       l2065 0C02  
                                                       l2153 0AF0  
                                                       l2161 0B54  
                                                       l2145 0A40  
                                                       l2137 0996  
                                                       l2129 094C  
                                                       l2411 17F4  
                                                       l2403 17A0  
                                                       l2235 1698  
                                                       l2227 1770  
                                                       l2219 1762  
                                                       l2323 190A  
                                                       l2315 18E2  
                                                       l2307 18C4  
                                                       l2091 0D14  
                                                       l2083 0C68  
                                                       l2075 0C3E  
                                                       l2067 0C0C  
                                                       l2059 0B9C  
                                                       l2139 09A6  
                                                       l2331 1924  
                                                       l1188 1B74  
                                                       l2253 1ADE  
                                                       l2413 17F6  
                                                       l2405 17B0  
                                                       l2421 1A68  
                                                       l2245 16EA  
                                                       l2237 16AA  
                                                       l2229 1772  
                                                       l2181 1738  
                                                       l2325 1800  
                                                       l2317 18EC  
                                                       l2309 18C6  
                                                       l2341 1568  
                                                       l2093 0D30  
                                                       l2085 0C6E  
                                                       l2077 0C4C  
                                                       l2069 0C14  
                                                       l2149 0A70  
                                                       l2165 0B68  
                                                       l2261 1860  
                                                       l2333 192C  
                                                       l2255 1ABC  
                                                       l2415 17F8  
                                                       l2407 17E2  
                                                       l2327 1B5A  
                                                       l2423 1A6C  
                                                       l2191 1742  
                                                       l2183 173A  
                                                       l2175 1A7A  
                                                       l2319 18F6  
                                                       l2351 1592  
                                                       l2343 1572  
                                                       l2271 1B40  
                                                       l2079 0C52  
                                                       l2087 0CD0  
                                                       l2159 0B22  
                                                       l2263 186C  
                                                       l2335 1934  
                                                       l2431 123E  
                                                       l2257 1A9A  
                                                       l2409 17F2  
                                                       l2417 1A44  
                                                       l2249 170A  
                                                       l2193 1744  
                                                       l2185 173C  
                                                       l2177 1726  
                                                       l2097 0F0C  
                                                       l2353 1596  
                                                       l2281 1B4C  
                                                       l2273 1B44  
                                                       l2089 0CF2  
                                                       l2265 188A  
                                                       l2337 1950  
                                                       l2329 1914  
                                                       l2441 1256  
                                                       l2433 1242  
                                                       l2291 1B30  
                                                       l2259 1B00  
                                                       l2419 1A50  
                                                       l2371 1398  
                                                       l2195 1746  
                                                       l2187 173E  
                                                       l2179 1734  
                                                       l2363 15C8  
                                                       l2355 15B6  
                                                       l2283 1B4E  
                                                       l2275 1B46  
                                                       l2267 18AE  
                                                       l2451 1288  
                                                       l2443 1256  
                                                       l2435 1246  
                                                       l2427 1234  
                                                       l2293 1B32  
                                                       l2381 13F2  
                                                       l2373 13A4  
                                                       l2197 1748  
                                                       l2189 1740  
                                                       l2365 15E0  
                                                       l2357 15C0  
                                                       l2349 157A  
                                                       l2285 1B50  
                                                       l2277 1B48  
                                                       l1901 1966  
                                                       l2461 12C8  
                                                       l2453 1296  
                                                       l2445 125E  
                                                       l2437 124A  
                                                       l2429 123A  
                                                       l2295 1B34  
                                                       l2375 13BC  
                                                       l2199 174A  
                                                       l2367 15E4  
                                                       l2287 1B52  
                                                       l2279 1B4A  
                                                       l1911 0D5C  
                                                       l1903 1972  
                                                       l2535 1378  
                                                       l2471 1312  
                                                       l2463 12E0  
                                                       l2447 1262  
                                                       l2439 124E  
                                                       l2297 1B36  
                                                       l2289 1B24  
                                                       l2393 1442  
                                                       l2385 1408  
                                                       l2377 13CE  
                                                       l2369 1396  
                                                       l1921 0DC6  
                                                       l1913 0D6E  
                                                       l1905 1986  
                                                       l2537 0B44  
                                                       l2473 1320  
                                                       l2465 12EC  
                                                       l2457 12B2  
                                                       l2481 1360  
                                                       l2449 127E  
                                                       l2299 1B38  
                                                       l2395 144E  
                                                       l2387 1414  
                                                       l2379 13DA  
                                                       l1931 0E18  
                                                       l1923 0DCA  
                                                       l1915 0D8E  
                                                       l1907 198A  
                                                       l2475 1324  
                                                       l2467 12F2  
                                                       l2459 12C0  
                                                       l2397 1466  
                                                       l2389 142C  
                                                       l1941 0E94  
                                                       l1933 0E2C  
                                                       l1925 0DD8  
                                                       l1917 0D92  
                                                       l1909 0D58  
                                                       l2477 1340  
                                                       l1943 0EA8  
                                                       l1935 0E40  
                                                       l1927 0DFA  
                                                       l1919 0DA6  
                                                       l1937 0E72  
                                                       l1929 0E02  
                                                       l1945 0EAE  
                                                       l1961 10E0  
                                                       l1953 10A6  
                                                       l1947 0EC4  
                                                       l1939 0E92  
                                                       l1971 1156  
                                                       l1963 10F4  
                                                       l1955 10AA  
                                                       l1891 14B0  
                                                       l1949 0EE4  
                                                       l1973 116A  
                                                       l1981 11D8  
                                                       l1965 1114  
                                                       l1957 10BC  
                                                       l1893 14BC  
                                                       ?_pad 0011  
                                                       l1983 11EE  
                                                       l1975 119E  
                                                       l1967 1138  
                                                       l1959 10DC  
                                                       l1895 14E0  
                                                       l1887 1486  
                                                       l1991 161C  
                                                       l1985 120E  
                                                       l1977 11BE  
                                                       l1969 1140  
                                                       l1897 1518  
                                                       l1889 149C  
                                                       l1993 1628  
                                                       l1979 11D2  
                                                       l1995 1640  
                                                       l1997 1656  
                                                       l1989 160A  
                                                       l1999 165A  
                                                       STR_1 067D  
                                                       STR_2 067D  
                                                       STR_3 0689  
                                                       STR_4 068C  
                                                       u1000 08B8  
                                                       u1001 08B2  
                                                       u1010 08DA  
                                                       u1011 08D4  
                                                       u1100 0F28  
                                                       u1020 08F8  
                                                       u1101 0F22  
                                                       u1021 08F2  
                                                       u1110 0F70  
                                                       u1030 090C  
                                                       u1111 0F6A  
                                                       u1031 0906  
                                                       u1200 178A  
                                                       u1120 0FE8  
                                                       u1040 0BB8  
                                                       u1201 1784  
                                                       u1121 0FE2  
                                                       u1041 0BB2  
                                                       u1210 16A8  
                                                       u1130 1034  
                                                       u1050 0C2C  
                                                       u1211 16A2  
                                                       u1131 102E  
                                                       u1051 0C26  
                                                       u1220 16C8  
                                                       u1140 109E  
                                                       u1300 15B4  
                                                       u1060 0CA8  
                                                       u1221 16C2  
                                                       u1141 1098  
                                                       u1301 15AE  
                                                       u1230 16E8  
                                                       u1310 1602  
                                                       u1070 0CF0  
                                                       u1150 0974  
                                                       u1231 16E2  
                                                       u1311 15FC  
                                                       u1071 0CEA  
                                                       u1151 096E  
                                                       u1240 1708  
                                                       u1320 13BA  
                                                       u1080 0D12  
                                                       u1160 09C6  
                                                       u1241 1702  
                                                       u1321 13B4  
                                                       u1081 0D0C  
                                                       u1065 0C94  
                                                       u1161 09C0  
                                                       u1250 1AFA  
                                                       u1330 13F0  
                                                       u1090 0D30  
                                                       u1170 09E8  
                                                       u1251 1AF4  
                                                       u1331 13EA  
                                                       u1091 0D2A  
                                                       u1171 09E2  
                                                       u1260 1AD8  
                                                       u1340 142A  
                                                       u1180 0A92  
                                                       u1261 1AD2  
                                                       u1341 1424  
                                                       u1181 0A8C  
                                                       u1270 1AB6  
                                                       u1350 1464  
                                                       u1271 1AB0  
                                                       u1351 145E  
                                                       u1407 18CE  
                                                       u1280 1B1C  
                                                       _LATD 000F8C  
                                                       u1281 1B16  
                                                       u1417 17A6  
                                                       u1370 1A66  
                                                       u1290 18AC  
                                                       u1427 17E8  
                                                       u1371 1A60  
                                                       u1195 1732  
                                                       u1291 18A6  
                                                       u1196 1734  
                                                       u1380 12AC  
                                                       u1381 12A6  
                                                       u1390 12DE  
                                                       u1391 12D8  
                                                       u1368 17C8  
                                                       u1369 17E0  
                                                       abs@a 0013  
                                                       _dbuf 00A9  
                                                       _cp_h 0679  
                                                       _cp_l 0675  
                                                       _dp_h 0609  
                                                       _dp_l 0601  
                                                lcd_update@i 0005  
                                                       _main 1234  
                                                       _dtoa 0692  
                                                       _huge 0661  
                                                       _prec 0078  
                                                       pad@i 0018  
                                                       pad@p 0015  
                                                       _tiny 065D  
                                                       fsr1h 000FE2  
                                                       fsr2h 000FDA  
                                                       indf2 000FDF  
                                                       fsr1l 000FE1  
                                                       pad@w 001A  
                                                       fsr2l 000FD9  
                                                       _xtoa 0B9A  
                                                       start 0002  
                                               ___param_bank 000000  
                                                      ??_abs 0015  
                                                      ??_pad 0017  
                                            __end_of___aodiv 0F0A  
                                                      ?_main 0001  
                                                      ?_dtoa 001C  
                                            __end_of___aomod 1234  
                                                      ?_xtoa 001C  
                                               vfpfcnvrt@fmt 0041  
                                                      _TRISA 000F92  
                                                      _TRISB 000F93  
                                                      _TRISD 000F95  
                                            __end_of_lcd_cls 1A9A  
                                                      _lg2_h 0629  
                                                      _lg2_l 0625  
                                                      _flags 007E  
                                                      _errno 0084  
                                                      _ivln2 0619  
                                                      _fputc 1484  
                                                      _fputs 1964  
                                            __end_of_ivln2_h 0675  
                                            __end_of_ivln2_l 0619  
                                                      _two24 0665  
                                                      pad@fp 0011  
                                                      _width 0086  
                                                      _state 007F  
                                                      _putch 1B72  
                                                      main@d 0072  
                                                      main@i 0074  
                                                      dtoa@d 001E  
                                                      dtoa@i 003C  
                                                      dtoa@n 0034  
                                                      dtoa@p 0030  
                                                      dtoa@s 003E  
                                                      dtoa@w 0032  
                                                      pclath 000FFA  
                                                      tablat 000FF5  
                                                      status 000FD8  
                                            __end_of_sprintf 1964  
                                                      xtoa@c 003E  
                                                      xtoa@d 001E  
                                                      xtoa@i 003C  
                                                      xtoa@n 0034  
                                                      xtoa@p 0032  
                                                      xtoa@w 002E  
                                          ??_debounce_button 0003  
                                            __initialization 1A00  
                                               __end_of_cp_h 067D  
                                               __end_of_cp_l 0679  
                                               __end_of_dp_h 0611  
                                               __end_of_dp_l 0609  
                                               __end_of_main 1394  
                                               __end_of_dtoa 094A  
                                               __end_of_huge 0665  
                                               __end_of_tiny 0661  
                                               __end_of_xtoa 0D56  
                                                     ??_main 006E  
                                                     ??_dtoa 0026  
                                                     ??_xtoa 0026  
                                              __activetblptr 000002  
                                                     ?_fputc 0001  
                                                     ?_fputs 000A  
                                                     ?_putch 0001  
                                             _debounce_col_0 1ADE  
                                             _debounce_col_1 1ABC  
                                             _debounce_col_2 1A9A  
                                             _debounce_col_3 1B00  
                                           __end_of_lcd_data 1796  
                                              ?_buttons_init 0001  
                                               vfprintf@cfmt 0059  
                                           __end_of_lcd_init 1912  
                                           __end_of_led_init 1B58  
                                                  ??___aodiv 0011  
                                                  ??___aomod 0011  
                                                     _memset 0F0A  
                                                     clear_0 1A26  
                                                     clear_1 1A32  
                                                     isa$std 000001  
                                                     pad@buf 0013  
                                                     main@id 0076  
                                                  ??_lcd_cls 000D  
                                                     dtoa@fp 001C  
                                                     fputc@c 0001  
                                                     fputs@c 000E  
                                                     fputs@i 000F  
                                                     fputs@s 000A  
                                               __mediumconst 0000  
                                                     tblptrh 000FF7  
                                                     tblptrl 000FF6  
                                                     tblptru 000FF8  
                                                     putch@c 0001  
                                           __end_of_vfprintf 18BA  
                                           _tiny@sqrtf$F1482 0611  
                                                  ??_sprintf 0061  
                                                     xtoa@fp 001C  
                                     __end_of_debounce_col_0 1B00  
                                     __end_of_debounce_col_1 1ADE  
                                     __end_of_debounce_col_2 1ABC  
                                     __end_of_debounce_col_3 1B22  
                                                 __accesstop 0080  
                                    __end_of__initialization 1A38  
                                              ___rparam_used 000001  
                                             ??_buttons_init 0001  
                                             __pcstackCOMRAM 0001  
                                               __pidataBANK0 1B6A  
                                              __end_of_lg2_h 062D  
                                              __end_of_lg2_l 0629  
                                              __end_of_ivln2 061D  
                                              __end_of_fputc 1566  
                                              __end_of_fputs 19B4  
                                              __end_of_two24 0669  
                                              __end_of_putch 1B78  
                                                 __end_of_L1 065D  
                                                 __end_of_L2 0659  
                                                 __end_of_L3 0655  
                                                 __end_of_L4 0651  
                                                 __end_of_L5 064D  
                                                 __end_of_L6 0649  
                                                 __end_of_P1 0645  
                                                 __end_of_P2 0641  
                                                 __end_of_P3 063D  
                                                 __end_of_P4 0639  
                                                 __end_of_P5 0635  
                                                 __end_of_bp 0671  
                                                 __end_of_cp 0621  
                                          debounce_button@id 0001  
                                                    ??_fputc 0005  
                                                    ??_fputs 000E  
                                            ?_debounce_col_0 0001  
                                            ?_debounce_col_1 0001  
                                            ?_debounce_col_2 0001  
                                            ?_debounce_col_3 0001  
                                                    ??_putch 0001  
                                                 __pbssBANK0 0080  
                                                 _debouncers 00C9  
                                                    ?_memset 0001  
                                                 _lcd_update 1566  
                                            _debounce_button 1796  
                                                  ?_lcd_data 0001  
                                                  ?_lcd_init 0001  
                                                  ?_led_init 0001  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                          __end_of_lcd_cgram 185E  
                                   ??_get_pressed_button_col 0003  
                                                    ___aodiv 0D56  
                                                    ___aomod 10A4  
                                                  ?_vfprintf 0053  
                                               __psmallconst 0600  
                                                    __pcinit 1A00  
                                                    __ramtop 0600  
                                                    __ptext0 1234  
                                                    __ptext1 1912  
                                                    __ptext2 185E  
                                                    __ptext3 094A  
                                                    __ptext4 0B9A  
                                                    __ptext5 0692  
                                                    __ptext6 1608  
                                                    __ptext7 1964  
                                                    __ptext8 1484  
                                                    __ptext9 1B72  
                                                    _lcd_cls 1A78  
                                                    _ivln2_h 0671  
                                                    _ivln2_l 0615  
                                       __end_of_buttons_init 1B3E  
                                                 ??_lcd_data 0002  
                                                    _sprintf 1912  
                                                 ??_lcd_init 000D  
                                                 ??_led_init 0001  
                                       end_of_initialization 1A38  
                                                    fputc@fp 0003  
                                                    memset@c 0003  
                                                    memset@k 0009  
                                                    memset@n 0005  
                                                    memset@s 000B  
                                              __Lmediumconst 0000  
                                                    fputs@fp 000C  
                                          __end_of_vfpfcnvrt 0B9A  
                                                    postdec1 000FE5  
                                                    postdec2 000FDD  
                                                    postinc0 000FEE  
                                                    postinc1 000FE6  
                                                    postinc2 000FDE  
                                           vfpfcnvrt@convarg 0049  
                                   __end_of_tiny@sqrtf$F1482 0615  
                                                 ??_vfprintf 0059  
                                                  _PORTAbits 000F80  
                                                  _PORTBbits 000F81  
                                                  _PORTCbits 000F82  
                                                  _PORTDbits 000F83  
                                    __end_of_debounce_button 17FE  
                                                  _TRISAbits 000F92  
                                                  _TRISCbits 000F94  
                                                  _TRISEbits 000F96  
                                                 lcd_data@bf 0003  
                                                 lcd_data@rs 0001  
                                                ?_lcd_update 0001  
                                                vfpfcnvrt@ap 0043  
                                                vfpfcnvrt@cp 0051  
                                                vfpfcnvrt@fp 003F  
                                             __end_of_memset 10A4  
                                           ??_debounce_col_0 0001  
                                           ??_debounce_col_1 0001  
                                           ??_debounce_col_2 0001  
                                           ??_debounce_col_3 0001  
                                        start_initialization 1A00  
                                                __end_of_lg2 0631  
                                                __end_of_abs 1A00  
                                                __end_of_pad 1696  
                                                __end_of_ovt 0625  
                                          _eeprom_93c46_init 1B58  
                                          _eeprom_93c46_read 1A42  
                                         debounce_button@col 0004  
                                                vfprintf@fmt 0055  
                                         ?_eeprom_93c46_init 0001  
                                         ?_eeprom_93c46_read 0001  
                                                __pdataBANK0 00C9  
                                                   ??_memset 0007  
                                                 memset@dest 0001  
                                 __end_of_get_pressed_button 1484  
                                        ??_eeprom_93c46_init 0001  
                                        ??_eeprom_93c46_read 0003  
                                           ?_debounce_button 0001  
                                                __pbssCOMRAM 0078  
                                           ___aodiv@dividend 0001  
                                     _get_pressed_button_col 1696  
                                  __end_of_eeprom_93c46_init 1B6A  
                                  __end_of_eeprom_93c46_read 1A78  
                                                  _dtoa$1287 002E  
                                               _buttons_init 1B22  
                                                   ?___aodiv 0001  
                                                   ?___aomod 0001  
                                           ___aodiv@quotient 0013  
                                                  _lcd_cgram 17FE  
                                       lcd_data@trisd_backup 0004  
                                                   ?_lcd_cls 0001  
                                                  fabsf@F465 0080  
                                                __smallconst 0600  
                                                   ?_sprintf 005B  
                                                   _LATBbits 000F8A  
                                                   _LATDbits 000F8C  
                                                   _LATEbits 000F8D  
                                                 ?_lcd_cgram 0001  
                                                  _vfpfcnvrt 094A  
                                                  _xtoa$1297 0030  
                                                  lcd_data@b 0002  
                                                  main@state 0070  
                                               ??_lcd_update 0005  
                                      get_pressed_button@col 0005  
                                                _INTCON2bits 000FF1  
                                                  copy_data0 1A14  
                                                   __Hrparam 0000  
                                                 vfprintf@ap 0057  
                                                   __Lrparam 0000  
                                                 vfprintf@fp 0053  
                                         __end_of_lcd_update 1608  
                                                 ?_vfpfcnvrt 003F  
                                            ___aodiv@divisor 0009  
                                            ___aodiv@counter 0011  
                                                 sprintf@fmt 005D  
                                                   __ptext10 19B4  
                                                   __ptext11 10A4  
                                                   __ptext20 1394  
                                                   __ptext12 0D56  
                                                   __ptext21 1696  
                                                   __ptext13 1B3E  
                                                   __ptext30 1B78  
                                                   __ptext22 1A42  
                                                   __ptext14 1566  
                                                   __ptext23 1B58  
                                                   __ptext15 18BA  
                                                   __ptext24 1796  
                                                   __ptext16 1A78  
                                                   __ptext25 1A9A  
                                                   __ptext17 0F0A  
                                                   __ptext26 1ABC  
                                                   __ptext18 17FE  
                                                   __ptext27 1ADE  
                                                   __ptext19 1722  
                                                   __ptext28 1B00  
                                                   __ptext29 1B22  
                                            lcd_update@i_546 0007  
                                                   _lcd_data 1722  
                                                   _lcd_init 18BA  
                                                   _led_init 1B3E  
                                                   isa$xinst 000000  
                                                   _vfprintf 185E  
                                                ??_lcd_cgram 0005  
                                           ___aomod@dividend 0001  
                                    ?_get_pressed_button_col 0001  
                                                  sprintf@ap 0061  
                                         _get_pressed_button 1394  
                                        ?_get_pressed_button 0003  
                                            ___aomod@divisor 0009  
                                                ??_vfpfcnvrt 0045  
                                            ___aomod@counter 0011  
                             __end_of_get_pressed_button_col 1722  
                                                   sprintf@f 0063  
                                                   sprintf@s 005B  
                                       ??_get_pressed_button 0005  
                                               ___aodiv@sign 0012  
                                          fp__debounce_col_0 1B78  
                                          fp__debounce_col_1 1B78  
                                          fp__debounce_col_2 1B78  
                                          fp__debounce_col_3 1B78  
                                               ___aomod@sign 0012  
